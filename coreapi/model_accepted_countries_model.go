/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the AcceptedCountriesModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AcceptedCountriesModel{}

// AcceptedCountriesModel struct for AcceptedCountriesModel
type AcceptedCountriesModel struct {
	// Comma-delimited list of accepted countries by ISO 3166 three-digit country code.
	CountryCodes []string `json:"country_codes"`
	// Date and time when the accepted countries object was created, in UTC. This field is returned when included in your query.
	CreatedTime *time.Time `json:"created_time,omitempty"`
	// Specifies if the list of accepted countries in this object is an allow list. If set to `true`, transactions are accepted for all countries included in the object's `country_codes` array. If set to `false`, transactions are prohibited for all countries included in the object's `country_codes` array.
	IsWhitelist bool `json:"is_whitelist"`
	// Date and time when the accepted countries object was last updated, in UTC. This field is returned when included in your query.
	LastModifiedTime *time.Time `json:"last_modified_time,omitempty"`
	// Name of the `acceptedcountries` object.
	Name string `json:"name"`
	// The unique identifier of the `acceptedcountries` object.  This field is always returned.
	Token *string `json:"token,omitempty"`
}

// NewAcceptedCountriesModel instantiates a new AcceptedCountriesModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcceptedCountriesModel(countryCodes []string, isWhitelist bool, name string) *AcceptedCountriesModel {
	this := AcceptedCountriesModel{}
	this.CountryCodes = countryCodes
	this.IsWhitelist = isWhitelist
	this.Name = name
	return &this
}

// NewAcceptedCountriesModelWithDefaults instantiates a new AcceptedCountriesModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcceptedCountriesModelWithDefaults() *AcceptedCountriesModel {
	this := AcceptedCountriesModel{}
	var isWhitelist bool = false
	this.IsWhitelist = isWhitelist
	return &this
}

// GetCountryCodes returns the CountryCodes field value
func (o *AcceptedCountriesModel) GetCountryCodes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.CountryCodes
}

// GetCountryCodesOk returns a tuple with the CountryCodes field value
// and a boolean to check if the value has been set.
func (o *AcceptedCountriesModel) GetCountryCodesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryCodes, true
}

// SetCountryCodes sets field value
func (o *AcceptedCountriesModel) SetCountryCodes(v []string) {
	o.CountryCodes = v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *AcceptedCountriesModel) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptedCountriesModel) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *AcceptedCountriesModel) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *AcceptedCountriesModel) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetIsWhitelist returns the IsWhitelist field value
func (o *AcceptedCountriesModel) GetIsWhitelist() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsWhitelist
}

// GetIsWhitelistOk returns a tuple with the IsWhitelist field value
// and a boolean to check if the value has been set.
func (o *AcceptedCountriesModel) GetIsWhitelistOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsWhitelist, true
}

// SetIsWhitelist sets field value
func (o *AcceptedCountriesModel) SetIsWhitelist(v bool) {
	o.IsWhitelist = v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *AcceptedCountriesModel) GetLastModifiedTime() time.Time {
	if o == nil || IsNil(o.LastModifiedTime) {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptedCountriesModel) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedTime) {
		return nil, false
	}
	return o.LastModifiedTime, true
}

// HasLastModifiedTime returns a boolean if a field has been set.
func (o *AcceptedCountriesModel) HasLastModifiedTime() bool {
	if o != nil && !IsNil(o.LastModifiedTime) {
		return true
	}

	return false
}

// SetLastModifiedTime gets a reference to the given time.Time and assigns it to the LastModifiedTime field.
func (o *AcceptedCountriesModel) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = &v
}

// GetName returns the Name field value
func (o *AcceptedCountriesModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AcceptedCountriesModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AcceptedCountriesModel) SetName(v string) {
	o.Name = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *AcceptedCountriesModel) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptedCountriesModel) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *AcceptedCountriesModel) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *AcceptedCountriesModel) SetToken(v string) {
	o.Token = &v
}

func (o AcceptedCountriesModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AcceptedCountriesModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["country_codes"] = o.CountryCodes
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	toSerialize["is_whitelist"] = o.IsWhitelist
	if !IsNil(o.LastModifiedTime) {
		toSerialize["last_modified_time"] = o.LastModifiedTime
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableAcceptedCountriesModel struct {
	value *AcceptedCountriesModel
	isSet bool
}

func (v NullableAcceptedCountriesModel) Get() *AcceptedCountriesModel {
	return v.value
}

func (v *NullableAcceptedCountriesModel) Set(val *AcceptedCountriesModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAcceptedCountriesModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAcceptedCountriesModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcceptedCountriesModel(val *AcceptedCountriesModel) *NullableAcceptedCountriesModel {
	return &NullableAcceptedCountriesModel{value: val, isSet: true}
}

func (v NullableAcceptedCountriesModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcceptedCountriesModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


