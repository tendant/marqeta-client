/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the AccountConfigResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountConfigResponse{}

// AccountConfigResponse Contains information returned when configuring an account's billing cycle day, payment due day, fees, and more.
type AccountConfigResponse struct {
	// Day of month the billing cycle starts.
	BillingCycleDay *int32 `json:"billing_cycle_day,omitempty"`
	// The level of the credit card.
	CardLevel *string `json:"card_level,omitempty"`
	// A value of `true` indicates that the account holder consents to receiving disclosures and statements electronically.
	EDisclosureActive *bool `json:"e_disclosure_active,omitempty"`
	// Contains one or more fees associated with the credit account.
	Fees []ConfigFeeScheduleResponse `json:"fees,omitempty"`
	MinPayment *AccountConfigMinPayment `json:"min_payment,omitempty"`
	// Day of month the payment for the previous billing cycle is due.
	PaymentDueDay *int32 `json:"payment_due_day,omitempty"`
	PaymentHolds *AccountConfigPaymentHolds `json:"payment_holds,omitempty"`
	// Contains one or more rewards associated with the credit account.
	Rewards []AccountReward `json:"rewards,omitempty"`
}

// NewAccountConfigResponse instantiates a new AccountConfigResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountConfigResponse() *AccountConfigResponse {
	this := AccountConfigResponse{}
	var cardLevel string = "NA"
	this.CardLevel = &cardLevel
	var eDisclosureActive bool = false
	this.EDisclosureActive = &eDisclosureActive
	return &this
}

// NewAccountConfigResponseWithDefaults instantiates a new AccountConfigResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountConfigResponseWithDefaults() *AccountConfigResponse {
	this := AccountConfigResponse{}
	var cardLevel string = "NA"
	this.CardLevel = &cardLevel
	var eDisclosureActive bool = false
	this.EDisclosureActive = &eDisclosureActive
	return &this
}

// GetBillingCycleDay returns the BillingCycleDay field value if set, zero value otherwise.
func (o *AccountConfigResponse) GetBillingCycleDay() int32 {
	if o == nil || IsNil(o.BillingCycleDay) {
		var ret int32
		return ret
	}
	return *o.BillingCycleDay
}

// GetBillingCycleDayOk returns a tuple with the BillingCycleDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountConfigResponse) GetBillingCycleDayOk() (*int32, bool) {
	if o == nil || IsNil(o.BillingCycleDay) {
		return nil, false
	}
	return o.BillingCycleDay, true
}

// HasBillingCycleDay returns a boolean if a field has been set.
func (o *AccountConfigResponse) HasBillingCycleDay() bool {
	if o != nil && !IsNil(o.BillingCycleDay) {
		return true
	}

	return false
}

// SetBillingCycleDay gets a reference to the given int32 and assigns it to the BillingCycleDay field.
func (o *AccountConfigResponse) SetBillingCycleDay(v int32) {
	o.BillingCycleDay = &v
}

// GetCardLevel returns the CardLevel field value if set, zero value otherwise.
func (o *AccountConfigResponse) GetCardLevel() string {
	if o == nil || IsNil(o.CardLevel) {
		var ret string
		return ret
	}
	return *o.CardLevel
}

// GetCardLevelOk returns a tuple with the CardLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountConfigResponse) GetCardLevelOk() (*string, bool) {
	if o == nil || IsNil(o.CardLevel) {
		return nil, false
	}
	return o.CardLevel, true
}

// HasCardLevel returns a boolean if a field has been set.
func (o *AccountConfigResponse) HasCardLevel() bool {
	if o != nil && !IsNil(o.CardLevel) {
		return true
	}

	return false
}

// SetCardLevel gets a reference to the given string and assigns it to the CardLevel field.
func (o *AccountConfigResponse) SetCardLevel(v string) {
	o.CardLevel = &v
}

// GetEDisclosureActive returns the EDisclosureActive field value if set, zero value otherwise.
func (o *AccountConfigResponse) GetEDisclosureActive() bool {
	if o == nil || IsNil(o.EDisclosureActive) {
		var ret bool
		return ret
	}
	return *o.EDisclosureActive
}

// GetEDisclosureActiveOk returns a tuple with the EDisclosureActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountConfigResponse) GetEDisclosureActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.EDisclosureActive) {
		return nil, false
	}
	return o.EDisclosureActive, true
}

// HasEDisclosureActive returns a boolean if a field has been set.
func (o *AccountConfigResponse) HasEDisclosureActive() bool {
	if o != nil && !IsNil(o.EDisclosureActive) {
		return true
	}

	return false
}

// SetEDisclosureActive gets a reference to the given bool and assigns it to the EDisclosureActive field.
func (o *AccountConfigResponse) SetEDisclosureActive(v bool) {
	o.EDisclosureActive = &v
}

// GetFees returns the Fees field value if set, zero value otherwise.
func (o *AccountConfigResponse) GetFees() []ConfigFeeScheduleResponse {
	if o == nil || IsNil(o.Fees) {
		var ret []ConfigFeeScheduleResponse
		return ret
	}
	return o.Fees
}

// GetFeesOk returns a tuple with the Fees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountConfigResponse) GetFeesOk() ([]ConfigFeeScheduleResponse, bool) {
	if o == nil || IsNil(o.Fees) {
		return nil, false
	}
	return o.Fees, true
}

// HasFees returns a boolean if a field has been set.
func (o *AccountConfigResponse) HasFees() bool {
	if o != nil && !IsNil(o.Fees) {
		return true
	}

	return false
}

// SetFees gets a reference to the given []ConfigFeeScheduleResponse and assigns it to the Fees field.
func (o *AccountConfigResponse) SetFees(v []ConfigFeeScheduleResponse) {
	o.Fees = v
}

// GetMinPayment returns the MinPayment field value if set, zero value otherwise.
func (o *AccountConfigResponse) GetMinPayment() AccountConfigMinPayment {
	if o == nil || IsNil(o.MinPayment) {
		var ret AccountConfigMinPayment
		return ret
	}
	return *o.MinPayment
}

// GetMinPaymentOk returns a tuple with the MinPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountConfigResponse) GetMinPaymentOk() (*AccountConfigMinPayment, bool) {
	if o == nil || IsNil(o.MinPayment) {
		return nil, false
	}
	return o.MinPayment, true
}

// HasMinPayment returns a boolean if a field has been set.
func (o *AccountConfigResponse) HasMinPayment() bool {
	if o != nil && !IsNil(o.MinPayment) {
		return true
	}

	return false
}

// SetMinPayment gets a reference to the given AccountConfigMinPayment and assigns it to the MinPayment field.
func (o *AccountConfigResponse) SetMinPayment(v AccountConfigMinPayment) {
	o.MinPayment = &v
}

// GetPaymentDueDay returns the PaymentDueDay field value if set, zero value otherwise.
func (o *AccountConfigResponse) GetPaymentDueDay() int32 {
	if o == nil || IsNil(o.PaymentDueDay) {
		var ret int32
		return ret
	}
	return *o.PaymentDueDay
}

// GetPaymentDueDayOk returns a tuple with the PaymentDueDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountConfigResponse) GetPaymentDueDayOk() (*int32, bool) {
	if o == nil || IsNil(o.PaymentDueDay) {
		return nil, false
	}
	return o.PaymentDueDay, true
}

// HasPaymentDueDay returns a boolean if a field has been set.
func (o *AccountConfigResponse) HasPaymentDueDay() bool {
	if o != nil && !IsNil(o.PaymentDueDay) {
		return true
	}

	return false
}

// SetPaymentDueDay gets a reference to the given int32 and assigns it to the PaymentDueDay field.
func (o *AccountConfigResponse) SetPaymentDueDay(v int32) {
	o.PaymentDueDay = &v
}

// GetPaymentHolds returns the PaymentHolds field value if set, zero value otherwise.
func (o *AccountConfigResponse) GetPaymentHolds() AccountConfigPaymentHolds {
	if o == nil || IsNil(o.PaymentHolds) {
		var ret AccountConfigPaymentHolds
		return ret
	}
	return *o.PaymentHolds
}

// GetPaymentHoldsOk returns a tuple with the PaymentHolds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountConfigResponse) GetPaymentHoldsOk() (*AccountConfigPaymentHolds, bool) {
	if o == nil || IsNil(o.PaymentHolds) {
		return nil, false
	}
	return o.PaymentHolds, true
}

// HasPaymentHolds returns a boolean if a field has been set.
func (o *AccountConfigResponse) HasPaymentHolds() bool {
	if o != nil && !IsNil(o.PaymentHolds) {
		return true
	}

	return false
}

// SetPaymentHolds gets a reference to the given AccountConfigPaymentHolds and assigns it to the PaymentHolds field.
func (o *AccountConfigResponse) SetPaymentHolds(v AccountConfigPaymentHolds) {
	o.PaymentHolds = &v
}

// GetRewards returns the Rewards field value if set, zero value otherwise.
func (o *AccountConfigResponse) GetRewards() []AccountReward {
	if o == nil || IsNil(o.Rewards) {
		var ret []AccountReward
		return ret
	}
	return o.Rewards
}

// GetRewardsOk returns a tuple with the Rewards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountConfigResponse) GetRewardsOk() ([]AccountReward, bool) {
	if o == nil || IsNil(o.Rewards) {
		return nil, false
	}
	return o.Rewards, true
}

// HasRewards returns a boolean if a field has been set.
func (o *AccountConfigResponse) HasRewards() bool {
	if o != nil && !IsNil(o.Rewards) {
		return true
	}

	return false
}

// SetRewards gets a reference to the given []AccountReward and assigns it to the Rewards field.
func (o *AccountConfigResponse) SetRewards(v []AccountReward) {
	o.Rewards = v
}

func (o AccountConfigResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountConfigResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingCycleDay) {
		toSerialize["billing_cycle_day"] = o.BillingCycleDay
	}
	if !IsNil(o.CardLevel) {
		toSerialize["card_level"] = o.CardLevel
	}
	if !IsNil(o.EDisclosureActive) {
		toSerialize["e_disclosure_active"] = o.EDisclosureActive
	}
	if !IsNil(o.Fees) {
		toSerialize["fees"] = o.Fees
	}
	if !IsNil(o.MinPayment) {
		toSerialize["min_payment"] = o.MinPayment
	}
	if !IsNil(o.PaymentDueDay) {
		toSerialize["payment_due_day"] = o.PaymentDueDay
	}
	if !IsNil(o.PaymentHolds) {
		toSerialize["payment_holds"] = o.PaymentHolds
	}
	if !IsNil(o.Rewards) {
		toSerialize["rewards"] = o.Rewards
	}
	return toSerialize, nil
}

type NullableAccountConfigResponse struct {
	value *AccountConfigResponse
	isSet bool
}

func (v NullableAccountConfigResponse) Get() *AccountConfigResponse {
	return v.value
}

func (v *NullableAccountConfigResponse) Set(val *AccountConfigResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountConfigResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountConfigResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountConfigResponse(val *AccountConfigResponse) *NullableAccountConfigResponse {
	return &NullableAccountConfigResponse{value: val, isSet: true}
}

func (v NullableAccountConfigResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountConfigResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


