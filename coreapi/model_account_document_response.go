/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the AccountDocumentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountDocumentResponse{}

// AccountDocumentResponse Account document response.
type AccountDocumentResponse struct {
	// Date and time when the user accepted the document on Marqeta's credit platform, in UTC.
	AcceptedAt *time.Time `json:"accepted_at,omitempty"`
	// Unique identifier of the document on a credit account.
	AssetToken *string `json:"asset_token,omitempty"`
	AssetUrls *PolicyDocumentAssetURLs `json:"asset_urls,omitempty"`
	// Date and time when the document goes into effect on Marqeta's credit platform, in UTC.
	EffectiveFrom *time.Time `json:"effective_from,omitempty"`
}

// NewAccountDocumentResponse instantiates a new AccountDocumentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountDocumentResponse() *AccountDocumentResponse {
	this := AccountDocumentResponse{}
	return &this
}

// NewAccountDocumentResponseWithDefaults instantiates a new AccountDocumentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountDocumentResponseWithDefaults() *AccountDocumentResponse {
	this := AccountDocumentResponse{}
	return &this
}

// GetAcceptedAt returns the AcceptedAt field value if set, zero value otherwise.
func (o *AccountDocumentResponse) GetAcceptedAt() time.Time {
	if o == nil || IsNil(o.AcceptedAt) {
		var ret time.Time
		return ret
	}
	return *o.AcceptedAt
}

// GetAcceptedAtOk returns a tuple with the AcceptedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDocumentResponse) GetAcceptedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AcceptedAt) {
		return nil, false
	}
	return o.AcceptedAt, true
}

// HasAcceptedAt returns a boolean if a field has been set.
func (o *AccountDocumentResponse) HasAcceptedAt() bool {
	if o != nil && !IsNil(o.AcceptedAt) {
		return true
	}

	return false
}

// SetAcceptedAt gets a reference to the given time.Time and assigns it to the AcceptedAt field.
func (o *AccountDocumentResponse) SetAcceptedAt(v time.Time) {
	o.AcceptedAt = &v
}

// GetAssetToken returns the AssetToken field value if set, zero value otherwise.
func (o *AccountDocumentResponse) GetAssetToken() string {
	if o == nil || IsNil(o.AssetToken) {
		var ret string
		return ret
	}
	return *o.AssetToken
}

// GetAssetTokenOk returns a tuple with the AssetToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDocumentResponse) GetAssetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AssetToken) {
		return nil, false
	}
	return o.AssetToken, true
}

// HasAssetToken returns a boolean if a field has been set.
func (o *AccountDocumentResponse) HasAssetToken() bool {
	if o != nil && !IsNil(o.AssetToken) {
		return true
	}

	return false
}

// SetAssetToken gets a reference to the given string and assigns it to the AssetToken field.
func (o *AccountDocumentResponse) SetAssetToken(v string) {
	o.AssetToken = &v
}

// GetAssetUrls returns the AssetUrls field value if set, zero value otherwise.
func (o *AccountDocumentResponse) GetAssetUrls() PolicyDocumentAssetURLs {
	if o == nil || IsNil(o.AssetUrls) {
		var ret PolicyDocumentAssetURLs
		return ret
	}
	return *o.AssetUrls
}

// GetAssetUrlsOk returns a tuple with the AssetUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDocumentResponse) GetAssetUrlsOk() (*PolicyDocumentAssetURLs, bool) {
	if o == nil || IsNil(o.AssetUrls) {
		return nil, false
	}
	return o.AssetUrls, true
}

// HasAssetUrls returns a boolean if a field has been set.
func (o *AccountDocumentResponse) HasAssetUrls() bool {
	if o != nil && !IsNil(o.AssetUrls) {
		return true
	}

	return false
}

// SetAssetUrls gets a reference to the given PolicyDocumentAssetURLs and assigns it to the AssetUrls field.
func (o *AccountDocumentResponse) SetAssetUrls(v PolicyDocumentAssetURLs) {
	o.AssetUrls = &v
}

// GetEffectiveFrom returns the EffectiveFrom field value if set, zero value otherwise.
func (o *AccountDocumentResponse) GetEffectiveFrom() time.Time {
	if o == nil || IsNil(o.EffectiveFrom) {
		var ret time.Time
		return ret
	}
	return *o.EffectiveFrom
}

// GetEffectiveFromOk returns a tuple with the EffectiveFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountDocumentResponse) GetEffectiveFromOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EffectiveFrom) {
		return nil, false
	}
	return o.EffectiveFrom, true
}

// HasEffectiveFrom returns a boolean if a field has been set.
func (o *AccountDocumentResponse) HasEffectiveFrom() bool {
	if o != nil && !IsNil(o.EffectiveFrom) {
		return true
	}

	return false
}

// SetEffectiveFrom gets a reference to the given time.Time and assigns it to the EffectiveFrom field.
func (o *AccountDocumentResponse) SetEffectiveFrom(v time.Time) {
	o.EffectiveFrom = &v
}

func (o AccountDocumentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountDocumentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcceptedAt) {
		toSerialize["accepted_at"] = o.AcceptedAt
	}
	if !IsNil(o.AssetToken) {
		toSerialize["asset_token"] = o.AssetToken
	}
	if !IsNil(o.AssetUrls) {
		toSerialize["asset_urls"] = o.AssetUrls
	}
	if !IsNil(o.EffectiveFrom) {
		toSerialize["effective_from"] = o.EffectiveFrom
	}
	return toSerialize, nil
}

type NullableAccountDocumentResponse struct {
	value *AccountDocumentResponse
	isSet bool
}

func (v NullableAccountDocumentResponse) Get() *AccountDocumentResponse {
	return v.value
}

func (v *NullableAccountDocumentResponse) Set(val *AccountDocumentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountDocumentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountDocumentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountDocumentResponse(val *AccountDocumentResponse) *NullableAccountDocumentResponse {
	return &NullableAccountDocumentResponse{value: val, isSet: true}
}

func (v NullableAccountDocumentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountDocumentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


