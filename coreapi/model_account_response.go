/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the AccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountResponse{}

// AccountResponse Contains information on a credit account.
type AccountResponse struct {
	// Date and time when the credit account was activated on Marqeta's credit platform, in UTC.
	ActivationTime *time.Time `json:"activation_time,omitempty"`
	// Amount of credit available for use on the credit account.
	AvailableCredit float32 `json:"available_credit"`
	// Unique identifier of the associated bundle product.
	BundleToken *string `json:"bundle_token,omitempty"`
	Config AccountConfigResponse `json:"config"`
	// Date and time when the credit account was created on Marqeta's credit platform, in UTC.
	CreatedTime time.Time `json:"created_time"`
	// Maximum balance the credit account can carry.
	CreditLimit float32 `json:"credit_limit"`
	// Unique identifier of the associated credit product.
	CreditProductToken string `json:"credit_product_token"`
	CurrencyCode CurrencyCode `json:"currency_code"`
	// Current purchase balance on the credit account.
	CurrentBalance float32 `json:"current_balance"`
	// Description for the credit account.
	Description *string `json:"description,omitempty"`
	// Unique identifier you provide of the associated external credit offer.
	ExternalOfferId *string `json:"external_offer_id,omitempty"`
	LatestStatementCycleType CycleType `json:"latest_statement_cycle_type"`
	// Name of the credit account.
	Name *string `json:"name,omitempty"`
	// Amount remaining on the latest statement's minimum payment, after it's adjusted for payments, returned payments, and applicable credits that occurred after the latest statement's closing date.
	RemainingMinPaymentDue float32 `json:"remaining_min_payment_due"`
	// Amount remaining on the latest statement's balance, after it's adjusted for payments, returned payments, and applicable credits that occurred after the latest statement's closing date.
	RemainingStatementBalance float32 `json:"remaining_statement_balance"`
	Status AccountStatusEnum `json:"status"`
	// Unique identifier of the credit account.
	Token string `json:"token"`
	Type *AccountType `json:"type,omitempty"`
	// Date and time when the credit account was last updated on Marqeta's credit platform, in UTC.
	UpdatedTime time.Time `json:"updated_time"`
	// Contains one or more `usages` objects that contain information on how a credit account is used and what types of balances are permitted on the account.
	Usages []AccountUsageResponse `json:"usages"`
	// Unique identifier of the primary account holder.
	UserToken string `json:"user_token"`
}

// NewAccountResponse instantiates a new AccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountResponse(availableCredit float32, config AccountConfigResponse, createdTime time.Time, creditLimit float32, creditProductToken string, currencyCode CurrencyCode, currentBalance float32, latestStatementCycleType CycleType, remainingMinPaymentDue float32, remainingStatementBalance float32, status AccountStatusEnum, token string, updatedTime time.Time, usages []AccountUsageResponse, userToken string) *AccountResponse {
	this := AccountResponse{}
	this.AvailableCredit = availableCredit
	this.Config = config
	this.CreatedTime = createdTime
	this.CreditLimit = creditLimit
	this.CreditProductToken = creditProductToken
	this.CurrencyCode = currencyCode
	this.CurrentBalance = currentBalance
	this.LatestStatementCycleType = latestStatementCycleType
	this.RemainingMinPaymentDue = remainingMinPaymentDue
	this.RemainingStatementBalance = remainingStatementBalance
	this.Status = status
	this.Token = token
	this.UpdatedTime = updatedTime
	this.Usages = usages
	this.UserToken = userToken
	return &this
}

// NewAccountResponseWithDefaults instantiates a new AccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountResponseWithDefaults() *AccountResponse {
	this := AccountResponse{}
	var currencyCode CurrencyCode = CURRENCYCODE_USD
	this.CurrencyCode = currencyCode
	return &this
}

// GetActivationTime returns the ActivationTime field value if set, zero value otherwise.
func (o *AccountResponse) GetActivationTime() time.Time {
	if o == nil || IsNil(o.ActivationTime) {
		var ret time.Time
		return ret
	}
	return *o.ActivationTime
}

// GetActivationTimeOk returns a tuple with the ActivationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetActivationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ActivationTime) {
		return nil, false
	}
	return o.ActivationTime, true
}

// HasActivationTime returns a boolean if a field has been set.
func (o *AccountResponse) HasActivationTime() bool {
	if o != nil && !IsNil(o.ActivationTime) {
		return true
	}

	return false
}

// SetActivationTime gets a reference to the given time.Time and assigns it to the ActivationTime field.
func (o *AccountResponse) SetActivationTime(v time.Time) {
	o.ActivationTime = &v
}

// GetAvailableCredit returns the AvailableCredit field value
func (o *AccountResponse) GetAvailableCredit() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AvailableCredit
}

// GetAvailableCreditOk returns a tuple with the AvailableCredit field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetAvailableCreditOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailableCredit, true
}

// SetAvailableCredit sets field value
func (o *AccountResponse) SetAvailableCredit(v float32) {
	o.AvailableCredit = v
}

// GetBundleToken returns the BundleToken field value if set, zero value otherwise.
func (o *AccountResponse) GetBundleToken() string {
	if o == nil || IsNil(o.BundleToken) {
		var ret string
		return ret
	}
	return *o.BundleToken
}

// GetBundleTokenOk returns a tuple with the BundleToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetBundleTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BundleToken) {
		return nil, false
	}
	return o.BundleToken, true
}

// HasBundleToken returns a boolean if a field has been set.
func (o *AccountResponse) HasBundleToken() bool {
	if o != nil && !IsNil(o.BundleToken) {
		return true
	}

	return false
}

// SetBundleToken gets a reference to the given string and assigns it to the BundleToken field.
func (o *AccountResponse) SetBundleToken(v string) {
	o.BundleToken = &v
}

// GetConfig returns the Config field value
func (o *AccountResponse) GetConfig() AccountConfigResponse {
	if o == nil {
		var ret AccountConfigResponse
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetConfigOk() (*AccountConfigResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *AccountResponse) SetConfig(v AccountConfigResponse) {
	o.Config = v
}

// GetCreatedTime returns the CreatedTime field value
func (o *AccountResponse) GetCreatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *AccountResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = v
}

// GetCreditLimit returns the CreditLimit field value
func (o *AccountResponse) GetCreditLimit() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetCreditLimitOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditLimit, true
}

// SetCreditLimit sets field value
func (o *AccountResponse) SetCreditLimit(v float32) {
	o.CreditLimit = v
}

// GetCreditProductToken returns the CreditProductToken field value
func (o *AccountResponse) GetCreditProductToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreditProductToken
}

// GetCreditProductTokenOk returns a tuple with the CreditProductToken field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetCreditProductTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditProductToken, true
}

// SetCreditProductToken sets field value
func (o *AccountResponse) SetCreditProductToken(v string) {
	o.CreditProductToken = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *AccountResponse) GetCurrencyCode() CurrencyCode {
	if o == nil {
		var ret CurrencyCode
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetCurrencyCodeOk() (*CurrencyCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *AccountResponse) SetCurrencyCode(v CurrencyCode) {
	o.CurrencyCode = v
}

// GetCurrentBalance returns the CurrentBalance field value
func (o *AccountResponse) GetCurrentBalance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CurrentBalance
}

// GetCurrentBalanceOk returns a tuple with the CurrentBalance field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetCurrentBalanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentBalance, true
}

// SetCurrentBalance sets field value
func (o *AccountResponse) SetCurrentBalance(v float32) {
	o.CurrentBalance = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AccountResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AccountResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AccountResponse) SetDescription(v string) {
	o.Description = &v
}

// GetExternalOfferId returns the ExternalOfferId field value if set, zero value otherwise.
func (o *AccountResponse) GetExternalOfferId() string {
	if o == nil || IsNil(o.ExternalOfferId) {
		var ret string
		return ret
	}
	return *o.ExternalOfferId
}

// GetExternalOfferIdOk returns a tuple with the ExternalOfferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetExternalOfferIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalOfferId) {
		return nil, false
	}
	return o.ExternalOfferId, true
}

// HasExternalOfferId returns a boolean if a field has been set.
func (o *AccountResponse) HasExternalOfferId() bool {
	if o != nil && !IsNil(o.ExternalOfferId) {
		return true
	}

	return false
}

// SetExternalOfferId gets a reference to the given string and assigns it to the ExternalOfferId field.
func (o *AccountResponse) SetExternalOfferId(v string) {
	o.ExternalOfferId = &v
}

// GetLatestStatementCycleType returns the LatestStatementCycleType field value
func (o *AccountResponse) GetLatestStatementCycleType() CycleType {
	if o == nil {
		var ret CycleType
		return ret
	}

	return o.LatestStatementCycleType
}

// GetLatestStatementCycleTypeOk returns a tuple with the LatestStatementCycleType field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetLatestStatementCycleTypeOk() (*CycleType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestStatementCycleType, true
}

// SetLatestStatementCycleType sets field value
func (o *AccountResponse) SetLatestStatementCycleType(v CycleType) {
	o.LatestStatementCycleType = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AccountResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AccountResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AccountResponse) SetName(v string) {
	o.Name = &v
}

// GetRemainingMinPaymentDue returns the RemainingMinPaymentDue field value
func (o *AccountResponse) GetRemainingMinPaymentDue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RemainingMinPaymentDue
}

// GetRemainingMinPaymentDueOk returns a tuple with the RemainingMinPaymentDue field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetRemainingMinPaymentDueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemainingMinPaymentDue, true
}

// SetRemainingMinPaymentDue sets field value
func (o *AccountResponse) SetRemainingMinPaymentDue(v float32) {
	o.RemainingMinPaymentDue = v
}

// GetRemainingStatementBalance returns the RemainingStatementBalance field value
func (o *AccountResponse) GetRemainingStatementBalance() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RemainingStatementBalance
}

// GetRemainingStatementBalanceOk returns a tuple with the RemainingStatementBalance field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetRemainingStatementBalanceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemainingStatementBalance, true
}

// SetRemainingStatementBalance sets field value
func (o *AccountResponse) SetRemainingStatementBalance(v float32) {
	o.RemainingStatementBalance = v
}

// GetStatus returns the Status field value
func (o *AccountResponse) GetStatus() AccountStatusEnum {
	if o == nil {
		var ret AccountStatusEnum
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetStatusOk() (*AccountStatusEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AccountResponse) SetStatus(v AccountStatusEnum) {
	o.Status = v
}

// GetToken returns the Token field value
func (o *AccountResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *AccountResponse) SetToken(v string) {
	o.Token = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AccountResponse) GetType() AccountType {
	if o == nil || IsNil(o.Type) {
		var ret AccountType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetTypeOk() (*AccountType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AccountResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AccountType and assigns it to the Type field.
func (o *AccountResponse) SetType(v AccountType) {
	o.Type = &v
}

// GetUpdatedTime returns the UpdatedTime field value
func (o *AccountResponse) GetUpdatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetUpdatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedTime, true
}

// SetUpdatedTime sets field value
func (o *AccountResponse) SetUpdatedTime(v time.Time) {
	o.UpdatedTime = v
}

// GetUsages returns the Usages field value
func (o *AccountResponse) GetUsages() []AccountUsageResponse {
	if o == nil {
		var ret []AccountUsageResponse
		return ret
	}

	return o.Usages
}

// GetUsagesOk returns a tuple with the Usages field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetUsagesOk() ([]AccountUsageResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Usages, true
}

// SetUsages sets field value
func (o *AccountResponse) SetUsages(v []AccountUsageResponse) {
	o.Usages = v
}

// GetUserToken returns the UserToken field value
func (o *AccountResponse) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *AccountResponse) GetUserTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *AccountResponse) SetUserToken(v string) {
	o.UserToken = v
}

func (o AccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivationTime) {
		toSerialize["activation_time"] = o.ActivationTime
	}
	toSerialize["available_credit"] = o.AvailableCredit
	if !IsNil(o.BundleToken) {
		toSerialize["bundle_token"] = o.BundleToken
	}
	toSerialize["config"] = o.Config
	toSerialize["created_time"] = o.CreatedTime
	toSerialize["credit_limit"] = o.CreditLimit
	toSerialize["credit_product_token"] = o.CreditProductToken
	toSerialize["currency_code"] = o.CurrencyCode
	toSerialize["current_balance"] = o.CurrentBalance
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExternalOfferId) {
		toSerialize["external_offer_id"] = o.ExternalOfferId
	}
	toSerialize["latest_statement_cycle_type"] = o.LatestStatementCycleType
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["remaining_min_payment_due"] = o.RemainingMinPaymentDue
	toSerialize["remaining_statement_balance"] = o.RemainingStatementBalance
	toSerialize["status"] = o.Status
	toSerialize["token"] = o.Token
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["updated_time"] = o.UpdatedTime
	toSerialize["usages"] = o.Usages
	toSerialize["user_token"] = o.UserToken
	return toSerialize, nil
}

type NullableAccountResponse struct {
	value *AccountResponse
	isSet bool
}

func (v NullableAccountResponse) Get() *AccountResponse {
	return v.value
}

func (v *NullableAccountResponse) Set(val *AccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountResponse(val *AccountResponse) *NullableAccountResponse {
	return &NullableAccountResponse{value: val, isSet: true}
}

func (v NullableAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


