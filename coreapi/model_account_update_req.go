/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the AccountUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountUpdateReq{}

// AccountUpdateReq struct for AccountUpdateReq
type AccountUpdateReq struct {
	Config *AccountConfigUpdateReq `json:"config,omitempty"`
	CreditLimit *AccountUpdateReqCreditLimit `json:"credit_limit,omitempty"`
	LatestStatementCycleType *CycleType `json:"latest_statement_cycle_type,omitempty"`
	// Contains one or more `usages` objects that contain information on how a credit account is used and what types of balances are permitted on the account.  You can pass only one `usages` object per `usages.type`.
	Usages []AccountUsageUpdateReq `json:"usages,omitempty"`
}

// NewAccountUpdateReq instantiates a new AccountUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountUpdateReq() *AccountUpdateReq {
	this := AccountUpdateReq{}
	return &this
}

// NewAccountUpdateReqWithDefaults instantiates a new AccountUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountUpdateReqWithDefaults() *AccountUpdateReq {
	this := AccountUpdateReq{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AccountUpdateReq) GetConfig() AccountConfigUpdateReq {
	if o == nil || IsNil(o.Config) {
		var ret AccountConfigUpdateReq
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdateReq) GetConfigOk() (*AccountConfigUpdateReq, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *AccountUpdateReq) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given AccountConfigUpdateReq and assigns it to the Config field.
func (o *AccountUpdateReq) SetConfig(v AccountConfigUpdateReq) {
	o.Config = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *AccountUpdateReq) GetCreditLimit() AccountUpdateReqCreditLimit {
	if o == nil || IsNil(o.CreditLimit) {
		var ret AccountUpdateReqCreditLimit
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdateReq) GetCreditLimitOk() (*AccountUpdateReqCreditLimit, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *AccountUpdateReq) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given AccountUpdateReqCreditLimit and assigns it to the CreditLimit field.
func (o *AccountUpdateReq) SetCreditLimit(v AccountUpdateReqCreditLimit) {
	o.CreditLimit = &v
}

// GetLatestStatementCycleType returns the LatestStatementCycleType field value if set, zero value otherwise.
func (o *AccountUpdateReq) GetLatestStatementCycleType() CycleType {
	if o == nil || IsNil(o.LatestStatementCycleType) {
		var ret CycleType
		return ret
	}
	return *o.LatestStatementCycleType
}

// GetLatestStatementCycleTypeOk returns a tuple with the LatestStatementCycleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdateReq) GetLatestStatementCycleTypeOk() (*CycleType, bool) {
	if o == nil || IsNil(o.LatestStatementCycleType) {
		return nil, false
	}
	return o.LatestStatementCycleType, true
}

// HasLatestStatementCycleType returns a boolean if a field has been set.
func (o *AccountUpdateReq) HasLatestStatementCycleType() bool {
	if o != nil && !IsNil(o.LatestStatementCycleType) {
		return true
	}

	return false
}

// SetLatestStatementCycleType gets a reference to the given CycleType and assigns it to the LatestStatementCycleType field.
func (o *AccountUpdateReq) SetLatestStatementCycleType(v CycleType) {
	o.LatestStatementCycleType = &v
}

// GetUsages returns the Usages field value if set, zero value otherwise.
func (o *AccountUpdateReq) GetUsages() []AccountUsageUpdateReq {
	if o == nil || IsNil(o.Usages) {
		var ret []AccountUsageUpdateReq
		return ret
	}
	return o.Usages
}

// GetUsagesOk returns a tuple with the Usages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdateReq) GetUsagesOk() ([]AccountUsageUpdateReq, bool) {
	if o == nil || IsNil(o.Usages) {
		return nil, false
	}
	return o.Usages, true
}

// HasUsages returns a boolean if a field has been set.
func (o *AccountUpdateReq) HasUsages() bool {
	if o != nil && !IsNil(o.Usages) {
		return true
	}

	return false
}

// SetUsages gets a reference to the given []AccountUsageUpdateReq and assigns it to the Usages field.
func (o *AccountUpdateReq) SetUsages(v []AccountUsageUpdateReq) {
	o.Usages = v
}

func (o AccountUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["credit_limit"] = o.CreditLimit
	}
	if !IsNil(o.LatestStatementCycleType) {
		toSerialize["latest_statement_cycle_type"] = o.LatestStatementCycleType
	}
	if !IsNil(o.Usages) {
		toSerialize["usages"] = o.Usages
	}
	return toSerialize, nil
}

type NullableAccountUpdateReq struct {
	value *AccountUpdateReq
	isSet bool
}

func (v NullableAccountUpdateReq) Get() *AccountUpdateReq {
	return v.value
}

func (v *NullableAccountUpdateReq) Set(val *AccountUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountUpdateReq(val *AccountUpdateReq) *NullableAccountUpdateReq {
	return &NullableAccountUpdateReq{value: val, isSet: true}
}

func (v NullableAccountUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


