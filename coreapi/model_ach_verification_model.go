/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the AchVerificationModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AchVerificationModel{}

// AchVerificationModel struct for AchVerificationModel
type AchVerificationModel struct {
	// Indicates whether the ACH funding source is active.
	Active *bool `json:"active,omitempty"`
	// Verification amount.
	VerifyAmount1 *float32 `json:"verify_amount1,omitempty"`
	// Verification amount.
	VerifyAmount2 *float32 `json:"verify_amount2,omitempty"`
}

// NewAchVerificationModel instantiates a new AchVerificationModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAchVerificationModel() *AchVerificationModel {
	this := AchVerificationModel{}
	var active bool = false
	this.Active = &active
	return &this
}

// NewAchVerificationModelWithDefaults instantiates a new AchVerificationModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAchVerificationModelWithDefaults() *AchVerificationModel {
	this := AchVerificationModel{}
	var active bool = false
	this.Active = &active
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *AchVerificationModel) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AchVerificationModel) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *AchVerificationModel) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *AchVerificationModel) SetActive(v bool) {
	o.Active = &v
}

// GetVerifyAmount1 returns the VerifyAmount1 field value if set, zero value otherwise.
func (o *AchVerificationModel) GetVerifyAmount1() float32 {
	if o == nil || IsNil(o.VerifyAmount1) {
		var ret float32
		return ret
	}
	return *o.VerifyAmount1
}

// GetVerifyAmount1Ok returns a tuple with the VerifyAmount1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AchVerificationModel) GetVerifyAmount1Ok() (*float32, bool) {
	if o == nil || IsNil(o.VerifyAmount1) {
		return nil, false
	}
	return o.VerifyAmount1, true
}

// HasVerifyAmount1 returns a boolean if a field has been set.
func (o *AchVerificationModel) HasVerifyAmount1() bool {
	if o != nil && !IsNil(o.VerifyAmount1) {
		return true
	}

	return false
}

// SetVerifyAmount1 gets a reference to the given float32 and assigns it to the VerifyAmount1 field.
func (o *AchVerificationModel) SetVerifyAmount1(v float32) {
	o.VerifyAmount1 = &v
}

// GetVerifyAmount2 returns the VerifyAmount2 field value if set, zero value otherwise.
func (o *AchVerificationModel) GetVerifyAmount2() float32 {
	if o == nil || IsNil(o.VerifyAmount2) {
		var ret float32
		return ret
	}
	return *o.VerifyAmount2
}

// GetVerifyAmount2Ok returns a tuple with the VerifyAmount2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AchVerificationModel) GetVerifyAmount2Ok() (*float32, bool) {
	if o == nil || IsNil(o.VerifyAmount2) {
		return nil, false
	}
	return o.VerifyAmount2, true
}

// HasVerifyAmount2 returns a boolean if a field has been set.
func (o *AchVerificationModel) HasVerifyAmount2() bool {
	if o != nil && !IsNil(o.VerifyAmount2) {
		return true
	}

	return false
}

// SetVerifyAmount2 gets a reference to the given float32 and assigns it to the VerifyAmount2 field.
func (o *AchVerificationModel) SetVerifyAmount2(v float32) {
	o.VerifyAmount2 = &v
}

func (o AchVerificationModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AchVerificationModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.VerifyAmount1) {
		toSerialize["verify_amount1"] = o.VerifyAmount1
	}
	if !IsNil(o.VerifyAmount2) {
		toSerialize["verify_amount2"] = o.VerifyAmount2
	}
	return toSerialize, nil
}

type NullableAchVerificationModel struct {
	value *AchVerificationModel
	isSet bool
}

func (v NullableAchVerificationModel) Get() *AchVerificationModel {
	return v.value
}

func (v *NullableAchVerificationModel) Set(val *AchVerificationModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAchVerificationModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAchVerificationModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAchVerificationModel(val *AchVerificationModel) *NullableAchVerificationModel {
	return &NullableAchVerificationModel{value: val, isSet: true}
}

func (v NullableAchVerificationModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAchVerificationModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


