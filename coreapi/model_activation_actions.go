/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the ActivationActions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivationActions{}

// ActivationActions Defines actions to execute when the card is activated. The fields in this object are mutually exclusive.
type ActivationActions struct {
	// Moves all digital wallet tokens from the specified card to the new card.  Not relevant when `reissue_pan_from_card_token` is set.  Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
	SwapDigitalWalletTokensFromCardToken *string `json:"swap_digital_wallet_tokens_from_card_token,omitempty"`
	// If you are reissuing a card, the source card is terminated by default. To prevent the source card from being terminated, set this field to `false`.  Only relevant when `reissue_pan_from_card_token` is set.
	TerminateReissuedSourceCard *bool `json:"terminate_reissued_source_card,omitempty"`
}

// NewActivationActions instantiates a new ActivationActions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivationActions() *ActivationActions {
	this := ActivationActions{}
	var terminateReissuedSourceCard bool = true
	this.TerminateReissuedSourceCard = &terminateReissuedSourceCard
	return &this
}

// NewActivationActionsWithDefaults instantiates a new ActivationActions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivationActionsWithDefaults() *ActivationActions {
	this := ActivationActions{}
	var terminateReissuedSourceCard bool = true
	this.TerminateReissuedSourceCard = &terminateReissuedSourceCard
	return &this
}

// GetSwapDigitalWalletTokensFromCardToken returns the SwapDigitalWalletTokensFromCardToken field value if set, zero value otherwise.
func (o *ActivationActions) GetSwapDigitalWalletTokensFromCardToken() string {
	if o == nil || IsNil(o.SwapDigitalWalletTokensFromCardToken) {
		var ret string
		return ret
	}
	return *o.SwapDigitalWalletTokensFromCardToken
}

// GetSwapDigitalWalletTokensFromCardTokenOk returns a tuple with the SwapDigitalWalletTokensFromCardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivationActions) GetSwapDigitalWalletTokensFromCardTokenOk() (*string, bool) {
	if o == nil || IsNil(o.SwapDigitalWalletTokensFromCardToken) {
		return nil, false
	}
	return o.SwapDigitalWalletTokensFromCardToken, true
}

// HasSwapDigitalWalletTokensFromCardToken returns a boolean if a field has been set.
func (o *ActivationActions) HasSwapDigitalWalletTokensFromCardToken() bool {
	if o != nil && !IsNil(o.SwapDigitalWalletTokensFromCardToken) {
		return true
	}

	return false
}

// SetSwapDigitalWalletTokensFromCardToken gets a reference to the given string and assigns it to the SwapDigitalWalletTokensFromCardToken field.
func (o *ActivationActions) SetSwapDigitalWalletTokensFromCardToken(v string) {
	o.SwapDigitalWalletTokensFromCardToken = &v
}

// GetTerminateReissuedSourceCard returns the TerminateReissuedSourceCard field value if set, zero value otherwise.
func (o *ActivationActions) GetTerminateReissuedSourceCard() bool {
	if o == nil || IsNil(o.TerminateReissuedSourceCard) {
		var ret bool
		return ret
	}
	return *o.TerminateReissuedSourceCard
}

// GetTerminateReissuedSourceCardOk returns a tuple with the TerminateReissuedSourceCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivationActions) GetTerminateReissuedSourceCardOk() (*bool, bool) {
	if o == nil || IsNil(o.TerminateReissuedSourceCard) {
		return nil, false
	}
	return o.TerminateReissuedSourceCard, true
}

// HasTerminateReissuedSourceCard returns a boolean if a field has been set.
func (o *ActivationActions) HasTerminateReissuedSourceCard() bool {
	if o != nil && !IsNil(o.TerminateReissuedSourceCard) {
		return true
	}

	return false
}

// SetTerminateReissuedSourceCard gets a reference to the given bool and assigns it to the TerminateReissuedSourceCard field.
func (o *ActivationActions) SetTerminateReissuedSourceCard(v bool) {
	o.TerminateReissuedSourceCard = &v
}

func (o ActivationActions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivationActions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SwapDigitalWalletTokensFromCardToken) {
		toSerialize["swap_digital_wallet_tokens_from_card_token"] = o.SwapDigitalWalletTokensFromCardToken
	}
	if !IsNil(o.TerminateReissuedSourceCard) {
		toSerialize["terminate_reissued_source_card"] = o.TerminateReissuedSourceCard
	}
	return toSerialize, nil
}

type NullableActivationActions struct {
	value *ActivationActions
	isSet bool
}

func (v NullableActivationActions) Get() *ActivationActions {
	return v.value
}

func (v *NullableActivationActions) Set(val *ActivationActions) {
	v.value = val
	v.isSet = true
}

func (v NullableActivationActions) IsSet() bool {
	return v.isSet
}

func (v *NullableActivationActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivationActions(val *ActivationActions) *NullableActivationActions {
	return &NullableActivationActions{value: val, isSet: true}
}

func (v NullableActivationActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivationActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


