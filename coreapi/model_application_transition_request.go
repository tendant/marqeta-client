/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the ApplicationTransitionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationTransitionRequest{}

// ApplicationTransitionRequest struct for ApplicationTransitionRequest
type ApplicationTransitionRequest struct {
	ApplicationState ApplicationResourceState `json:"application_state"`
	// The tracking token of the Benefits Disclosure.  This is the `tracking_token` returned in the `BENEFITS_DISCLOSURE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.  Required if transitioning application state to `ACCEPTED`
	BenefitsDisclosureTrackingToken *string `json:"benefits_disclosure_tracking_token,omitempty"`
	// The tracking token of the Card Member Agreement.  This is the `tracking_token` returned in the `CARD_MEMBER_AGREEMENT` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.  Required if transitioning application state to `ACCEPTED`
	CardMemberAgreementTrackingToken *string `json:"card_member_agreement_tracking_token,omitempty"`
	// The tracking token of the Rewards Disclosure Post-terms.  This is the `tracking_token` returned in the `REWARDS_DISCLOSURE_POST_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.  Required if transitioning application state to `ACCEPTED`
	RewardsDisclosurePostTermsTrackingToken *string `json:"rewards_disclosure_post_terms_tracking_token,omitempty"`
	// The tracking token of the Terms Schedule.  This is the `tracking_token` returned in the `TERMS_SCHEDULE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.  Required if transitioning application state to `ACCEPTED`
	TermsScheduleTrackingToken *string `json:"terms_schedule_tracking_token,omitempty"`
	// Main identifier of the resource, also used as the idempotency key on the request.
	Token *string `json:"token,omitempty"`
}

// NewApplicationTransitionRequest instantiates a new ApplicationTransitionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationTransitionRequest(applicationState ApplicationResourceState) *ApplicationTransitionRequest {
	this := ApplicationTransitionRequest{}
	this.ApplicationState = applicationState
	return &this
}

// NewApplicationTransitionRequestWithDefaults instantiates a new ApplicationTransitionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationTransitionRequestWithDefaults() *ApplicationTransitionRequest {
	this := ApplicationTransitionRequest{}
	return &this
}

// GetApplicationState returns the ApplicationState field value
func (o *ApplicationTransitionRequest) GetApplicationState() ApplicationResourceState {
	if o == nil {
		var ret ApplicationResourceState
		return ret
	}

	return o.ApplicationState
}

// GetApplicationStateOk returns a tuple with the ApplicationState field value
// and a boolean to check if the value has been set.
func (o *ApplicationTransitionRequest) GetApplicationStateOk() (*ApplicationResourceState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationState, true
}

// SetApplicationState sets field value
func (o *ApplicationTransitionRequest) SetApplicationState(v ApplicationResourceState) {
	o.ApplicationState = v
}

// GetBenefitsDisclosureTrackingToken returns the BenefitsDisclosureTrackingToken field value if set, zero value otherwise.
func (o *ApplicationTransitionRequest) GetBenefitsDisclosureTrackingToken() string {
	if o == nil || IsNil(o.BenefitsDisclosureTrackingToken) {
		var ret string
		return ret
	}
	return *o.BenefitsDisclosureTrackingToken
}

// GetBenefitsDisclosureTrackingTokenOk returns a tuple with the BenefitsDisclosureTrackingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationTransitionRequest) GetBenefitsDisclosureTrackingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BenefitsDisclosureTrackingToken) {
		return nil, false
	}
	return o.BenefitsDisclosureTrackingToken, true
}

// HasBenefitsDisclosureTrackingToken returns a boolean if a field has been set.
func (o *ApplicationTransitionRequest) HasBenefitsDisclosureTrackingToken() bool {
	if o != nil && !IsNil(o.BenefitsDisclosureTrackingToken) {
		return true
	}

	return false
}

// SetBenefitsDisclosureTrackingToken gets a reference to the given string and assigns it to the BenefitsDisclosureTrackingToken field.
func (o *ApplicationTransitionRequest) SetBenefitsDisclosureTrackingToken(v string) {
	o.BenefitsDisclosureTrackingToken = &v
}

// GetCardMemberAgreementTrackingToken returns the CardMemberAgreementTrackingToken field value if set, zero value otherwise.
func (o *ApplicationTransitionRequest) GetCardMemberAgreementTrackingToken() string {
	if o == nil || IsNil(o.CardMemberAgreementTrackingToken) {
		var ret string
		return ret
	}
	return *o.CardMemberAgreementTrackingToken
}

// GetCardMemberAgreementTrackingTokenOk returns a tuple with the CardMemberAgreementTrackingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationTransitionRequest) GetCardMemberAgreementTrackingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.CardMemberAgreementTrackingToken) {
		return nil, false
	}
	return o.CardMemberAgreementTrackingToken, true
}

// HasCardMemberAgreementTrackingToken returns a boolean if a field has been set.
func (o *ApplicationTransitionRequest) HasCardMemberAgreementTrackingToken() bool {
	if o != nil && !IsNil(o.CardMemberAgreementTrackingToken) {
		return true
	}

	return false
}

// SetCardMemberAgreementTrackingToken gets a reference to the given string and assigns it to the CardMemberAgreementTrackingToken field.
func (o *ApplicationTransitionRequest) SetCardMemberAgreementTrackingToken(v string) {
	o.CardMemberAgreementTrackingToken = &v
}

// GetRewardsDisclosurePostTermsTrackingToken returns the RewardsDisclosurePostTermsTrackingToken field value if set, zero value otherwise.
func (o *ApplicationTransitionRequest) GetRewardsDisclosurePostTermsTrackingToken() string {
	if o == nil || IsNil(o.RewardsDisclosurePostTermsTrackingToken) {
		var ret string
		return ret
	}
	return *o.RewardsDisclosurePostTermsTrackingToken
}

// GetRewardsDisclosurePostTermsTrackingTokenOk returns a tuple with the RewardsDisclosurePostTermsTrackingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationTransitionRequest) GetRewardsDisclosurePostTermsTrackingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RewardsDisclosurePostTermsTrackingToken) {
		return nil, false
	}
	return o.RewardsDisclosurePostTermsTrackingToken, true
}

// HasRewardsDisclosurePostTermsTrackingToken returns a boolean if a field has been set.
func (o *ApplicationTransitionRequest) HasRewardsDisclosurePostTermsTrackingToken() bool {
	if o != nil && !IsNil(o.RewardsDisclosurePostTermsTrackingToken) {
		return true
	}

	return false
}

// SetRewardsDisclosurePostTermsTrackingToken gets a reference to the given string and assigns it to the RewardsDisclosurePostTermsTrackingToken field.
func (o *ApplicationTransitionRequest) SetRewardsDisclosurePostTermsTrackingToken(v string) {
	o.RewardsDisclosurePostTermsTrackingToken = &v
}

// GetTermsScheduleTrackingToken returns the TermsScheduleTrackingToken field value if set, zero value otherwise.
func (o *ApplicationTransitionRequest) GetTermsScheduleTrackingToken() string {
	if o == nil || IsNil(o.TermsScheduleTrackingToken) {
		var ret string
		return ret
	}
	return *o.TermsScheduleTrackingToken
}

// GetTermsScheduleTrackingTokenOk returns a tuple with the TermsScheduleTrackingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationTransitionRequest) GetTermsScheduleTrackingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TermsScheduleTrackingToken) {
		return nil, false
	}
	return o.TermsScheduleTrackingToken, true
}

// HasTermsScheduleTrackingToken returns a boolean if a field has been set.
func (o *ApplicationTransitionRequest) HasTermsScheduleTrackingToken() bool {
	if o != nil && !IsNil(o.TermsScheduleTrackingToken) {
		return true
	}

	return false
}

// SetTermsScheduleTrackingToken gets a reference to the given string and assigns it to the TermsScheduleTrackingToken field.
func (o *ApplicationTransitionRequest) SetTermsScheduleTrackingToken(v string) {
	o.TermsScheduleTrackingToken = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ApplicationTransitionRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationTransitionRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ApplicationTransitionRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ApplicationTransitionRequest) SetToken(v string) {
	o.Token = &v
}

func (o ApplicationTransitionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationTransitionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["application_state"] = o.ApplicationState
	if !IsNil(o.BenefitsDisclosureTrackingToken) {
		toSerialize["benefits_disclosure_tracking_token"] = o.BenefitsDisclosureTrackingToken
	}
	if !IsNil(o.CardMemberAgreementTrackingToken) {
		toSerialize["card_member_agreement_tracking_token"] = o.CardMemberAgreementTrackingToken
	}
	if !IsNil(o.RewardsDisclosurePostTermsTrackingToken) {
		toSerialize["rewards_disclosure_post_terms_tracking_token"] = o.RewardsDisclosurePostTermsTrackingToken
	}
	if !IsNil(o.TermsScheduleTrackingToken) {
		toSerialize["terms_schedule_tracking_token"] = o.TermsScheduleTrackingToken
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableApplicationTransitionRequest struct {
	value *ApplicationTransitionRequest
	isSet bool
}

func (v NullableApplicationTransitionRequest) Get() *ApplicationTransitionRequest {
	return v.value
}

func (v *NullableApplicationTransitionRequest) Set(val *ApplicationTransitionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationTransitionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationTransitionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationTransitionRequest(val *ApplicationTransitionRequest) *NullableApplicationTransitionRequest {
	return &NullableApplicationTransitionRequest{value: val, isSet: true}
}

func (v NullableApplicationTransitionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationTransitionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


