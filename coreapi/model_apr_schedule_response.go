/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the AprScheduleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AprScheduleResponse{}

// AprScheduleResponse struct for AprScheduleResponse
type AprScheduleResponse struct {
	// Whether the APR is active.
	Active *bool `json:"active,omitempty"`
	// Date and time when the APR was created on Marqeta's credit platform, in UTC.
	CreatedDate *time.Time `json:"created_date,omitempty"`
	// Contains one or more `schedule` objects, which contain information about the annual percentage rates (APRs) associated with the type of balance on the credit account and when they are effective.
	Schedule []AprScheduleEntryResponse `json:"schedule"`
	Type AccountAprType `json:"type"`
	// Date and time when the APR was last updated on Marqeta's credit platform, in UTC.
	UpdatedDate *time.Time `json:"updated_date,omitempty"`
}

// NewAprScheduleResponse instantiates a new AprScheduleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAprScheduleResponse(schedule []AprScheduleEntryResponse, type_ AccountAprType) *AprScheduleResponse {
	this := AprScheduleResponse{}
	this.Schedule = schedule
	this.Type = type_
	return &this
}

// NewAprScheduleResponseWithDefaults instantiates a new AprScheduleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAprScheduleResponseWithDefaults() *AprScheduleResponse {
	this := AprScheduleResponse{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *AprScheduleResponse) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AprScheduleResponse) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *AprScheduleResponse) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *AprScheduleResponse) SetActive(v bool) {
	o.Active = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *AprScheduleResponse) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AprScheduleResponse) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *AprScheduleResponse) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *AprScheduleResponse) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetSchedule returns the Schedule field value
func (o *AprScheduleResponse) GetSchedule() []AprScheduleEntryResponse {
	if o == nil {
		var ret []AprScheduleEntryResponse
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *AprScheduleResponse) GetScheduleOk() ([]AprScheduleEntryResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schedule, true
}

// SetSchedule sets field value
func (o *AprScheduleResponse) SetSchedule(v []AprScheduleEntryResponse) {
	o.Schedule = v
}

// GetType returns the Type field value
func (o *AprScheduleResponse) GetType() AccountAprType {
	if o == nil {
		var ret AccountAprType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AprScheduleResponse) GetTypeOk() (*AccountAprType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AprScheduleResponse) SetType(v AccountAprType) {
	o.Type = v
}

// GetUpdatedDate returns the UpdatedDate field value if set, zero value otherwise.
func (o *AprScheduleResponse) GetUpdatedDate() time.Time {
	if o == nil || IsNil(o.UpdatedDate) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedDate
}

// GetUpdatedDateOk returns a tuple with the UpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AprScheduleResponse) GetUpdatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedDate) {
		return nil, false
	}
	return o.UpdatedDate, true
}

// HasUpdatedDate returns a boolean if a field has been set.
func (o *AprScheduleResponse) HasUpdatedDate() bool {
	if o != nil && !IsNil(o.UpdatedDate) {
		return true
	}

	return false
}

// SetUpdatedDate gets a reference to the given time.Time and assigns it to the UpdatedDate field.
func (o *AprScheduleResponse) SetUpdatedDate(v time.Time) {
	o.UpdatedDate = &v
}

func (o AprScheduleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AprScheduleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["created_date"] = o.CreatedDate
	}
	toSerialize["schedule"] = o.Schedule
	toSerialize["type"] = o.Type
	if !IsNil(o.UpdatedDate) {
		toSerialize["updated_date"] = o.UpdatedDate
	}
	return toSerialize, nil
}

type NullableAprScheduleResponse struct {
	value *AprScheduleResponse
	isSet bool
}

func (v NullableAprScheduleResponse) Get() *AprScheduleResponse {
	return v.value
}

func (v *NullableAprScheduleResponse) Set(val *AprScheduleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAprScheduleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAprScheduleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAprScheduleResponse(val *AprScheduleResponse) *NullableAprScheduleResponse {
	return &NullableAprScheduleResponse{value: val, isSet: true}
}

func (v NullableAprScheduleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAprScheduleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


