/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the AuthorizationAdviceModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationAdviceModel{}

// AuthorizationAdviceModel struct for AuthorizationAdviceModel
type AuthorizationAdviceModel struct {
	Amount float32 `json:"amount"`
	NetworkFees []NetworkFeeModel `json:"network_fees,omitempty"`
	OriginalTransactionToken string `json:"original_transaction_token"`
	TransactionOptions *TransactionOptions `json:"transaction_options,omitempty"`
	Webhook *Webhook `json:"webhook,omitempty"`
}

// NewAuthorizationAdviceModel instantiates a new AuthorizationAdviceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationAdviceModel(amount float32, originalTransactionToken string) *AuthorizationAdviceModel {
	this := AuthorizationAdviceModel{}
	this.Amount = amount
	this.OriginalTransactionToken = originalTransactionToken
	return &this
}

// NewAuthorizationAdviceModelWithDefaults instantiates a new AuthorizationAdviceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationAdviceModelWithDefaults() *AuthorizationAdviceModel {
	this := AuthorizationAdviceModel{}
	return &this
}

// GetAmount returns the Amount field value
func (o *AuthorizationAdviceModel) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *AuthorizationAdviceModel) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *AuthorizationAdviceModel) SetAmount(v float32) {
	o.Amount = v
}

// GetNetworkFees returns the NetworkFees field value if set, zero value otherwise.
func (o *AuthorizationAdviceModel) GetNetworkFees() []NetworkFeeModel {
	if o == nil || IsNil(o.NetworkFees) {
		var ret []NetworkFeeModel
		return ret
	}
	return o.NetworkFees
}

// GetNetworkFeesOk returns a tuple with the NetworkFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAdviceModel) GetNetworkFeesOk() ([]NetworkFeeModel, bool) {
	if o == nil || IsNil(o.NetworkFees) {
		return nil, false
	}
	return o.NetworkFees, true
}

// HasNetworkFees returns a boolean if a field has been set.
func (o *AuthorizationAdviceModel) HasNetworkFees() bool {
	if o != nil && !IsNil(o.NetworkFees) {
		return true
	}

	return false
}

// SetNetworkFees gets a reference to the given []NetworkFeeModel and assigns it to the NetworkFees field.
func (o *AuthorizationAdviceModel) SetNetworkFees(v []NetworkFeeModel) {
	o.NetworkFees = v
}

// GetOriginalTransactionToken returns the OriginalTransactionToken field value
func (o *AuthorizationAdviceModel) GetOriginalTransactionToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalTransactionToken
}

// GetOriginalTransactionTokenOk returns a tuple with the OriginalTransactionToken field value
// and a boolean to check if the value has been set.
func (o *AuthorizationAdviceModel) GetOriginalTransactionTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalTransactionToken, true
}

// SetOriginalTransactionToken sets field value
func (o *AuthorizationAdviceModel) SetOriginalTransactionToken(v string) {
	o.OriginalTransactionToken = v
}

// GetTransactionOptions returns the TransactionOptions field value if set, zero value otherwise.
func (o *AuthorizationAdviceModel) GetTransactionOptions() TransactionOptions {
	if o == nil || IsNil(o.TransactionOptions) {
		var ret TransactionOptions
		return ret
	}
	return *o.TransactionOptions
}

// GetTransactionOptionsOk returns a tuple with the TransactionOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAdviceModel) GetTransactionOptionsOk() (*TransactionOptions, bool) {
	if o == nil || IsNil(o.TransactionOptions) {
		return nil, false
	}
	return o.TransactionOptions, true
}

// HasTransactionOptions returns a boolean if a field has been set.
func (o *AuthorizationAdviceModel) HasTransactionOptions() bool {
	if o != nil && !IsNil(o.TransactionOptions) {
		return true
	}

	return false
}

// SetTransactionOptions gets a reference to the given TransactionOptions and assigns it to the TransactionOptions field.
func (o *AuthorizationAdviceModel) SetTransactionOptions(v TransactionOptions) {
	o.TransactionOptions = &v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *AuthorizationAdviceModel) GetWebhook() Webhook {
	if o == nil || IsNil(o.Webhook) {
		var ret Webhook
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAdviceModel) GetWebhookOk() (*Webhook, bool) {
	if o == nil || IsNil(o.Webhook) {
		return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *AuthorizationAdviceModel) HasWebhook() bool {
	if o != nil && !IsNil(o.Webhook) {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given Webhook and assigns it to the Webhook field.
func (o *AuthorizationAdviceModel) SetWebhook(v Webhook) {
	o.Webhook = &v
}

func (o AuthorizationAdviceModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationAdviceModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	if !IsNil(o.NetworkFees) {
		toSerialize["network_fees"] = o.NetworkFees
	}
	toSerialize["original_transaction_token"] = o.OriginalTransactionToken
	if !IsNil(o.TransactionOptions) {
		toSerialize["transaction_options"] = o.TransactionOptions
	}
	if !IsNil(o.Webhook) {
		toSerialize["webhook"] = o.Webhook
	}
	return toSerialize, nil
}

type NullableAuthorizationAdviceModel struct {
	value *AuthorizationAdviceModel
	isSet bool
}

func (v NullableAuthorizationAdviceModel) Get() *AuthorizationAdviceModel {
	return v.value
}

func (v *NullableAuthorizationAdviceModel) Set(val *AuthorizationAdviceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationAdviceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationAdviceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationAdviceModel(val *AuthorizationAdviceModel) *NullableAuthorizationAdviceModel {
	return &NullableAuthorizationAdviceModel{value: val, isSet: true}
}

func (v NullableAuthorizationAdviceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationAdviceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


