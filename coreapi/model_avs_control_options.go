/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the AvsControlOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AvsControlOptions{}

// AvsControlOptions struct for AvsControlOptions
type AvsControlOptions struct {
	// Set to `true` to decline account verification or authorization messages whose address number does not match the address number on file.  Set to `false` to not decline account verification or authorization messages whose address number does not match the address number on file.  This field is functional only if `validate = true`.
	DeclineOnAddressNumberMismatch *bool `json:"decline_on_address_number_mismatch,omitempty"`
	// Set to `true` to decline account verification or authorization messages whose postal code does not match the postal code on file.  Set to `false` to not decline account verification or authorization messages whose postal code does not match the postal code on file.  This field is functional only if `validate = true`.
	DeclineOnPostalCodeMismatch *bool `json:"decline_on_postal_code_mismatch,omitempty"`
	// Set to `true` to require validation of account verification or authorization messages.  Set to `false` to forgo validation and approve all account verification and authorization messages.
	Validate *bool `json:"validate,omitempty"`
}

// NewAvsControlOptions instantiates a new AvsControlOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvsControlOptions() *AvsControlOptions {
	this := AvsControlOptions{}
	var declineOnAddressNumberMismatch bool = false
	this.DeclineOnAddressNumberMismatch = &declineOnAddressNumberMismatch
	var declineOnPostalCodeMismatch bool = true
	this.DeclineOnPostalCodeMismatch = &declineOnPostalCodeMismatch
	var validate bool = true
	this.Validate = &validate
	return &this
}

// NewAvsControlOptionsWithDefaults instantiates a new AvsControlOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvsControlOptionsWithDefaults() *AvsControlOptions {
	this := AvsControlOptions{}
	var declineOnAddressNumberMismatch bool = false
	this.DeclineOnAddressNumberMismatch = &declineOnAddressNumberMismatch
	var declineOnPostalCodeMismatch bool = true
	this.DeclineOnPostalCodeMismatch = &declineOnPostalCodeMismatch
	var validate bool = true
	this.Validate = &validate
	return &this
}

// GetDeclineOnAddressNumberMismatch returns the DeclineOnAddressNumberMismatch field value if set, zero value otherwise.
func (o *AvsControlOptions) GetDeclineOnAddressNumberMismatch() bool {
	if o == nil || IsNil(o.DeclineOnAddressNumberMismatch) {
		var ret bool
		return ret
	}
	return *o.DeclineOnAddressNumberMismatch
}

// GetDeclineOnAddressNumberMismatchOk returns a tuple with the DeclineOnAddressNumberMismatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvsControlOptions) GetDeclineOnAddressNumberMismatchOk() (*bool, bool) {
	if o == nil || IsNil(o.DeclineOnAddressNumberMismatch) {
		return nil, false
	}
	return o.DeclineOnAddressNumberMismatch, true
}

// HasDeclineOnAddressNumberMismatch returns a boolean if a field has been set.
func (o *AvsControlOptions) HasDeclineOnAddressNumberMismatch() bool {
	if o != nil && !IsNil(o.DeclineOnAddressNumberMismatch) {
		return true
	}

	return false
}

// SetDeclineOnAddressNumberMismatch gets a reference to the given bool and assigns it to the DeclineOnAddressNumberMismatch field.
func (o *AvsControlOptions) SetDeclineOnAddressNumberMismatch(v bool) {
	o.DeclineOnAddressNumberMismatch = &v
}

// GetDeclineOnPostalCodeMismatch returns the DeclineOnPostalCodeMismatch field value if set, zero value otherwise.
func (o *AvsControlOptions) GetDeclineOnPostalCodeMismatch() bool {
	if o == nil || IsNil(o.DeclineOnPostalCodeMismatch) {
		var ret bool
		return ret
	}
	return *o.DeclineOnPostalCodeMismatch
}

// GetDeclineOnPostalCodeMismatchOk returns a tuple with the DeclineOnPostalCodeMismatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvsControlOptions) GetDeclineOnPostalCodeMismatchOk() (*bool, bool) {
	if o == nil || IsNil(o.DeclineOnPostalCodeMismatch) {
		return nil, false
	}
	return o.DeclineOnPostalCodeMismatch, true
}

// HasDeclineOnPostalCodeMismatch returns a boolean if a field has been set.
func (o *AvsControlOptions) HasDeclineOnPostalCodeMismatch() bool {
	if o != nil && !IsNil(o.DeclineOnPostalCodeMismatch) {
		return true
	}

	return false
}

// SetDeclineOnPostalCodeMismatch gets a reference to the given bool and assigns it to the DeclineOnPostalCodeMismatch field.
func (o *AvsControlOptions) SetDeclineOnPostalCodeMismatch(v bool) {
	o.DeclineOnPostalCodeMismatch = &v
}

// GetValidate returns the Validate field value if set, zero value otherwise.
func (o *AvsControlOptions) GetValidate() bool {
	if o == nil || IsNil(o.Validate) {
		var ret bool
		return ret
	}
	return *o.Validate
}

// GetValidateOk returns a tuple with the Validate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvsControlOptions) GetValidateOk() (*bool, bool) {
	if o == nil || IsNil(o.Validate) {
		return nil, false
	}
	return o.Validate, true
}

// HasValidate returns a boolean if a field has been set.
func (o *AvsControlOptions) HasValidate() bool {
	if o != nil && !IsNil(o.Validate) {
		return true
	}

	return false
}

// SetValidate gets a reference to the given bool and assigns it to the Validate field.
func (o *AvsControlOptions) SetValidate(v bool) {
	o.Validate = &v
}

func (o AvsControlOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AvsControlOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeclineOnAddressNumberMismatch) {
		toSerialize["decline_on_address_number_mismatch"] = o.DeclineOnAddressNumberMismatch
	}
	if !IsNil(o.DeclineOnPostalCodeMismatch) {
		toSerialize["decline_on_postal_code_mismatch"] = o.DeclineOnPostalCodeMismatch
	}
	if !IsNil(o.Validate) {
		toSerialize["validate"] = o.Validate
	}
	return toSerialize, nil
}

type NullableAvsControlOptions struct {
	value *AvsControlOptions
	isSet bool
}

func (v NullableAvsControlOptions) Get() *AvsControlOptions {
	return v.value
}

func (v *NullableAvsControlOptions) Set(val *AvsControlOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableAvsControlOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableAvsControlOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvsControlOptions(val *AvsControlOptions) *NullableAvsControlOptions {
	return &NullableAvsControlOptions{value: val, isSet: true}
}

func (v NullableAvsControlOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvsControlOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


