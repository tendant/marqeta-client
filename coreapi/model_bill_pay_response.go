/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the BillPayResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillPayResponse{}

// BillPayResponse struct for BillPayResponse
type BillPayResponse struct {
	Amount *string `json:"amount,omitempty"`
	BillerToken *string `json:"biller_token,omitempty"`
	CreatedTime *string `json:"created_time,omitempty"`
	DeliveryDate *string `json:"delivery_date,omitempty"`
	LastModifiedTime *string `json:"last_modified_time,omitempty"`
	PaymentToken *string `json:"payment_token,omitempty"`
	PaymentType *string `json:"payment_type,omitempty"`
	ProcessingDate *string `json:"processing_date,omitempty"`
	Status *string `json:"status,omitempty"`
	UserToken *string `json:"user_token,omitempty"`
}

// NewBillPayResponse instantiates a new BillPayResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillPayResponse() *BillPayResponse {
	this := BillPayResponse{}
	return &this
}

// NewBillPayResponseWithDefaults instantiates a new BillPayResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillPayResponseWithDefaults() *BillPayResponse {
	this := BillPayResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *BillPayResponse) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPayResponse) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *BillPayResponse) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *BillPayResponse) SetAmount(v string) {
	o.Amount = &v
}

// GetBillerToken returns the BillerToken field value if set, zero value otherwise.
func (o *BillPayResponse) GetBillerToken() string {
	if o == nil || IsNil(o.BillerToken) {
		var ret string
		return ret
	}
	return *o.BillerToken
}

// GetBillerTokenOk returns a tuple with the BillerToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPayResponse) GetBillerTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BillerToken) {
		return nil, false
	}
	return o.BillerToken, true
}

// HasBillerToken returns a boolean if a field has been set.
func (o *BillPayResponse) HasBillerToken() bool {
	if o != nil && !IsNil(o.BillerToken) {
		return true
	}

	return false
}

// SetBillerToken gets a reference to the given string and assigns it to the BillerToken field.
func (o *BillPayResponse) SetBillerToken(v string) {
	o.BillerToken = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *BillPayResponse) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPayResponse) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *BillPayResponse) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *BillPayResponse) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetDeliveryDate returns the DeliveryDate field value if set, zero value otherwise.
func (o *BillPayResponse) GetDeliveryDate() string {
	if o == nil || IsNil(o.DeliveryDate) {
		var ret string
		return ret
	}
	return *o.DeliveryDate
}

// GetDeliveryDateOk returns a tuple with the DeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPayResponse) GetDeliveryDateOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryDate) {
		return nil, false
	}
	return o.DeliveryDate, true
}

// HasDeliveryDate returns a boolean if a field has been set.
func (o *BillPayResponse) HasDeliveryDate() bool {
	if o != nil && !IsNil(o.DeliveryDate) {
		return true
	}

	return false
}

// SetDeliveryDate gets a reference to the given string and assigns it to the DeliveryDate field.
func (o *BillPayResponse) SetDeliveryDate(v string) {
	o.DeliveryDate = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *BillPayResponse) GetLastModifiedTime() string {
	if o == nil || IsNil(o.LastModifiedTime) {
		var ret string
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPayResponse) GetLastModifiedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedTime) {
		return nil, false
	}
	return o.LastModifiedTime, true
}

// HasLastModifiedTime returns a boolean if a field has been set.
func (o *BillPayResponse) HasLastModifiedTime() bool {
	if o != nil && !IsNil(o.LastModifiedTime) {
		return true
	}

	return false
}

// SetLastModifiedTime gets a reference to the given string and assigns it to the LastModifiedTime field.
func (o *BillPayResponse) SetLastModifiedTime(v string) {
	o.LastModifiedTime = &v
}

// GetPaymentToken returns the PaymentToken field value if set, zero value otherwise.
func (o *BillPayResponse) GetPaymentToken() string {
	if o == nil || IsNil(o.PaymentToken) {
		var ret string
		return ret
	}
	return *o.PaymentToken
}

// GetPaymentTokenOk returns a tuple with the PaymentToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPayResponse) GetPaymentTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentToken) {
		return nil, false
	}
	return o.PaymentToken, true
}

// HasPaymentToken returns a boolean if a field has been set.
func (o *BillPayResponse) HasPaymentToken() bool {
	if o != nil && !IsNil(o.PaymentToken) {
		return true
	}

	return false
}

// SetPaymentToken gets a reference to the given string and assigns it to the PaymentToken field.
func (o *BillPayResponse) SetPaymentToken(v string) {
	o.PaymentToken = &v
}

// GetPaymentType returns the PaymentType field value if set, zero value otherwise.
func (o *BillPayResponse) GetPaymentType() string {
	if o == nil || IsNil(o.PaymentType) {
		var ret string
		return ret
	}
	return *o.PaymentType
}

// GetPaymentTypeOk returns a tuple with the PaymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPayResponse) GetPaymentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentType) {
		return nil, false
	}
	return o.PaymentType, true
}

// HasPaymentType returns a boolean if a field has been set.
func (o *BillPayResponse) HasPaymentType() bool {
	if o != nil && !IsNil(o.PaymentType) {
		return true
	}

	return false
}

// SetPaymentType gets a reference to the given string and assigns it to the PaymentType field.
func (o *BillPayResponse) SetPaymentType(v string) {
	o.PaymentType = &v
}

// GetProcessingDate returns the ProcessingDate field value if set, zero value otherwise.
func (o *BillPayResponse) GetProcessingDate() string {
	if o == nil || IsNil(o.ProcessingDate) {
		var ret string
		return ret
	}
	return *o.ProcessingDate
}

// GetProcessingDateOk returns a tuple with the ProcessingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPayResponse) GetProcessingDateOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessingDate) {
		return nil, false
	}
	return o.ProcessingDate, true
}

// HasProcessingDate returns a boolean if a field has been set.
func (o *BillPayResponse) HasProcessingDate() bool {
	if o != nil && !IsNil(o.ProcessingDate) {
		return true
	}

	return false
}

// SetProcessingDate gets a reference to the given string and assigns it to the ProcessingDate field.
func (o *BillPayResponse) SetProcessingDate(v string) {
	o.ProcessingDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BillPayResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPayResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BillPayResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BillPayResponse) SetStatus(v string) {
	o.Status = &v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *BillPayResponse) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillPayResponse) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *BillPayResponse) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *BillPayResponse) SetUserToken(v string) {
	o.UserToken = &v
}

func (o BillPayResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillPayResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.BillerToken) {
		toSerialize["biller_token"] = o.BillerToken
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.DeliveryDate) {
		toSerialize["delivery_date"] = o.DeliveryDate
	}
	if !IsNil(o.LastModifiedTime) {
		toSerialize["last_modified_time"] = o.LastModifiedTime
	}
	if !IsNil(o.PaymentToken) {
		toSerialize["payment_token"] = o.PaymentToken
	}
	if !IsNil(o.PaymentType) {
		toSerialize["payment_type"] = o.PaymentType
	}
	if !IsNil(o.ProcessingDate) {
		toSerialize["processing_date"] = o.ProcessingDate
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	return toSerialize, nil
}

type NullableBillPayResponse struct {
	value *BillPayResponse
	isSet bool
}

func (v NullableBillPayResponse) Get() *BillPayResponse {
	return v.value
}

func (v *NullableBillPayResponse) Set(val *BillPayResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBillPayResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBillPayResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillPayResponse(val *BillPayResponse) *NullableBillPayResponse {
	return &NullableBillPayResponse{value: val, isSet: true}
}

func (v NullableBillPayResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillPayResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


