/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the BundleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BundleResponse{}

// BundleResponse Contains information on a bundle.
type BundleResponse struct {
	AprPolicyDetail *PolicyAprResponse `json:"apr_policy_detail,omitempty"`
	// Unique identifier of the bundle's APR policy.
	AprPolicyToken *string `json:"apr_policy_token,omitempty"`
	// Date and time when the bundle was created on Marqeta's credit platform, in UTC.
	CreatedTime *time.Time `json:"created_time,omitempty"`
	CreditProductPolicyDetail *PolicyProductResponse `json:"credit_product_policy_detail,omitempty"`
	// Unique identifier of the bundle's credit product policy.
	CreditProductPolicyToken *string `json:"credit_product_policy_token,omitempty"`
	// Description of the bundle.
	Description *string `json:"description,omitempty"`
	DocumentPolicyDetail *PolicyDocumentResponse `json:"document_policy_detail,omitempty"`
	// Unique identifier of the bundle's document policy.
	DocumentPolicyToken *string `json:"document_policy_token,omitempty"`
	FeePolicyDetail *PolicyFeeResponse `json:"fee_policy_detail,omitempty"`
	// Unique identifier of the bundle's fee policy.
	FeePolicyToken *string `json:"fee_policy_token,omitempty"`
	// Name of the bundle.
	Name *string `json:"name,omitempty"`
	OfferPolicyDetail *PolicyOfferResponse `json:"offer_policy_detail,omitempty"`
	// Unique identifier of the bundle's offer policy.
	OfferPolicyToken *string `json:"offer_policy_token,omitempty"`
	RewardPolicyDetail *PolicyRewardResponse `json:"reward_policy_detail,omitempty"`
	// Unique identifier of the bundle's reward policy.
	RewardPolicyToken *string `json:"reward_policy_token,omitempty"`
	Status *BundleResourceStatus `json:"status,omitempty"`
	// Unique identifier of the bundle.
	Token *string `json:"token,omitempty"`
	// Date and time when the bundle was last updated on Marqeta's credit platform, in UTC.
	UpdatedTime *time.Time `json:"updated_time,omitempty"`
}

// NewBundleResponse instantiates a new BundleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundleResponse() *BundleResponse {
	this := BundleResponse{}
	return &this
}

// NewBundleResponseWithDefaults instantiates a new BundleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundleResponseWithDefaults() *BundleResponse {
	this := BundleResponse{}
	return &this
}

// GetAprPolicyDetail returns the AprPolicyDetail field value if set, zero value otherwise.
func (o *BundleResponse) GetAprPolicyDetail() PolicyAprResponse {
	if o == nil || IsNil(o.AprPolicyDetail) {
		var ret PolicyAprResponse
		return ret
	}
	return *o.AprPolicyDetail
}

// GetAprPolicyDetailOk returns a tuple with the AprPolicyDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetAprPolicyDetailOk() (*PolicyAprResponse, bool) {
	if o == nil || IsNil(o.AprPolicyDetail) {
		return nil, false
	}
	return o.AprPolicyDetail, true
}

// HasAprPolicyDetail returns a boolean if a field has been set.
func (o *BundleResponse) HasAprPolicyDetail() bool {
	if o != nil && !IsNil(o.AprPolicyDetail) {
		return true
	}

	return false
}

// SetAprPolicyDetail gets a reference to the given PolicyAprResponse and assigns it to the AprPolicyDetail field.
func (o *BundleResponse) SetAprPolicyDetail(v PolicyAprResponse) {
	o.AprPolicyDetail = &v
}

// GetAprPolicyToken returns the AprPolicyToken field value if set, zero value otherwise.
func (o *BundleResponse) GetAprPolicyToken() string {
	if o == nil || IsNil(o.AprPolicyToken) {
		var ret string
		return ret
	}
	return *o.AprPolicyToken
}

// GetAprPolicyTokenOk returns a tuple with the AprPolicyToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetAprPolicyTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AprPolicyToken) {
		return nil, false
	}
	return o.AprPolicyToken, true
}

// HasAprPolicyToken returns a boolean if a field has been set.
func (o *BundleResponse) HasAprPolicyToken() bool {
	if o != nil && !IsNil(o.AprPolicyToken) {
		return true
	}

	return false
}

// SetAprPolicyToken gets a reference to the given string and assigns it to the AprPolicyToken field.
func (o *BundleResponse) SetAprPolicyToken(v string) {
	o.AprPolicyToken = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *BundleResponse) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *BundleResponse) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *BundleResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetCreditProductPolicyDetail returns the CreditProductPolicyDetail field value if set, zero value otherwise.
func (o *BundleResponse) GetCreditProductPolicyDetail() PolicyProductResponse {
	if o == nil || IsNil(o.CreditProductPolicyDetail) {
		var ret PolicyProductResponse
		return ret
	}
	return *o.CreditProductPolicyDetail
}

// GetCreditProductPolicyDetailOk returns a tuple with the CreditProductPolicyDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetCreditProductPolicyDetailOk() (*PolicyProductResponse, bool) {
	if o == nil || IsNil(o.CreditProductPolicyDetail) {
		return nil, false
	}
	return o.CreditProductPolicyDetail, true
}

// HasCreditProductPolicyDetail returns a boolean if a field has been set.
func (o *BundleResponse) HasCreditProductPolicyDetail() bool {
	if o != nil && !IsNil(o.CreditProductPolicyDetail) {
		return true
	}

	return false
}

// SetCreditProductPolicyDetail gets a reference to the given PolicyProductResponse and assigns it to the CreditProductPolicyDetail field.
func (o *BundleResponse) SetCreditProductPolicyDetail(v PolicyProductResponse) {
	o.CreditProductPolicyDetail = &v
}

// GetCreditProductPolicyToken returns the CreditProductPolicyToken field value if set, zero value otherwise.
func (o *BundleResponse) GetCreditProductPolicyToken() string {
	if o == nil || IsNil(o.CreditProductPolicyToken) {
		var ret string
		return ret
	}
	return *o.CreditProductPolicyToken
}

// GetCreditProductPolicyTokenOk returns a tuple with the CreditProductPolicyToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetCreditProductPolicyTokenOk() (*string, bool) {
	if o == nil || IsNil(o.CreditProductPolicyToken) {
		return nil, false
	}
	return o.CreditProductPolicyToken, true
}

// HasCreditProductPolicyToken returns a boolean if a field has been set.
func (o *BundleResponse) HasCreditProductPolicyToken() bool {
	if o != nil && !IsNil(o.CreditProductPolicyToken) {
		return true
	}

	return false
}

// SetCreditProductPolicyToken gets a reference to the given string and assigns it to the CreditProductPolicyToken field.
func (o *BundleResponse) SetCreditProductPolicyToken(v string) {
	o.CreditProductPolicyToken = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BundleResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BundleResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BundleResponse) SetDescription(v string) {
	o.Description = &v
}

// GetDocumentPolicyDetail returns the DocumentPolicyDetail field value if set, zero value otherwise.
func (o *BundleResponse) GetDocumentPolicyDetail() PolicyDocumentResponse {
	if o == nil || IsNil(o.DocumentPolicyDetail) {
		var ret PolicyDocumentResponse
		return ret
	}
	return *o.DocumentPolicyDetail
}

// GetDocumentPolicyDetailOk returns a tuple with the DocumentPolicyDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetDocumentPolicyDetailOk() (*PolicyDocumentResponse, bool) {
	if o == nil || IsNil(o.DocumentPolicyDetail) {
		return nil, false
	}
	return o.DocumentPolicyDetail, true
}

// HasDocumentPolicyDetail returns a boolean if a field has been set.
func (o *BundleResponse) HasDocumentPolicyDetail() bool {
	if o != nil && !IsNil(o.DocumentPolicyDetail) {
		return true
	}

	return false
}

// SetDocumentPolicyDetail gets a reference to the given PolicyDocumentResponse and assigns it to the DocumentPolicyDetail field.
func (o *BundleResponse) SetDocumentPolicyDetail(v PolicyDocumentResponse) {
	o.DocumentPolicyDetail = &v
}

// GetDocumentPolicyToken returns the DocumentPolicyToken field value if set, zero value otherwise.
func (o *BundleResponse) GetDocumentPolicyToken() string {
	if o == nil || IsNil(o.DocumentPolicyToken) {
		var ret string
		return ret
	}
	return *o.DocumentPolicyToken
}

// GetDocumentPolicyTokenOk returns a tuple with the DocumentPolicyToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetDocumentPolicyTokenOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentPolicyToken) {
		return nil, false
	}
	return o.DocumentPolicyToken, true
}

// HasDocumentPolicyToken returns a boolean if a field has been set.
func (o *BundleResponse) HasDocumentPolicyToken() bool {
	if o != nil && !IsNil(o.DocumentPolicyToken) {
		return true
	}

	return false
}

// SetDocumentPolicyToken gets a reference to the given string and assigns it to the DocumentPolicyToken field.
func (o *BundleResponse) SetDocumentPolicyToken(v string) {
	o.DocumentPolicyToken = &v
}

// GetFeePolicyDetail returns the FeePolicyDetail field value if set, zero value otherwise.
func (o *BundleResponse) GetFeePolicyDetail() PolicyFeeResponse {
	if o == nil || IsNil(o.FeePolicyDetail) {
		var ret PolicyFeeResponse
		return ret
	}
	return *o.FeePolicyDetail
}

// GetFeePolicyDetailOk returns a tuple with the FeePolicyDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetFeePolicyDetailOk() (*PolicyFeeResponse, bool) {
	if o == nil || IsNil(o.FeePolicyDetail) {
		return nil, false
	}
	return o.FeePolicyDetail, true
}

// HasFeePolicyDetail returns a boolean if a field has been set.
func (o *BundleResponse) HasFeePolicyDetail() bool {
	if o != nil && !IsNil(o.FeePolicyDetail) {
		return true
	}

	return false
}

// SetFeePolicyDetail gets a reference to the given PolicyFeeResponse and assigns it to the FeePolicyDetail field.
func (o *BundleResponse) SetFeePolicyDetail(v PolicyFeeResponse) {
	o.FeePolicyDetail = &v
}

// GetFeePolicyToken returns the FeePolicyToken field value if set, zero value otherwise.
func (o *BundleResponse) GetFeePolicyToken() string {
	if o == nil || IsNil(o.FeePolicyToken) {
		var ret string
		return ret
	}
	return *o.FeePolicyToken
}

// GetFeePolicyTokenOk returns a tuple with the FeePolicyToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetFeePolicyTokenOk() (*string, bool) {
	if o == nil || IsNil(o.FeePolicyToken) {
		return nil, false
	}
	return o.FeePolicyToken, true
}

// HasFeePolicyToken returns a boolean if a field has been set.
func (o *BundleResponse) HasFeePolicyToken() bool {
	if o != nil && !IsNil(o.FeePolicyToken) {
		return true
	}

	return false
}

// SetFeePolicyToken gets a reference to the given string and assigns it to the FeePolicyToken field.
func (o *BundleResponse) SetFeePolicyToken(v string) {
	o.FeePolicyToken = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BundleResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BundleResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BundleResponse) SetName(v string) {
	o.Name = &v
}

// GetOfferPolicyDetail returns the OfferPolicyDetail field value if set, zero value otherwise.
func (o *BundleResponse) GetOfferPolicyDetail() PolicyOfferResponse {
	if o == nil || IsNil(o.OfferPolicyDetail) {
		var ret PolicyOfferResponse
		return ret
	}
	return *o.OfferPolicyDetail
}

// GetOfferPolicyDetailOk returns a tuple with the OfferPolicyDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetOfferPolicyDetailOk() (*PolicyOfferResponse, bool) {
	if o == nil || IsNil(o.OfferPolicyDetail) {
		return nil, false
	}
	return o.OfferPolicyDetail, true
}

// HasOfferPolicyDetail returns a boolean if a field has been set.
func (o *BundleResponse) HasOfferPolicyDetail() bool {
	if o != nil && !IsNil(o.OfferPolicyDetail) {
		return true
	}

	return false
}

// SetOfferPolicyDetail gets a reference to the given PolicyOfferResponse and assigns it to the OfferPolicyDetail field.
func (o *BundleResponse) SetOfferPolicyDetail(v PolicyOfferResponse) {
	o.OfferPolicyDetail = &v
}

// GetOfferPolicyToken returns the OfferPolicyToken field value if set, zero value otherwise.
func (o *BundleResponse) GetOfferPolicyToken() string {
	if o == nil || IsNil(o.OfferPolicyToken) {
		var ret string
		return ret
	}
	return *o.OfferPolicyToken
}

// GetOfferPolicyTokenOk returns a tuple with the OfferPolicyToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetOfferPolicyTokenOk() (*string, bool) {
	if o == nil || IsNil(o.OfferPolicyToken) {
		return nil, false
	}
	return o.OfferPolicyToken, true
}

// HasOfferPolicyToken returns a boolean if a field has been set.
func (o *BundleResponse) HasOfferPolicyToken() bool {
	if o != nil && !IsNil(o.OfferPolicyToken) {
		return true
	}

	return false
}

// SetOfferPolicyToken gets a reference to the given string and assigns it to the OfferPolicyToken field.
func (o *BundleResponse) SetOfferPolicyToken(v string) {
	o.OfferPolicyToken = &v
}

// GetRewardPolicyDetail returns the RewardPolicyDetail field value if set, zero value otherwise.
func (o *BundleResponse) GetRewardPolicyDetail() PolicyRewardResponse {
	if o == nil || IsNil(o.RewardPolicyDetail) {
		var ret PolicyRewardResponse
		return ret
	}
	return *o.RewardPolicyDetail
}

// GetRewardPolicyDetailOk returns a tuple with the RewardPolicyDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetRewardPolicyDetailOk() (*PolicyRewardResponse, bool) {
	if o == nil || IsNil(o.RewardPolicyDetail) {
		return nil, false
	}
	return o.RewardPolicyDetail, true
}

// HasRewardPolicyDetail returns a boolean if a field has been set.
func (o *BundleResponse) HasRewardPolicyDetail() bool {
	if o != nil && !IsNil(o.RewardPolicyDetail) {
		return true
	}

	return false
}

// SetRewardPolicyDetail gets a reference to the given PolicyRewardResponse and assigns it to the RewardPolicyDetail field.
func (o *BundleResponse) SetRewardPolicyDetail(v PolicyRewardResponse) {
	o.RewardPolicyDetail = &v
}

// GetRewardPolicyToken returns the RewardPolicyToken field value if set, zero value otherwise.
func (o *BundleResponse) GetRewardPolicyToken() string {
	if o == nil || IsNil(o.RewardPolicyToken) {
		var ret string
		return ret
	}
	return *o.RewardPolicyToken
}

// GetRewardPolicyTokenOk returns a tuple with the RewardPolicyToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetRewardPolicyTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RewardPolicyToken) {
		return nil, false
	}
	return o.RewardPolicyToken, true
}

// HasRewardPolicyToken returns a boolean if a field has been set.
func (o *BundleResponse) HasRewardPolicyToken() bool {
	if o != nil && !IsNil(o.RewardPolicyToken) {
		return true
	}

	return false
}

// SetRewardPolicyToken gets a reference to the given string and assigns it to the RewardPolicyToken field.
func (o *BundleResponse) SetRewardPolicyToken(v string) {
	o.RewardPolicyToken = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BundleResponse) GetStatus() BundleResourceStatus {
	if o == nil || IsNil(o.Status) {
		var ret BundleResourceStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetStatusOk() (*BundleResourceStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BundleResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BundleResourceStatus and assigns it to the Status field.
func (o *BundleResponse) SetStatus(v BundleResourceStatus) {
	o.Status = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *BundleResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *BundleResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *BundleResponse) SetToken(v string) {
	o.Token = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *BundleResponse) GetUpdatedTime() time.Time {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleResponse) GetUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *BundleResponse) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given time.Time and assigns it to the UpdatedTime field.
func (o *BundleResponse) SetUpdatedTime(v time.Time) {
	o.UpdatedTime = &v
}

func (o BundleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BundleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AprPolicyDetail) {
		toSerialize["apr_policy_detail"] = o.AprPolicyDetail
	}
	if !IsNil(o.AprPolicyToken) {
		toSerialize["apr_policy_token"] = o.AprPolicyToken
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.CreditProductPolicyDetail) {
		toSerialize["credit_product_policy_detail"] = o.CreditProductPolicyDetail
	}
	if !IsNil(o.CreditProductPolicyToken) {
		toSerialize["credit_product_policy_token"] = o.CreditProductPolicyToken
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DocumentPolicyDetail) {
		toSerialize["document_policy_detail"] = o.DocumentPolicyDetail
	}
	if !IsNil(o.DocumentPolicyToken) {
		toSerialize["document_policy_token"] = o.DocumentPolicyToken
	}
	if !IsNil(o.FeePolicyDetail) {
		toSerialize["fee_policy_detail"] = o.FeePolicyDetail
	}
	if !IsNil(o.FeePolicyToken) {
		toSerialize["fee_policy_token"] = o.FeePolicyToken
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OfferPolicyDetail) {
		toSerialize["offer_policy_detail"] = o.OfferPolicyDetail
	}
	if !IsNil(o.OfferPolicyToken) {
		toSerialize["offer_policy_token"] = o.OfferPolicyToken
	}
	if !IsNil(o.RewardPolicyDetail) {
		toSerialize["reward_policy_detail"] = o.RewardPolicyDetail
	}
	if !IsNil(o.RewardPolicyToken) {
		toSerialize["reward_policy_token"] = o.RewardPolicyToken
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updated_time"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullableBundleResponse struct {
	value *BundleResponse
	isSet bool
}

func (v NullableBundleResponse) Get() *BundleResponse {
	return v.value
}

func (v *NullableBundleResponse) Set(val *BundleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBundleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBundleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundleResponse(val *BundleResponse) *NullableBundleResponse {
	return &NullableBundleResponse{value: val, isSet: true}
}

func (v NullableBundleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


