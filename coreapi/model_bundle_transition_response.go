/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the BundleTransitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BundleTransitionResponse{}

// BundleTransitionResponse Contains information on a bundle transition.
type BundleTransitionResponse struct {
	// Unique identifier of the bundle.
	BundleToken *string `json:"bundle_token,omitempty"`
	// Date and time when the bundle was changed the status on Marqeta's credit platform, in UTC.
	CreatedTime *time.Time `json:"created_time,omitempty"`
	OriginalStatus *BundleResourceStatus `json:"original_status,omitempty"`
	Status *BundleResourceStatus `json:"status,omitempty"`
	// Unique identifier of the bundle transition.
	Token *string `json:"token,omitempty"`
}

// NewBundleTransitionResponse instantiates a new BundleTransitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundleTransitionResponse() *BundleTransitionResponse {
	this := BundleTransitionResponse{}
	return &this
}

// NewBundleTransitionResponseWithDefaults instantiates a new BundleTransitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundleTransitionResponseWithDefaults() *BundleTransitionResponse {
	this := BundleTransitionResponse{}
	return &this
}

// GetBundleToken returns the BundleToken field value if set, zero value otherwise.
func (o *BundleTransitionResponse) GetBundleToken() string {
	if o == nil || IsNil(o.BundleToken) {
		var ret string
		return ret
	}
	return *o.BundleToken
}

// GetBundleTokenOk returns a tuple with the BundleToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleTransitionResponse) GetBundleTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BundleToken) {
		return nil, false
	}
	return o.BundleToken, true
}

// HasBundleToken returns a boolean if a field has been set.
func (o *BundleTransitionResponse) HasBundleToken() bool {
	if o != nil && !IsNil(o.BundleToken) {
		return true
	}

	return false
}

// SetBundleToken gets a reference to the given string and assigns it to the BundleToken field.
func (o *BundleTransitionResponse) SetBundleToken(v string) {
	o.BundleToken = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *BundleTransitionResponse) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleTransitionResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *BundleTransitionResponse) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *BundleTransitionResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetOriginalStatus returns the OriginalStatus field value if set, zero value otherwise.
func (o *BundleTransitionResponse) GetOriginalStatus() BundleResourceStatus {
	if o == nil || IsNil(o.OriginalStatus) {
		var ret BundleResourceStatus
		return ret
	}
	return *o.OriginalStatus
}

// GetOriginalStatusOk returns a tuple with the OriginalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleTransitionResponse) GetOriginalStatusOk() (*BundleResourceStatus, bool) {
	if o == nil || IsNil(o.OriginalStatus) {
		return nil, false
	}
	return o.OriginalStatus, true
}

// HasOriginalStatus returns a boolean if a field has been set.
func (o *BundleTransitionResponse) HasOriginalStatus() bool {
	if o != nil && !IsNil(o.OriginalStatus) {
		return true
	}

	return false
}

// SetOriginalStatus gets a reference to the given BundleResourceStatus and assigns it to the OriginalStatus field.
func (o *BundleTransitionResponse) SetOriginalStatus(v BundleResourceStatus) {
	o.OriginalStatus = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BundleTransitionResponse) GetStatus() BundleResourceStatus {
	if o == nil || IsNil(o.Status) {
		var ret BundleResourceStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleTransitionResponse) GetStatusOk() (*BundleResourceStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BundleTransitionResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BundleResourceStatus and assigns it to the Status field.
func (o *BundleTransitionResponse) SetStatus(v BundleResourceStatus) {
	o.Status = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *BundleTransitionResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundleTransitionResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *BundleTransitionResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *BundleTransitionResponse) SetToken(v string) {
	o.Token = &v
}

func (o BundleTransitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BundleTransitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BundleToken) {
		toSerialize["bundle_token"] = o.BundleToken
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.OriginalStatus) {
		toSerialize["original_status"] = o.OriginalStatus
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableBundleTransitionResponse struct {
	value *BundleTransitionResponse
	isSet bool
}

func (v NullableBundleTransitionResponse) Get() *BundleTransitionResponse {
	return v.value
}

func (v *NullableBundleTransitionResponse) Set(val *BundleTransitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBundleTransitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBundleTransitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundleTransitionResponse(val *BundleTransitionResponse) *NullableBundleTransitionResponse {
	return &NullableBundleTransitionResponse{value: val, isSet: true}
}

func (v NullableBundleTransitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundleTransitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


