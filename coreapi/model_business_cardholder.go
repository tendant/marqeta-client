/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
	"time"
)

// checks if the BusinessCardholder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BusinessCardholder{}

// BusinessCardholder struct for BusinessCardholder
type BusinessCardholder struct {
	// Existing account holder group token that associates the specified account holder group with the business. Send a `GET` request to `/accountholdergroups` to retrieve account holder group tokens.
	AccountHolderGroupToken *string `json:"account_holder_group_token,omitempty"`
	// Specifies if the business is in the `ACTIVE` state on the Marqeta platform.
	Active *bool `json:"active,omitempty"`
	// Indicates that the attester agrees that the information provided is correct and truthful.  This field is required for KYC verification (US-based accounts only).
	AttestationConsent *bool `json:"attestation_consent,omitempty"`
	// Timestamp of the attestation.  This field is required for KYC verification (US-based accounts only).
	AttestationDate *time.Time `json:"attestation_date,omitempty"`
	// Name of the attester for KYC verification.  This field is required for KYC verification (US-based accounts only).
	AttesterName *string `json:"attester_name,omitempty"`
	// Title of the attester for KYC verification.
	AttesterTitle *string `json:"attester_title,omitempty"`
	BeneficialOwner1 *BeneficialOwnerRequest `json:"beneficial_owner1,omitempty"`
	BeneficialOwner2 *BeneficialOwnerRequest `json:"beneficial_owner2,omitempty"`
	BeneficialOwner3 *BeneficialOwnerRequest `json:"beneficial_owner3,omitempty"`
	BeneficialOwner4 *BeneficialOwnerRequest `json:"beneficial_owner4,omitempty"`
	// Fictitious business name (\"Doing Business As\" or DBA).  This field is required for KYC verification (US-based accounts only). If your business does not use a fictitious business name, enter your legal business name again in this field.
	BusinessNameDba *string `json:"business_name_dba,omitempty"`
	// Legal name of business.  This field is required for KYC verification (US-based accounts only).
	BusinessNameLegal *string `json:"business_name_legal,omitempty"`
	// Indicates the type of business, for example B2B (business-to-business) or B2C (business-to-consumer).
	BusinessType *string `json:"business_type,omitempty"`
	// Date the business was established.  This field is required for KYC verification (US-based accounts only).
	DateEstablished *time.Time `json:"date_established,omitempty"`
	// Data Universal Numbering System (DUNS) number of the business.
	DunsNumber *string `json:"duns_number,omitempty"`
	// General description of the business.
	GeneralBusinessDescription *string `json:"general_business_description,omitempty"`
	// History of the business.
	History *string `json:"history,omitempty"`
	// One or more objects containing identifications associated with the business.
	Identifications []IdentificationRequestModel `json:"identifications,omitempty"`
	// Date on which the business office opened in its current location.
	InCurrentLocationSince *time.Time `json:"in_current_location_since,omitempty"`
	Incorporation *BusinessIncorporation `json:"incorporation,omitempty"`
	// Locations of the business' offices outside the US.
	InternationalOfficeLocations *string `json:"international_office_locations,omitempty"`
	// IP address of the business.
	IpAddress *string `json:"ip_address,omitempty"`
	// Associates any additional metadata you provide with the business.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// Any additional information pertaining to the business.
	Notes *string `json:"notes,omitempty"`
	OfficeLocation *AddressRequestModel `json:"office_location,omitempty"`
	// Password for the business account on the Marqeta platform.
	Password *string `json:"password,omitempty"`
	// 10-digit telephone number of business.
	Phone *string `json:"phone,omitempty"`
	PrimaryContact *PrimaryContactInfoModel `json:"primary_contact,omitempty"`
	// Indicates that the proprietor or officer of the business is also a beneficial owner.  This field is required for KYC verification if the business proprietor or officer is also a beneficial owner.
	ProprietorIsBeneficialOwner *bool `json:"proprietor_is_beneficial_owner,omitempty"`
	ProprietorOrOfficer *BusinessProprietor `json:"proprietor_or_officer,omitempty"`
	// Taxpayer identifier of the business.
	TaxpayerId *string `json:"taxpayer_id,omitempty"`
	// Unique identifier of the business resource.  If you do not include a token, the system generates one automatically. This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember. This value cannot be updated.
	Token *string `json:"token,omitempty"`
	// URL of the business' website.
	Website *string `json:"website,omitempty"`
}

// NewBusinessCardholder instantiates a new BusinessCardholder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusinessCardholder() *BusinessCardholder {
	this := BusinessCardholder{}
	var active bool = true
	this.Active = &active
	var attestationConsent bool = false
	this.AttestationConsent = &attestationConsent
	var proprietorIsBeneficialOwner bool = false
	this.ProprietorIsBeneficialOwner = &proprietorIsBeneficialOwner
	return &this
}

// NewBusinessCardholderWithDefaults instantiates a new BusinessCardholder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusinessCardholderWithDefaults() *BusinessCardholder {
	this := BusinessCardholder{}
	var active bool = true
	this.Active = &active
	var attestationConsent bool = false
	this.AttestationConsent = &attestationConsent
	var proprietorIsBeneficialOwner bool = false
	this.ProprietorIsBeneficialOwner = &proprietorIsBeneficialOwner
	return &this
}

// GetAccountHolderGroupToken returns the AccountHolderGroupToken field value if set, zero value otherwise.
func (o *BusinessCardholder) GetAccountHolderGroupToken() string {
	if o == nil || IsNil(o.AccountHolderGroupToken) {
		var ret string
		return ret
	}
	return *o.AccountHolderGroupToken
}

// GetAccountHolderGroupTokenOk returns a tuple with the AccountHolderGroupToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetAccountHolderGroupTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccountHolderGroupToken) {
		return nil, false
	}
	return o.AccountHolderGroupToken, true
}

// HasAccountHolderGroupToken returns a boolean if a field has been set.
func (o *BusinessCardholder) HasAccountHolderGroupToken() bool {
	if o != nil && !IsNil(o.AccountHolderGroupToken) {
		return true
	}

	return false
}

// SetAccountHolderGroupToken gets a reference to the given string and assigns it to the AccountHolderGroupToken field.
func (o *BusinessCardholder) SetAccountHolderGroupToken(v string) {
	o.AccountHolderGroupToken = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *BusinessCardholder) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *BusinessCardholder) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *BusinessCardholder) SetActive(v bool) {
	o.Active = &v
}

// GetAttestationConsent returns the AttestationConsent field value if set, zero value otherwise.
func (o *BusinessCardholder) GetAttestationConsent() bool {
	if o == nil || IsNil(o.AttestationConsent) {
		var ret bool
		return ret
	}
	return *o.AttestationConsent
}

// GetAttestationConsentOk returns a tuple with the AttestationConsent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetAttestationConsentOk() (*bool, bool) {
	if o == nil || IsNil(o.AttestationConsent) {
		return nil, false
	}
	return o.AttestationConsent, true
}

// HasAttestationConsent returns a boolean if a field has been set.
func (o *BusinessCardholder) HasAttestationConsent() bool {
	if o != nil && !IsNil(o.AttestationConsent) {
		return true
	}

	return false
}

// SetAttestationConsent gets a reference to the given bool and assigns it to the AttestationConsent field.
func (o *BusinessCardholder) SetAttestationConsent(v bool) {
	o.AttestationConsent = &v
}

// GetAttestationDate returns the AttestationDate field value if set, zero value otherwise.
func (o *BusinessCardholder) GetAttestationDate() time.Time {
	if o == nil || IsNil(o.AttestationDate) {
		var ret time.Time
		return ret
	}
	return *o.AttestationDate
}

// GetAttestationDateOk returns a tuple with the AttestationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetAttestationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AttestationDate) {
		return nil, false
	}
	return o.AttestationDate, true
}

// HasAttestationDate returns a boolean if a field has been set.
func (o *BusinessCardholder) HasAttestationDate() bool {
	if o != nil && !IsNil(o.AttestationDate) {
		return true
	}

	return false
}

// SetAttestationDate gets a reference to the given time.Time and assigns it to the AttestationDate field.
func (o *BusinessCardholder) SetAttestationDate(v time.Time) {
	o.AttestationDate = &v
}

// GetAttesterName returns the AttesterName field value if set, zero value otherwise.
func (o *BusinessCardholder) GetAttesterName() string {
	if o == nil || IsNil(o.AttesterName) {
		var ret string
		return ret
	}
	return *o.AttesterName
}

// GetAttesterNameOk returns a tuple with the AttesterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetAttesterNameOk() (*string, bool) {
	if o == nil || IsNil(o.AttesterName) {
		return nil, false
	}
	return o.AttesterName, true
}

// HasAttesterName returns a boolean if a field has been set.
func (o *BusinessCardholder) HasAttesterName() bool {
	if o != nil && !IsNil(o.AttesterName) {
		return true
	}

	return false
}

// SetAttesterName gets a reference to the given string and assigns it to the AttesterName field.
func (o *BusinessCardholder) SetAttesterName(v string) {
	o.AttesterName = &v
}

// GetAttesterTitle returns the AttesterTitle field value if set, zero value otherwise.
func (o *BusinessCardholder) GetAttesterTitle() string {
	if o == nil || IsNil(o.AttesterTitle) {
		var ret string
		return ret
	}
	return *o.AttesterTitle
}

// GetAttesterTitleOk returns a tuple with the AttesterTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetAttesterTitleOk() (*string, bool) {
	if o == nil || IsNil(o.AttesterTitle) {
		return nil, false
	}
	return o.AttesterTitle, true
}

// HasAttesterTitle returns a boolean if a field has been set.
func (o *BusinessCardholder) HasAttesterTitle() bool {
	if o != nil && !IsNil(o.AttesterTitle) {
		return true
	}

	return false
}

// SetAttesterTitle gets a reference to the given string and assigns it to the AttesterTitle field.
func (o *BusinessCardholder) SetAttesterTitle(v string) {
	o.AttesterTitle = &v
}

// GetBeneficialOwner1 returns the BeneficialOwner1 field value if set, zero value otherwise.
func (o *BusinessCardholder) GetBeneficialOwner1() BeneficialOwnerRequest {
	if o == nil || IsNil(o.BeneficialOwner1) {
		var ret BeneficialOwnerRequest
		return ret
	}
	return *o.BeneficialOwner1
}

// GetBeneficialOwner1Ok returns a tuple with the BeneficialOwner1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetBeneficialOwner1Ok() (*BeneficialOwnerRequest, bool) {
	if o == nil || IsNil(o.BeneficialOwner1) {
		return nil, false
	}
	return o.BeneficialOwner1, true
}

// HasBeneficialOwner1 returns a boolean if a field has been set.
func (o *BusinessCardholder) HasBeneficialOwner1() bool {
	if o != nil && !IsNil(o.BeneficialOwner1) {
		return true
	}

	return false
}

// SetBeneficialOwner1 gets a reference to the given BeneficialOwnerRequest and assigns it to the BeneficialOwner1 field.
func (o *BusinessCardholder) SetBeneficialOwner1(v BeneficialOwnerRequest) {
	o.BeneficialOwner1 = &v
}

// GetBeneficialOwner2 returns the BeneficialOwner2 field value if set, zero value otherwise.
func (o *BusinessCardholder) GetBeneficialOwner2() BeneficialOwnerRequest {
	if o == nil || IsNil(o.BeneficialOwner2) {
		var ret BeneficialOwnerRequest
		return ret
	}
	return *o.BeneficialOwner2
}

// GetBeneficialOwner2Ok returns a tuple with the BeneficialOwner2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetBeneficialOwner2Ok() (*BeneficialOwnerRequest, bool) {
	if o == nil || IsNil(o.BeneficialOwner2) {
		return nil, false
	}
	return o.BeneficialOwner2, true
}

// HasBeneficialOwner2 returns a boolean if a field has been set.
func (o *BusinessCardholder) HasBeneficialOwner2() bool {
	if o != nil && !IsNil(o.BeneficialOwner2) {
		return true
	}

	return false
}

// SetBeneficialOwner2 gets a reference to the given BeneficialOwnerRequest and assigns it to the BeneficialOwner2 field.
func (o *BusinessCardholder) SetBeneficialOwner2(v BeneficialOwnerRequest) {
	o.BeneficialOwner2 = &v
}

// GetBeneficialOwner3 returns the BeneficialOwner3 field value if set, zero value otherwise.
func (o *BusinessCardholder) GetBeneficialOwner3() BeneficialOwnerRequest {
	if o == nil || IsNil(o.BeneficialOwner3) {
		var ret BeneficialOwnerRequest
		return ret
	}
	return *o.BeneficialOwner3
}

// GetBeneficialOwner3Ok returns a tuple with the BeneficialOwner3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetBeneficialOwner3Ok() (*BeneficialOwnerRequest, bool) {
	if o == nil || IsNil(o.BeneficialOwner3) {
		return nil, false
	}
	return o.BeneficialOwner3, true
}

// HasBeneficialOwner3 returns a boolean if a field has been set.
func (o *BusinessCardholder) HasBeneficialOwner3() bool {
	if o != nil && !IsNil(o.BeneficialOwner3) {
		return true
	}

	return false
}

// SetBeneficialOwner3 gets a reference to the given BeneficialOwnerRequest and assigns it to the BeneficialOwner3 field.
func (o *BusinessCardholder) SetBeneficialOwner3(v BeneficialOwnerRequest) {
	o.BeneficialOwner3 = &v
}

// GetBeneficialOwner4 returns the BeneficialOwner4 field value if set, zero value otherwise.
func (o *BusinessCardholder) GetBeneficialOwner4() BeneficialOwnerRequest {
	if o == nil || IsNil(o.BeneficialOwner4) {
		var ret BeneficialOwnerRequest
		return ret
	}
	return *o.BeneficialOwner4
}

// GetBeneficialOwner4Ok returns a tuple with the BeneficialOwner4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetBeneficialOwner4Ok() (*BeneficialOwnerRequest, bool) {
	if o == nil || IsNil(o.BeneficialOwner4) {
		return nil, false
	}
	return o.BeneficialOwner4, true
}

// HasBeneficialOwner4 returns a boolean if a field has been set.
func (o *BusinessCardholder) HasBeneficialOwner4() bool {
	if o != nil && !IsNil(o.BeneficialOwner4) {
		return true
	}

	return false
}

// SetBeneficialOwner4 gets a reference to the given BeneficialOwnerRequest and assigns it to the BeneficialOwner4 field.
func (o *BusinessCardholder) SetBeneficialOwner4(v BeneficialOwnerRequest) {
	o.BeneficialOwner4 = &v
}

// GetBusinessNameDba returns the BusinessNameDba field value if set, zero value otherwise.
func (o *BusinessCardholder) GetBusinessNameDba() string {
	if o == nil || IsNil(o.BusinessNameDba) {
		var ret string
		return ret
	}
	return *o.BusinessNameDba
}

// GetBusinessNameDbaOk returns a tuple with the BusinessNameDba field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetBusinessNameDbaOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessNameDba) {
		return nil, false
	}
	return o.BusinessNameDba, true
}

// HasBusinessNameDba returns a boolean if a field has been set.
func (o *BusinessCardholder) HasBusinessNameDba() bool {
	if o != nil && !IsNil(o.BusinessNameDba) {
		return true
	}

	return false
}

// SetBusinessNameDba gets a reference to the given string and assigns it to the BusinessNameDba field.
func (o *BusinessCardholder) SetBusinessNameDba(v string) {
	o.BusinessNameDba = &v
}

// GetBusinessNameLegal returns the BusinessNameLegal field value if set, zero value otherwise.
func (o *BusinessCardholder) GetBusinessNameLegal() string {
	if o == nil || IsNil(o.BusinessNameLegal) {
		var ret string
		return ret
	}
	return *o.BusinessNameLegal
}

// GetBusinessNameLegalOk returns a tuple with the BusinessNameLegal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetBusinessNameLegalOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessNameLegal) {
		return nil, false
	}
	return o.BusinessNameLegal, true
}

// HasBusinessNameLegal returns a boolean if a field has been set.
func (o *BusinessCardholder) HasBusinessNameLegal() bool {
	if o != nil && !IsNil(o.BusinessNameLegal) {
		return true
	}

	return false
}

// SetBusinessNameLegal gets a reference to the given string and assigns it to the BusinessNameLegal field.
func (o *BusinessCardholder) SetBusinessNameLegal(v string) {
	o.BusinessNameLegal = &v
}

// GetBusinessType returns the BusinessType field value if set, zero value otherwise.
func (o *BusinessCardholder) GetBusinessType() string {
	if o == nil || IsNil(o.BusinessType) {
		var ret string
		return ret
	}
	return *o.BusinessType
}

// GetBusinessTypeOk returns a tuple with the BusinessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetBusinessTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessType) {
		return nil, false
	}
	return o.BusinessType, true
}

// HasBusinessType returns a boolean if a field has been set.
func (o *BusinessCardholder) HasBusinessType() bool {
	if o != nil && !IsNil(o.BusinessType) {
		return true
	}

	return false
}

// SetBusinessType gets a reference to the given string and assigns it to the BusinessType field.
func (o *BusinessCardholder) SetBusinessType(v string) {
	o.BusinessType = &v
}

// GetDateEstablished returns the DateEstablished field value if set, zero value otherwise.
func (o *BusinessCardholder) GetDateEstablished() time.Time {
	if o == nil || IsNil(o.DateEstablished) {
		var ret time.Time
		return ret
	}
	return *o.DateEstablished
}

// GetDateEstablishedOk returns a tuple with the DateEstablished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetDateEstablishedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateEstablished) {
		return nil, false
	}
	return o.DateEstablished, true
}

// HasDateEstablished returns a boolean if a field has been set.
func (o *BusinessCardholder) HasDateEstablished() bool {
	if o != nil && !IsNil(o.DateEstablished) {
		return true
	}

	return false
}

// SetDateEstablished gets a reference to the given time.Time and assigns it to the DateEstablished field.
func (o *BusinessCardholder) SetDateEstablished(v time.Time) {
	o.DateEstablished = &v
}

// GetDunsNumber returns the DunsNumber field value if set, zero value otherwise.
func (o *BusinessCardholder) GetDunsNumber() string {
	if o == nil || IsNil(o.DunsNumber) {
		var ret string
		return ret
	}
	return *o.DunsNumber
}

// GetDunsNumberOk returns a tuple with the DunsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetDunsNumberOk() (*string, bool) {
	if o == nil || IsNil(o.DunsNumber) {
		return nil, false
	}
	return o.DunsNumber, true
}

// HasDunsNumber returns a boolean if a field has been set.
func (o *BusinessCardholder) HasDunsNumber() bool {
	if o != nil && !IsNil(o.DunsNumber) {
		return true
	}

	return false
}

// SetDunsNumber gets a reference to the given string and assigns it to the DunsNumber field.
func (o *BusinessCardholder) SetDunsNumber(v string) {
	o.DunsNumber = &v
}

// GetGeneralBusinessDescription returns the GeneralBusinessDescription field value if set, zero value otherwise.
func (o *BusinessCardholder) GetGeneralBusinessDescription() string {
	if o == nil || IsNil(o.GeneralBusinessDescription) {
		var ret string
		return ret
	}
	return *o.GeneralBusinessDescription
}

// GetGeneralBusinessDescriptionOk returns a tuple with the GeneralBusinessDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetGeneralBusinessDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.GeneralBusinessDescription) {
		return nil, false
	}
	return o.GeneralBusinessDescription, true
}

// HasGeneralBusinessDescription returns a boolean if a field has been set.
func (o *BusinessCardholder) HasGeneralBusinessDescription() bool {
	if o != nil && !IsNil(o.GeneralBusinessDescription) {
		return true
	}

	return false
}

// SetGeneralBusinessDescription gets a reference to the given string and assigns it to the GeneralBusinessDescription field.
func (o *BusinessCardholder) SetGeneralBusinessDescription(v string) {
	o.GeneralBusinessDescription = &v
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *BusinessCardholder) GetHistory() string {
	if o == nil || IsNil(o.History) {
		var ret string
		return ret
	}
	return *o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetHistoryOk() (*string, bool) {
	if o == nil || IsNil(o.History) {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *BusinessCardholder) HasHistory() bool {
	if o != nil && !IsNil(o.History) {
		return true
	}

	return false
}

// SetHistory gets a reference to the given string and assigns it to the History field.
func (o *BusinessCardholder) SetHistory(v string) {
	o.History = &v
}

// GetIdentifications returns the Identifications field value if set, zero value otherwise.
func (o *BusinessCardholder) GetIdentifications() []IdentificationRequestModel {
	if o == nil || IsNil(o.Identifications) {
		var ret []IdentificationRequestModel
		return ret
	}
	return o.Identifications
}

// GetIdentificationsOk returns a tuple with the Identifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetIdentificationsOk() ([]IdentificationRequestModel, bool) {
	if o == nil || IsNil(o.Identifications) {
		return nil, false
	}
	return o.Identifications, true
}

// HasIdentifications returns a boolean if a field has been set.
func (o *BusinessCardholder) HasIdentifications() bool {
	if o != nil && !IsNil(o.Identifications) {
		return true
	}

	return false
}

// SetIdentifications gets a reference to the given []IdentificationRequestModel and assigns it to the Identifications field.
func (o *BusinessCardholder) SetIdentifications(v []IdentificationRequestModel) {
	o.Identifications = v
}

// GetInCurrentLocationSince returns the InCurrentLocationSince field value if set, zero value otherwise.
func (o *BusinessCardholder) GetInCurrentLocationSince() time.Time {
	if o == nil || IsNil(o.InCurrentLocationSince) {
		var ret time.Time
		return ret
	}
	return *o.InCurrentLocationSince
}

// GetInCurrentLocationSinceOk returns a tuple with the InCurrentLocationSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetInCurrentLocationSinceOk() (*time.Time, bool) {
	if o == nil || IsNil(o.InCurrentLocationSince) {
		return nil, false
	}
	return o.InCurrentLocationSince, true
}

// HasInCurrentLocationSince returns a boolean if a field has been set.
func (o *BusinessCardholder) HasInCurrentLocationSince() bool {
	if o != nil && !IsNil(o.InCurrentLocationSince) {
		return true
	}

	return false
}

// SetInCurrentLocationSince gets a reference to the given time.Time and assigns it to the InCurrentLocationSince field.
func (o *BusinessCardholder) SetInCurrentLocationSince(v time.Time) {
	o.InCurrentLocationSince = &v
}

// GetIncorporation returns the Incorporation field value if set, zero value otherwise.
func (o *BusinessCardholder) GetIncorporation() BusinessIncorporation {
	if o == nil || IsNil(o.Incorporation) {
		var ret BusinessIncorporation
		return ret
	}
	return *o.Incorporation
}

// GetIncorporationOk returns a tuple with the Incorporation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetIncorporationOk() (*BusinessIncorporation, bool) {
	if o == nil || IsNil(o.Incorporation) {
		return nil, false
	}
	return o.Incorporation, true
}

// HasIncorporation returns a boolean if a field has been set.
func (o *BusinessCardholder) HasIncorporation() bool {
	if o != nil && !IsNil(o.Incorporation) {
		return true
	}

	return false
}

// SetIncorporation gets a reference to the given BusinessIncorporation and assigns it to the Incorporation field.
func (o *BusinessCardholder) SetIncorporation(v BusinessIncorporation) {
	o.Incorporation = &v
}

// GetInternationalOfficeLocations returns the InternationalOfficeLocations field value if set, zero value otherwise.
func (o *BusinessCardholder) GetInternationalOfficeLocations() string {
	if o == nil || IsNil(o.InternationalOfficeLocations) {
		var ret string
		return ret
	}
	return *o.InternationalOfficeLocations
}

// GetInternationalOfficeLocationsOk returns a tuple with the InternationalOfficeLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetInternationalOfficeLocationsOk() (*string, bool) {
	if o == nil || IsNil(o.InternationalOfficeLocations) {
		return nil, false
	}
	return o.InternationalOfficeLocations, true
}

// HasInternationalOfficeLocations returns a boolean if a field has been set.
func (o *BusinessCardholder) HasInternationalOfficeLocations() bool {
	if o != nil && !IsNil(o.InternationalOfficeLocations) {
		return true
	}

	return false
}

// SetInternationalOfficeLocations gets a reference to the given string and assigns it to the InternationalOfficeLocations field.
func (o *BusinessCardholder) SetInternationalOfficeLocations(v string) {
	o.InternationalOfficeLocations = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *BusinessCardholder) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *BusinessCardholder) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *BusinessCardholder) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *BusinessCardholder) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BusinessCardholder) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *BusinessCardholder) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *BusinessCardholder) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *BusinessCardholder) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *BusinessCardholder) SetNotes(v string) {
	o.Notes = &v
}

// GetOfficeLocation returns the OfficeLocation field value if set, zero value otherwise.
func (o *BusinessCardholder) GetOfficeLocation() AddressRequestModel {
	if o == nil || IsNil(o.OfficeLocation) {
		var ret AddressRequestModel
		return ret
	}
	return *o.OfficeLocation
}

// GetOfficeLocationOk returns a tuple with the OfficeLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetOfficeLocationOk() (*AddressRequestModel, bool) {
	if o == nil || IsNil(o.OfficeLocation) {
		return nil, false
	}
	return o.OfficeLocation, true
}

// HasOfficeLocation returns a boolean if a field has been set.
func (o *BusinessCardholder) HasOfficeLocation() bool {
	if o != nil && !IsNil(o.OfficeLocation) {
		return true
	}

	return false
}

// SetOfficeLocation gets a reference to the given AddressRequestModel and assigns it to the OfficeLocation field.
func (o *BusinessCardholder) SetOfficeLocation(v AddressRequestModel) {
	o.OfficeLocation = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *BusinessCardholder) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *BusinessCardholder) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *BusinessCardholder) SetPassword(v string) {
	o.Password = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *BusinessCardholder) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *BusinessCardholder) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *BusinessCardholder) SetPhone(v string) {
	o.Phone = &v
}

// GetPrimaryContact returns the PrimaryContact field value if set, zero value otherwise.
func (o *BusinessCardholder) GetPrimaryContact() PrimaryContactInfoModel {
	if o == nil || IsNil(o.PrimaryContact) {
		var ret PrimaryContactInfoModel
		return ret
	}
	return *o.PrimaryContact
}

// GetPrimaryContactOk returns a tuple with the PrimaryContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetPrimaryContactOk() (*PrimaryContactInfoModel, bool) {
	if o == nil || IsNil(o.PrimaryContact) {
		return nil, false
	}
	return o.PrimaryContact, true
}

// HasPrimaryContact returns a boolean if a field has been set.
func (o *BusinessCardholder) HasPrimaryContact() bool {
	if o != nil && !IsNil(o.PrimaryContact) {
		return true
	}

	return false
}

// SetPrimaryContact gets a reference to the given PrimaryContactInfoModel and assigns it to the PrimaryContact field.
func (o *BusinessCardholder) SetPrimaryContact(v PrimaryContactInfoModel) {
	o.PrimaryContact = &v
}

// GetProprietorIsBeneficialOwner returns the ProprietorIsBeneficialOwner field value if set, zero value otherwise.
func (o *BusinessCardholder) GetProprietorIsBeneficialOwner() bool {
	if o == nil || IsNil(o.ProprietorIsBeneficialOwner) {
		var ret bool
		return ret
	}
	return *o.ProprietorIsBeneficialOwner
}

// GetProprietorIsBeneficialOwnerOk returns a tuple with the ProprietorIsBeneficialOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetProprietorIsBeneficialOwnerOk() (*bool, bool) {
	if o == nil || IsNil(o.ProprietorIsBeneficialOwner) {
		return nil, false
	}
	return o.ProprietorIsBeneficialOwner, true
}

// HasProprietorIsBeneficialOwner returns a boolean if a field has been set.
func (o *BusinessCardholder) HasProprietorIsBeneficialOwner() bool {
	if o != nil && !IsNil(o.ProprietorIsBeneficialOwner) {
		return true
	}

	return false
}

// SetProprietorIsBeneficialOwner gets a reference to the given bool and assigns it to the ProprietorIsBeneficialOwner field.
func (o *BusinessCardholder) SetProprietorIsBeneficialOwner(v bool) {
	o.ProprietorIsBeneficialOwner = &v
}

// GetProprietorOrOfficer returns the ProprietorOrOfficer field value if set, zero value otherwise.
func (o *BusinessCardholder) GetProprietorOrOfficer() BusinessProprietor {
	if o == nil || IsNil(o.ProprietorOrOfficer) {
		var ret BusinessProprietor
		return ret
	}
	return *o.ProprietorOrOfficer
}

// GetProprietorOrOfficerOk returns a tuple with the ProprietorOrOfficer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetProprietorOrOfficerOk() (*BusinessProprietor, bool) {
	if o == nil || IsNil(o.ProprietorOrOfficer) {
		return nil, false
	}
	return o.ProprietorOrOfficer, true
}

// HasProprietorOrOfficer returns a boolean if a field has been set.
func (o *BusinessCardholder) HasProprietorOrOfficer() bool {
	if o != nil && !IsNil(o.ProprietorOrOfficer) {
		return true
	}

	return false
}

// SetProprietorOrOfficer gets a reference to the given BusinessProprietor and assigns it to the ProprietorOrOfficer field.
func (o *BusinessCardholder) SetProprietorOrOfficer(v BusinessProprietor) {
	o.ProprietorOrOfficer = &v
}

// GetTaxpayerId returns the TaxpayerId field value if set, zero value otherwise.
func (o *BusinessCardholder) GetTaxpayerId() string {
	if o == nil || IsNil(o.TaxpayerId) {
		var ret string
		return ret
	}
	return *o.TaxpayerId
}

// GetTaxpayerIdOk returns a tuple with the TaxpayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetTaxpayerIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxpayerId) {
		return nil, false
	}
	return o.TaxpayerId, true
}

// HasTaxpayerId returns a boolean if a field has been set.
func (o *BusinessCardholder) HasTaxpayerId() bool {
	if o != nil && !IsNil(o.TaxpayerId) {
		return true
	}

	return false
}

// SetTaxpayerId gets a reference to the given string and assigns it to the TaxpayerId field.
func (o *BusinessCardholder) SetTaxpayerId(v string) {
	o.TaxpayerId = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *BusinessCardholder) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *BusinessCardholder) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *BusinessCardholder) SetToken(v string) {
	o.Token = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *BusinessCardholder) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardholder) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *BusinessCardholder) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *BusinessCardholder) SetWebsite(v string) {
	o.Website = &v
}

func (o BusinessCardholder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BusinessCardholder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountHolderGroupToken) {
		toSerialize["account_holder_group_token"] = o.AccountHolderGroupToken
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AttestationConsent) {
		toSerialize["attestation_consent"] = o.AttestationConsent
	}
	if !IsNil(o.AttestationDate) {
		toSerialize["attestation_date"] = o.AttestationDate
	}
	if !IsNil(o.AttesterName) {
		toSerialize["attester_name"] = o.AttesterName
	}
	if !IsNil(o.AttesterTitle) {
		toSerialize["attester_title"] = o.AttesterTitle
	}
	if !IsNil(o.BeneficialOwner1) {
		toSerialize["beneficial_owner1"] = o.BeneficialOwner1
	}
	if !IsNil(o.BeneficialOwner2) {
		toSerialize["beneficial_owner2"] = o.BeneficialOwner2
	}
	if !IsNil(o.BeneficialOwner3) {
		toSerialize["beneficial_owner3"] = o.BeneficialOwner3
	}
	if !IsNil(o.BeneficialOwner4) {
		toSerialize["beneficial_owner4"] = o.BeneficialOwner4
	}
	if !IsNil(o.BusinessNameDba) {
		toSerialize["business_name_dba"] = o.BusinessNameDba
	}
	if !IsNil(o.BusinessNameLegal) {
		toSerialize["business_name_legal"] = o.BusinessNameLegal
	}
	if !IsNil(o.BusinessType) {
		toSerialize["business_type"] = o.BusinessType
	}
	if !IsNil(o.DateEstablished) {
		toSerialize["date_established"] = o.DateEstablished
	}
	if !IsNil(o.DunsNumber) {
		toSerialize["duns_number"] = o.DunsNumber
	}
	if !IsNil(o.GeneralBusinessDescription) {
		toSerialize["general_business_description"] = o.GeneralBusinessDescription
	}
	if !IsNil(o.History) {
		toSerialize["history"] = o.History
	}
	if !IsNil(o.Identifications) {
		toSerialize["identifications"] = o.Identifications
	}
	if !IsNil(o.InCurrentLocationSince) {
		toSerialize["in_current_location_since"] = o.InCurrentLocationSince
	}
	if !IsNil(o.Incorporation) {
		toSerialize["incorporation"] = o.Incorporation
	}
	if !IsNil(o.InternationalOfficeLocations) {
		toSerialize["international_office_locations"] = o.InternationalOfficeLocations
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ip_address"] = o.IpAddress
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.OfficeLocation) {
		toSerialize["office_location"] = o.OfficeLocation
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.PrimaryContact) {
		toSerialize["primary_contact"] = o.PrimaryContact
	}
	if !IsNil(o.ProprietorIsBeneficialOwner) {
		toSerialize["proprietor_is_beneficial_owner"] = o.ProprietorIsBeneficialOwner
	}
	if !IsNil(o.ProprietorOrOfficer) {
		toSerialize["proprietor_or_officer"] = o.ProprietorOrOfficer
	}
	if !IsNil(o.TaxpayerId) {
		toSerialize["taxpayer_id"] = o.TaxpayerId
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	return toSerialize, nil
}

type NullableBusinessCardholder struct {
	value *BusinessCardholder
	isSet bool
}

func (v NullableBusinessCardholder) Get() *BusinessCardholder {
	return v.value
}

func (v *NullableBusinessCardholder) Set(val *BusinessCardholder) {
	v.value = val
	v.isSet = true
}

func (v NullableBusinessCardholder) IsSet() bool {
	return v.isSet
}

func (v *NullableBusinessCardholder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusinessCardholder(val *BusinessCardholder) *NullableBusinessCardholder {
	return &NullableBusinessCardholder{value: val, isSet: true}
}

func (v NullableBusinessCardholder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusinessCardholder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


