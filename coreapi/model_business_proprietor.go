/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
	"time"
)

// checks if the BusinessProprietor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BusinessProprietor{}

// BusinessProprietor Contains information about the proprietor or officer of the business.  This object is required for KYC verification of proprietors or officers of privately held businesses in the United States. This object is not required for publicly held businesses.
type BusinessProprietor struct {
	// Alternate names of the business proprietor or officer.
	AlternativeNames *string `json:"alternative_names,omitempty"`
	// Business proprietor or officer's date of birth.  This field is required for KYC verification (US-based accounts only).
	Dob *time.Time `json:"dob,omitempty"`
	// Email address of the business proprietor or officer.
	Email *string `json:"email,omitempty"`
	// First name of business proprietor or officer.
	FirstName string `json:"first_name"`
	Home *AddressRequestModel `json:"home,omitempty"`
	// One or more objects containing personal identifications of the business proprietor or officer.
	Identifications []IdentificationRequestModel `json:"identifications,omitempty"`
	// Last name of business proprietor or officer.
	LastName string `json:"last_name"`
	// Middle name of business proprietor or officer.
	MiddleName *string `json:"middle_name,omitempty"`
	// Telephone number of the business proprietor or officer.
	Phone *string `json:"phone,omitempty"`
	// Social Security Number (SSN) of the business proprietor or officer.
	Ssn *string `json:"ssn,omitempty"`
	// Title of business proprietor or officer.
	Title *string `json:"title,omitempty"`
}

// NewBusinessProprietor instantiates a new BusinessProprietor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusinessProprietor(firstName string, lastName string) *BusinessProprietor {
	this := BusinessProprietor{}
	this.FirstName = firstName
	this.LastName = lastName
	return &this
}

// NewBusinessProprietorWithDefaults instantiates a new BusinessProprietor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusinessProprietorWithDefaults() *BusinessProprietor {
	this := BusinessProprietor{}
	return &this
}

// GetAlternativeNames returns the AlternativeNames field value if set, zero value otherwise.
func (o *BusinessProprietor) GetAlternativeNames() string {
	if o == nil || IsNil(o.AlternativeNames) {
		var ret string
		return ret
	}
	return *o.AlternativeNames
}

// GetAlternativeNamesOk returns a tuple with the AlternativeNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessProprietor) GetAlternativeNamesOk() (*string, bool) {
	if o == nil || IsNil(o.AlternativeNames) {
		return nil, false
	}
	return o.AlternativeNames, true
}

// HasAlternativeNames returns a boolean if a field has been set.
func (o *BusinessProprietor) HasAlternativeNames() bool {
	if o != nil && !IsNil(o.AlternativeNames) {
		return true
	}

	return false
}

// SetAlternativeNames gets a reference to the given string and assigns it to the AlternativeNames field.
func (o *BusinessProprietor) SetAlternativeNames(v string) {
	o.AlternativeNames = &v
}

// GetDob returns the Dob field value if set, zero value otherwise.
func (o *BusinessProprietor) GetDob() time.Time {
	if o == nil || IsNil(o.Dob) {
		var ret time.Time
		return ret
	}
	return *o.Dob
}

// GetDobOk returns a tuple with the Dob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessProprietor) GetDobOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Dob) {
		return nil, false
	}
	return o.Dob, true
}

// HasDob returns a boolean if a field has been set.
func (o *BusinessProprietor) HasDob() bool {
	if o != nil && !IsNil(o.Dob) {
		return true
	}

	return false
}

// SetDob gets a reference to the given time.Time and assigns it to the Dob field.
func (o *BusinessProprietor) SetDob(v time.Time) {
	o.Dob = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *BusinessProprietor) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessProprietor) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *BusinessProprietor) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *BusinessProprietor) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value
func (o *BusinessProprietor) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *BusinessProprietor) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *BusinessProprietor) SetFirstName(v string) {
	o.FirstName = v
}

// GetHome returns the Home field value if set, zero value otherwise.
func (o *BusinessProprietor) GetHome() AddressRequestModel {
	if o == nil || IsNil(o.Home) {
		var ret AddressRequestModel
		return ret
	}
	return *o.Home
}

// GetHomeOk returns a tuple with the Home field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessProprietor) GetHomeOk() (*AddressRequestModel, bool) {
	if o == nil || IsNil(o.Home) {
		return nil, false
	}
	return o.Home, true
}

// HasHome returns a boolean if a field has been set.
func (o *BusinessProprietor) HasHome() bool {
	if o != nil && !IsNil(o.Home) {
		return true
	}

	return false
}

// SetHome gets a reference to the given AddressRequestModel and assigns it to the Home field.
func (o *BusinessProprietor) SetHome(v AddressRequestModel) {
	o.Home = &v
}

// GetIdentifications returns the Identifications field value if set, zero value otherwise.
func (o *BusinessProprietor) GetIdentifications() []IdentificationRequestModel {
	if o == nil || IsNil(o.Identifications) {
		var ret []IdentificationRequestModel
		return ret
	}
	return o.Identifications
}

// GetIdentificationsOk returns a tuple with the Identifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessProprietor) GetIdentificationsOk() ([]IdentificationRequestModel, bool) {
	if o == nil || IsNil(o.Identifications) {
		return nil, false
	}
	return o.Identifications, true
}

// HasIdentifications returns a boolean if a field has been set.
func (o *BusinessProprietor) HasIdentifications() bool {
	if o != nil && !IsNil(o.Identifications) {
		return true
	}

	return false
}

// SetIdentifications gets a reference to the given []IdentificationRequestModel and assigns it to the Identifications field.
func (o *BusinessProprietor) SetIdentifications(v []IdentificationRequestModel) {
	o.Identifications = v
}

// GetLastName returns the LastName field value
func (o *BusinessProprietor) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *BusinessProprietor) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *BusinessProprietor) SetLastName(v string) {
	o.LastName = v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *BusinessProprietor) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessProprietor) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *BusinessProprietor) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *BusinessProprietor) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *BusinessProprietor) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessProprietor) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *BusinessProprietor) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *BusinessProprietor) SetPhone(v string) {
	o.Phone = &v
}

// GetSsn returns the Ssn field value if set, zero value otherwise.
func (o *BusinessProprietor) GetSsn() string {
	if o == nil || IsNil(o.Ssn) {
		var ret string
		return ret
	}
	return *o.Ssn
}

// GetSsnOk returns a tuple with the Ssn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessProprietor) GetSsnOk() (*string, bool) {
	if o == nil || IsNil(o.Ssn) {
		return nil, false
	}
	return o.Ssn, true
}

// HasSsn returns a boolean if a field has been set.
func (o *BusinessProprietor) HasSsn() bool {
	if o != nil && !IsNil(o.Ssn) {
		return true
	}

	return false
}

// SetSsn gets a reference to the given string and assigns it to the Ssn field.
func (o *BusinessProprietor) SetSsn(v string) {
	o.Ssn = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *BusinessProprietor) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessProprietor) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *BusinessProprietor) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *BusinessProprietor) SetTitle(v string) {
	o.Title = &v
}

func (o BusinessProprietor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BusinessProprietor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlternativeNames) {
		toSerialize["alternative_names"] = o.AlternativeNames
	}
	if !IsNil(o.Dob) {
		toSerialize["dob"] = o.Dob
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	toSerialize["first_name"] = o.FirstName
	if !IsNil(o.Home) {
		toSerialize["home"] = o.Home
	}
	if !IsNil(o.Identifications) {
		toSerialize["identifications"] = o.Identifications
	}
	toSerialize["last_name"] = o.LastName
	if !IsNil(o.MiddleName) {
		toSerialize["middle_name"] = o.MiddleName
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Ssn) {
		toSerialize["ssn"] = o.Ssn
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableBusinessProprietor struct {
	value *BusinessProprietor
	isSet bool
}

func (v NullableBusinessProprietor) Get() *BusinessProprietor {
	return v.value
}

func (v *NullableBusinessProprietor) Set(val *BusinessProprietor) {
	v.value = val
	v.isSet = true
}

func (v NullableBusinessProprietor) IsSet() bool {
	return v.isSet
}

func (v *NullableBusinessProprietor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusinessProprietor(val *BusinessProprietor) *NullableBusinessProprietor {
	return &NullableBusinessProprietor{value: val, isSet: true}
}

func (v NullableBusinessProprietor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusinessProprietor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


