/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the CardCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardCreateReq{}

// CardCreateReq Information to create a credit card.
type CardCreateReq struct {
	ActivationActions *ActivationActions `json:"activation_actions,omitempty"`
	// Unique identifier of the associated card product.
	CardProductToken string `json:"card_product_token"`
	ExpirationOffset *ExpirationOffset `json:"expiration_offset,omitempty"`
	// Reissues the specified card (known as the \"source\" card) with a new primary account number (PAN).  This field reissues a card with a new PAN from the specified source card. The source card is automatically terminated when the card is reissued with the new PAN. Use this field when reissuing a lost or stolen card.
	NewPanFromCardToken *string `json:"new_pan_from_card_token,omitempty"`
	// Reissues the specified card (known as the \"source\" card).  This field reissues a card by copying the PAN and PIN from the specified source card to the newly created card. The reissued card has the same PAN and PIN as the source card but a new expiration date and CVV2 number.  *NOTE:* By default, the source card is automatically terminated when the reissued card is activated. However, if your program is configured for multiple active cards, you can prevent the source card from being automatically terminated by setting the `activation_actions.terminate_reissued_source_card` field to `false`.
	ReissuePanFromCardToken *string `json:"reissue_pan_from_card_token,omitempty"`
	// Unique identifier of the credit card.
	Token *string `json:"token,omitempty"`
	// Copies the PIN from the specified card to the newly created card.  Both cards must belong to the same user. This field is not allowed if `reissue_pan_from_card_token` is set.  Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
	TranslatePinFromCardToken *string `json:"translate_pin_from_card_token,omitempty"`
	// Unique identifier of the credit cardholder.
	UserToken string `json:"user_token"`
}

// NewCardCreateReq instantiates a new CardCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardCreateReq(cardProductToken string, userToken string) *CardCreateReq {
	this := CardCreateReq{}
	this.CardProductToken = cardProductToken
	this.UserToken = userToken
	return &this
}

// NewCardCreateReqWithDefaults instantiates a new CardCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardCreateReqWithDefaults() *CardCreateReq {
	this := CardCreateReq{}
	return &this
}

// GetActivationActions returns the ActivationActions field value if set, zero value otherwise.
func (o *CardCreateReq) GetActivationActions() ActivationActions {
	if o == nil || IsNil(o.ActivationActions) {
		var ret ActivationActions
		return ret
	}
	return *o.ActivationActions
}

// GetActivationActionsOk returns a tuple with the ActivationActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardCreateReq) GetActivationActionsOk() (*ActivationActions, bool) {
	if o == nil || IsNil(o.ActivationActions) {
		return nil, false
	}
	return o.ActivationActions, true
}

// HasActivationActions returns a boolean if a field has been set.
func (o *CardCreateReq) HasActivationActions() bool {
	if o != nil && !IsNil(o.ActivationActions) {
		return true
	}

	return false
}

// SetActivationActions gets a reference to the given ActivationActions and assigns it to the ActivationActions field.
func (o *CardCreateReq) SetActivationActions(v ActivationActions) {
	o.ActivationActions = &v
}

// GetCardProductToken returns the CardProductToken field value
func (o *CardCreateReq) GetCardProductToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardProductToken
}

// GetCardProductTokenOk returns a tuple with the CardProductToken field value
// and a boolean to check if the value has been set.
func (o *CardCreateReq) GetCardProductTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardProductToken, true
}

// SetCardProductToken sets field value
func (o *CardCreateReq) SetCardProductToken(v string) {
	o.CardProductToken = v
}

// GetExpirationOffset returns the ExpirationOffset field value if set, zero value otherwise.
func (o *CardCreateReq) GetExpirationOffset() ExpirationOffset {
	if o == nil || IsNil(o.ExpirationOffset) {
		var ret ExpirationOffset
		return ret
	}
	return *o.ExpirationOffset
}

// GetExpirationOffsetOk returns a tuple with the ExpirationOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardCreateReq) GetExpirationOffsetOk() (*ExpirationOffset, bool) {
	if o == nil || IsNil(o.ExpirationOffset) {
		return nil, false
	}
	return o.ExpirationOffset, true
}

// HasExpirationOffset returns a boolean if a field has been set.
func (o *CardCreateReq) HasExpirationOffset() bool {
	if o != nil && !IsNil(o.ExpirationOffset) {
		return true
	}

	return false
}

// SetExpirationOffset gets a reference to the given ExpirationOffset and assigns it to the ExpirationOffset field.
func (o *CardCreateReq) SetExpirationOffset(v ExpirationOffset) {
	o.ExpirationOffset = &v
}

// GetNewPanFromCardToken returns the NewPanFromCardToken field value if set, zero value otherwise.
func (o *CardCreateReq) GetNewPanFromCardToken() string {
	if o == nil || IsNil(o.NewPanFromCardToken) {
		var ret string
		return ret
	}
	return *o.NewPanFromCardToken
}

// GetNewPanFromCardTokenOk returns a tuple with the NewPanFromCardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardCreateReq) GetNewPanFromCardTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NewPanFromCardToken) {
		return nil, false
	}
	return o.NewPanFromCardToken, true
}

// HasNewPanFromCardToken returns a boolean if a field has been set.
func (o *CardCreateReq) HasNewPanFromCardToken() bool {
	if o != nil && !IsNil(o.NewPanFromCardToken) {
		return true
	}

	return false
}

// SetNewPanFromCardToken gets a reference to the given string and assigns it to the NewPanFromCardToken field.
func (o *CardCreateReq) SetNewPanFromCardToken(v string) {
	o.NewPanFromCardToken = &v
}

// GetReissuePanFromCardToken returns the ReissuePanFromCardToken field value if set, zero value otherwise.
func (o *CardCreateReq) GetReissuePanFromCardToken() string {
	if o == nil || IsNil(o.ReissuePanFromCardToken) {
		var ret string
		return ret
	}
	return *o.ReissuePanFromCardToken
}

// GetReissuePanFromCardTokenOk returns a tuple with the ReissuePanFromCardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardCreateReq) GetReissuePanFromCardTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ReissuePanFromCardToken) {
		return nil, false
	}
	return o.ReissuePanFromCardToken, true
}

// HasReissuePanFromCardToken returns a boolean if a field has been set.
func (o *CardCreateReq) HasReissuePanFromCardToken() bool {
	if o != nil && !IsNil(o.ReissuePanFromCardToken) {
		return true
	}

	return false
}

// SetReissuePanFromCardToken gets a reference to the given string and assigns it to the ReissuePanFromCardToken field.
func (o *CardCreateReq) SetReissuePanFromCardToken(v string) {
	o.ReissuePanFromCardToken = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CardCreateReq) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardCreateReq) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CardCreateReq) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CardCreateReq) SetToken(v string) {
	o.Token = &v
}

// GetTranslatePinFromCardToken returns the TranslatePinFromCardToken field value if set, zero value otherwise.
func (o *CardCreateReq) GetTranslatePinFromCardToken() string {
	if o == nil || IsNil(o.TranslatePinFromCardToken) {
		var ret string
		return ret
	}
	return *o.TranslatePinFromCardToken
}

// GetTranslatePinFromCardTokenOk returns a tuple with the TranslatePinFromCardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardCreateReq) GetTranslatePinFromCardTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TranslatePinFromCardToken) {
		return nil, false
	}
	return o.TranslatePinFromCardToken, true
}

// HasTranslatePinFromCardToken returns a boolean if a field has been set.
func (o *CardCreateReq) HasTranslatePinFromCardToken() bool {
	if o != nil && !IsNil(o.TranslatePinFromCardToken) {
		return true
	}

	return false
}

// SetTranslatePinFromCardToken gets a reference to the given string and assigns it to the TranslatePinFromCardToken field.
func (o *CardCreateReq) SetTranslatePinFromCardToken(v string) {
	o.TranslatePinFromCardToken = &v
}

// GetUserToken returns the UserToken field value
func (o *CardCreateReq) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *CardCreateReq) GetUserTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *CardCreateReq) SetUserToken(v string) {
	o.UserToken = v
}

func (o CardCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivationActions) {
		toSerialize["activation_actions"] = o.ActivationActions
	}
	toSerialize["card_product_token"] = o.CardProductToken
	if !IsNil(o.ExpirationOffset) {
		toSerialize["expiration_offset"] = o.ExpirationOffset
	}
	if !IsNil(o.NewPanFromCardToken) {
		toSerialize["new_pan_from_card_token"] = o.NewPanFromCardToken
	}
	if !IsNil(o.ReissuePanFromCardToken) {
		toSerialize["reissue_pan_from_card_token"] = o.ReissuePanFromCardToken
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.TranslatePinFromCardToken) {
		toSerialize["translate_pin_from_card_token"] = o.TranslatePinFromCardToken
	}
	toSerialize["user_token"] = o.UserToken
	return toSerialize, nil
}

type NullableCardCreateReq struct {
	value *CardCreateReq
	isSet bool
}

func (v NullableCardCreateReq) Get() *CardCreateReq {
	return v.value
}

func (v *NullableCardCreateReq) Set(val *CardCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableCardCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableCardCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardCreateReq(val *CardCreateReq) *NullableCardCreateReq {
	return &NullableCardCreateReq{value: val, isSet: true}
}

func (v NullableCardCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


