/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the CardHolderAddressModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardHolderAddressModel{}

// CardHolderAddressModel struct for CardHolderAddressModel
type CardHolderAddressModel struct {
	// Specifies whether the address is active.
	Active *bool `json:"active,omitempty"`
	// Street name and number of the address.
	Address1 string `json:"address_1"`
	// Additional address information.
	Address2 *string `json:"address_2,omitempty"`
	// Unique identifier of the business account holder. This token is required if a `user_token` is not specified.
	BusinessToken *string `json:"business_token,omitempty"`
	// City of the address.
	City string `json:"city"`
	// Country of the address.
	Country string `json:"country"`
	// First name or given name of the account holder.
	FirstName string `json:"first_name"`
	// A value of `true` specifies that this address is the default address used by the account holder's funding source. If this is the account holder's only address, it is used as the default regardless of this field's setting.
	IsDefaultAddress *bool `json:"is_default_address,omitempty"`
	// Last name or family name of the account holder.
	LastName string `json:"last_name"`
	// Telephone number of the account holder.
	Phone *string `json:"phone,omitempty"`
	// Postal code of the address.
	PostalCode *string `json:"postal_code,omitempty"`
	// Two-character state, province, or territorial abbreviation.  For a complete list of valid state and province abbreviations, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.
	State string `json:"state"`
	// Unique identifier of the address. If you do not include a token, the system will generate one automatically. This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember. This value cannot be updated.
	Token *string `json:"token,omitempty"`
	// Unique identifier of the user account holder. This token is required if a `business_token` is not specified.
	UserToken *string `json:"user_token,omitempty"`
	// United States ZIP code. This field is required if `postal_code` is not specified.
	Zip *string `json:"zip,omitempty"`
}

// NewCardHolderAddressModel instantiates a new CardHolderAddressModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardHolderAddressModel(address1 string, city string, country string, firstName string, lastName string, state string) *CardHolderAddressModel {
	this := CardHolderAddressModel{}
	var active bool = true
	this.Active = &active
	this.Address1 = address1
	this.City = city
	this.Country = country
	this.FirstName = firstName
	var isDefaultAddress bool = false
	this.IsDefaultAddress = &isDefaultAddress
	this.LastName = lastName
	this.State = state
	return &this
}

// NewCardHolderAddressModelWithDefaults instantiates a new CardHolderAddressModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardHolderAddressModelWithDefaults() *CardHolderAddressModel {
	this := CardHolderAddressModel{}
	var active bool = true
	this.Active = &active
	var isDefaultAddress bool = false
	this.IsDefaultAddress = &isDefaultAddress
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CardHolderAddressModel) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CardHolderAddressModel) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CardHolderAddressModel) SetActive(v bool) {
	o.Active = &v
}

// GetAddress1 returns the Address1 field value
func (o *CardHolderAddressModel) GetAddress1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address1
}

// GetAddress1Ok returns a tuple with the Address1 field value
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetAddress1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address1, true
}

// SetAddress1 sets field value
func (o *CardHolderAddressModel) SetAddress1(v string) {
	o.Address1 = v
}

// GetAddress2 returns the Address2 field value if set, zero value otherwise.
func (o *CardHolderAddressModel) GetAddress2() string {
	if o == nil || IsNil(o.Address2) {
		var ret string
		return ret
	}
	return *o.Address2
}

// GetAddress2Ok returns a tuple with the Address2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetAddress2Ok() (*string, bool) {
	if o == nil || IsNil(o.Address2) {
		return nil, false
	}
	return o.Address2, true
}

// HasAddress2 returns a boolean if a field has been set.
func (o *CardHolderAddressModel) HasAddress2() bool {
	if o != nil && !IsNil(o.Address2) {
		return true
	}

	return false
}

// SetAddress2 gets a reference to the given string and assigns it to the Address2 field.
func (o *CardHolderAddressModel) SetAddress2(v string) {
	o.Address2 = &v
}

// GetBusinessToken returns the BusinessToken field value if set, zero value otherwise.
func (o *CardHolderAddressModel) GetBusinessToken() string {
	if o == nil || IsNil(o.BusinessToken) {
		var ret string
		return ret
	}
	return *o.BusinessToken
}

// GetBusinessTokenOk returns a tuple with the BusinessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetBusinessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessToken) {
		return nil, false
	}
	return o.BusinessToken, true
}

// HasBusinessToken returns a boolean if a field has been set.
func (o *CardHolderAddressModel) HasBusinessToken() bool {
	if o != nil && !IsNil(o.BusinessToken) {
		return true
	}

	return false
}

// SetBusinessToken gets a reference to the given string and assigns it to the BusinessToken field.
func (o *CardHolderAddressModel) SetBusinessToken(v string) {
	o.BusinessToken = &v
}

// GetCity returns the City field value
func (o *CardHolderAddressModel) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *CardHolderAddressModel) SetCity(v string) {
	o.City = v
}

// GetCountry returns the Country field value
func (o *CardHolderAddressModel) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *CardHolderAddressModel) SetCountry(v string) {
	o.Country = v
}

// GetFirstName returns the FirstName field value
func (o *CardHolderAddressModel) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *CardHolderAddressModel) SetFirstName(v string) {
	o.FirstName = v
}

// GetIsDefaultAddress returns the IsDefaultAddress field value if set, zero value otherwise.
func (o *CardHolderAddressModel) GetIsDefaultAddress() bool {
	if o == nil || IsNil(o.IsDefaultAddress) {
		var ret bool
		return ret
	}
	return *o.IsDefaultAddress
}

// GetIsDefaultAddressOk returns a tuple with the IsDefaultAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetIsDefaultAddressOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefaultAddress) {
		return nil, false
	}
	return o.IsDefaultAddress, true
}

// HasIsDefaultAddress returns a boolean if a field has been set.
func (o *CardHolderAddressModel) HasIsDefaultAddress() bool {
	if o != nil && !IsNil(o.IsDefaultAddress) {
		return true
	}

	return false
}

// SetIsDefaultAddress gets a reference to the given bool and assigns it to the IsDefaultAddress field.
func (o *CardHolderAddressModel) SetIsDefaultAddress(v bool) {
	o.IsDefaultAddress = &v
}

// GetLastName returns the LastName field value
func (o *CardHolderAddressModel) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *CardHolderAddressModel) SetLastName(v string) {
	o.LastName = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CardHolderAddressModel) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CardHolderAddressModel) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CardHolderAddressModel) SetPhone(v string) {
	o.Phone = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *CardHolderAddressModel) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *CardHolderAddressModel) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *CardHolderAddressModel) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetState returns the State field value
func (o *CardHolderAddressModel) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *CardHolderAddressModel) SetState(v string) {
	o.State = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CardHolderAddressModel) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CardHolderAddressModel) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CardHolderAddressModel) SetToken(v string) {
	o.Token = &v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *CardHolderAddressModel) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *CardHolderAddressModel) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *CardHolderAddressModel) SetUserToken(v string) {
	o.UserToken = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *CardHolderAddressModel) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressModel) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *CardHolderAddressModel) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *CardHolderAddressModel) SetZip(v string) {
	o.Zip = &v
}

func (o CardHolderAddressModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardHolderAddressModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	toSerialize["address_1"] = o.Address1
	if !IsNil(o.Address2) {
		toSerialize["address_2"] = o.Address2
	}
	if !IsNil(o.BusinessToken) {
		toSerialize["business_token"] = o.BusinessToken
	}
	toSerialize["city"] = o.City
	toSerialize["country"] = o.Country
	toSerialize["first_name"] = o.FirstName
	if !IsNil(o.IsDefaultAddress) {
		toSerialize["is_default_address"] = o.IsDefaultAddress
	}
	toSerialize["last_name"] = o.LastName
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postal_code"] = o.PostalCode
	}
	toSerialize["state"] = o.State
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	return toSerialize, nil
}

type NullableCardHolderAddressModel struct {
	value *CardHolderAddressModel
	isSet bool
}

func (v NullableCardHolderAddressModel) Get() *CardHolderAddressModel {
	return v.value
}

func (v *NullableCardHolderAddressModel) Set(val *CardHolderAddressModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCardHolderAddressModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCardHolderAddressModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardHolderAddressModel(val *CardHolderAddressModel) *NullableCardHolderAddressModel {
	return &NullableCardHolderAddressModel{value: val, isSet: true}
}

func (v NullableCardHolderAddressModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardHolderAddressModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


