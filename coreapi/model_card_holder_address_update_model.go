/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the CardHolderAddressUpdateModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardHolderAddressUpdateModel{}

// CardHolderAddressUpdateModel struct for CardHolderAddressUpdateModel
type CardHolderAddressUpdateModel struct {
	// Specifies whether the address is active.
	Active *bool `json:"active,omitempty"`
	// Street name and number of the address.
	Address1 *string `json:"address_1,omitempty"`
	// Additional address information.
	Address2 *string `json:"address_2,omitempty"`
	// City of the address.
	City *string `json:"city,omitempty"`
	// Country of the address.
	Country *string `json:"country,omitempty"`
	// First name or given name of the account holder.
	FirstName *string `json:"first_name,omitempty"`
	// A value of `true` specifies that this address is the default address used by the account holder's funding source. If this is the account holder's only address, it is used as the default regardless of this field's setting.
	IsDefaultAddress *bool `json:"is_default_address,omitempty"`
	// Last name or family name of the account holder.
	LastName *string `json:"last_name,omitempty"`
	// Telephone number of the account holder.
	Phone *string `json:"phone,omitempty"`
	// Postal code of the address.
	PostalCode *string `json:"postal_code,omitempty"`
	// Two-character state, province, or territorial abbreviation.  For a complete list, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.
	State *string `json:"state,omitempty"`
	// United States ZIP code of the address.
	Zip *string `json:"zip,omitempty"`
}

// NewCardHolderAddressUpdateModel instantiates a new CardHolderAddressUpdateModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardHolderAddressUpdateModel() *CardHolderAddressUpdateModel {
	this := CardHolderAddressUpdateModel{}
	var active bool = true
	this.Active = &active
	var isDefaultAddress bool = false
	this.IsDefaultAddress = &isDefaultAddress
	return &this
}

// NewCardHolderAddressUpdateModelWithDefaults instantiates a new CardHolderAddressUpdateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardHolderAddressUpdateModelWithDefaults() *CardHolderAddressUpdateModel {
	this := CardHolderAddressUpdateModel{}
	var active bool = true
	this.Active = &active
	var isDefaultAddress bool = false
	this.IsDefaultAddress = &isDefaultAddress
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CardHolderAddressUpdateModel) SetActive(v bool) {
	o.Active = &v
}

// GetAddress1 returns the Address1 field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetAddress1() string {
	if o == nil || IsNil(o.Address1) {
		var ret string
		return ret
	}
	return *o.Address1
}

// GetAddress1Ok returns a tuple with the Address1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetAddress1Ok() (*string, bool) {
	if o == nil || IsNil(o.Address1) {
		return nil, false
	}
	return o.Address1, true
}

// HasAddress1 returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasAddress1() bool {
	if o != nil && !IsNil(o.Address1) {
		return true
	}

	return false
}

// SetAddress1 gets a reference to the given string and assigns it to the Address1 field.
func (o *CardHolderAddressUpdateModel) SetAddress1(v string) {
	o.Address1 = &v
}

// GetAddress2 returns the Address2 field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetAddress2() string {
	if o == nil || IsNil(o.Address2) {
		var ret string
		return ret
	}
	return *o.Address2
}

// GetAddress2Ok returns a tuple with the Address2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetAddress2Ok() (*string, bool) {
	if o == nil || IsNil(o.Address2) {
		return nil, false
	}
	return o.Address2, true
}

// HasAddress2 returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasAddress2() bool {
	if o != nil && !IsNil(o.Address2) {
		return true
	}

	return false
}

// SetAddress2 gets a reference to the given string and assigns it to the Address2 field.
func (o *CardHolderAddressUpdateModel) SetAddress2(v string) {
	o.Address2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CardHolderAddressUpdateModel) SetCity(v string) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CardHolderAddressUpdateModel) SetCountry(v string) {
	o.Country = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *CardHolderAddressUpdateModel) SetFirstName(v string) {
	o.FirstName = &v
}

// GetIsDefaultAddress returns the IsDefaultAddress field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetIsDefaultAddress() bool {
	if o == nil || IsNil(o.IsDefaultAddress) {
		var ret bool
		return ret
	}
	return *o.IsDefaultAddress
}

// GetIsDefaultAddressOk returns a tuple with the IsDefaultAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetIsDefaultAddressOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefaultAddress) {
		return nil, false
	}
	return o.IsDefaultAddress, true
}

// HasIsDefaultAddress returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasIsDefaultAddress() bool {
	if o != nil && !IsNil(o.IsDefaultAddress) {
		return true
	}

	return false
}

// SetIsDefaultAddress gets a reference to the given bool and assigns it to the IsDefaultAddress field.
func (o *CardHolderAddressUpdateModel) SetIsDefaultAddress(v bool) {
	o.IsDefaultAddress = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *CardHolderAddressUpdateModel) SetLastName(v string) {
	o.LastName = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CardHolderAddressUpdateModel) SetPhone(v string) {
	o.Phone = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *CardHolderAddressUpdateModel) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CardHolderAddressUpdateModel) SetState(v string) {
	o.State = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *CardHolderAddressUpdateModel) GetZip() string {
	if o == nil || IsNil(o.Zip) {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardHolderAddressUpdateModel) GetZipOk() (*string, bool) {
	if o == nil || IsNil(o.Zip) {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *CardHolderAddressUpdateModel) HasZip() bool {
	if o != nil && !IsNil(o.Zip) {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *CardHolderAddressUpdateModel) SetZip(v string) {
	o.Zip = &v
}

func (o CardHolderAddressUpdateModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardHolderAddressUpdateModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Address1) {
		toSerialize["address_1"] = o.Address1
	}
	if !IsNil(o.Address2) {
		toSerialize["address_2"] = o.Address2
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.IsDefaultAddress) {
		toSerialize["is_default_address"] = o.IsDefaultAddress
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postal_code"] = o.PostalCode
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Zip) {
		toSerialize["zip"] = o.Zip
	}
	return toSerialize, nil
}

type NullableCardHolderAddressUpdateModel struct {
	value *CardHolderAddressUpdateModel
	isSet bool
}

func (v NullableCardHolderAddressUpdateModel) Get() *CardHolderAddressUpdateModel {
	return v.value
}

func (v *NullableCardHolderAddressUpdateModel) Set(val *CardHolderAddressUpdateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCardHolderAddressUpdateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCardHolderAddressUpdateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardHolderAddressUpdateModel(val *CardHolderAddressUpdateModel) *NullableCardHolderAddressUpdateModel {
	return &NullableCardHolderAddressUpdateModel{value: val, isSet: true}
}

func (v NullableCardHolderAddressUpdateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardHolderAddressUpdateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


