/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the CardProductUpdateModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardProductUpdateModel{}

// CardProductUpdateModel struct for CardProductUpdateModel
type CardProductUpdateModel struct {
	// Indicates whether the card product is active.  *NOTE:* This field has no effect on the ability to create cards from this card product. Use the `config.fulfillment.allow_card_creation` field to allow/disallow card creation.
	Active *bool `json:"active,omitempty"`
	Config *CardProductConfig `json:"config,omitempty"`
	// End date of the range over which the card product can be active.
	EndDate *string `json:"end_date,omitempty"`
	// Name of the card product. Marqeta recommends that you use a unique string.
	Name *string `json:"name,omitempty"`
	// Date the card product becomes active. If the start date has passed and the card is set to `active = false`, then the card will not be activated.
	StartDate *string `json:"start_date,omitempty"`
}

// NewCardProductUpdateModel instantiates a new CardProductUpdateModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardProductUpdateModel() *CardProductUpdateModel {
	this := CardProductUpdateModel{}
	var active bool = false
	this.Active = &active
	return &this
}

// NewCardProductUpdateModelWithDefaults instantiates a new CardProductUpdateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardProductUpdateModelWithDefaults() *CardProductUpdateModel {
	this := CardProductUpdateModel{}
	var active bool = false
	this.Active = &active
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CardProductUpdateModel) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductUpdateModel) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CardProductUpdateModel) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CardProductUpdateModel) SetActive(v bool) {
	o.Active = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *CardProductUpdateModel) GetConfig() CardProductConfig {
	if o == nil || IsNil(o.Config) {
		var ret CardProductConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductUpdateModel) GetConfigOk() (*CardProductConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *CardProductUpdateModel) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given CardProductConfig and assigns it to the Config field.
func (o *CardProductUpdateModel) SetConfig(v CardProductConfig) {
	o.Config = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *CardProductUpdateModel) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductUpdateModel) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *CardProductUpdateModel) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *CardProductUpdateModel) SetEndDate(v string) {
	o.EndDate = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CardProductUpdateModel) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductUpdateModel) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CardProductUpdateModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CardProductUpdateModel) SetName(v string) {
	o.Name = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CardProductUpdateModel) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductUpdateModel) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CardProductUpdateModel) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *CardProductUpdateModel) SetStartDate(v string) {
	o.StartDate = &v
}

func (o CardProductUpdateModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardProductUpdateModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	return toSerialize, nil
}

type NullableCardProductUpdateModel struct {
	value *CardProductUpdateModel
	isSet bool
}

func (v NullableCardProductUpdateModel) Get() *CardProductUpdateModel {
	return v.value
}

func (v *NullableCardProductUpdateModel) Set(val *CardProductUpdateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCardProductUpdateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCardProductUpdateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardProductUpdateModel(val *CardProductUpdateModel) *NullableCardProductUpdateModel {
	return &NullableCardProductUpdateModel{value: val, isSet: true}
}

func (v NullableCardProductUpdateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardProductUpdateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


