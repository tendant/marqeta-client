/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the CardRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardRequest{}

// CardRequest struct for CardRequest
type CardRequest struct {
	ActivationActions *ActivationActions `json:"activation_actions,omitempty"`
	// Associates the card with the specified bulk card order. This field cannot be updated.
	BulkIssuanceToken *string `json:"bulk_issuance_token,omitempty"`
	// Unique identifier of the card product.
	CardProductToken string `json:"card_product_token"`
	// Set to `true` to request expedited processing of the card by your card fulfillment provider.  This expedited service is available for cards fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window=\"_blank\"], link:http://www.idemia.com[IDEMIA, window=\"_blank\"], and link:https://www.arroweye.com/[Arroweye Solutions, window=\"_blank\"].  *NOTE:* Contact your Marqeta representative for information regarding the cost of expedited service.
	Expedite *bool `json:"expedite,omitempty"`
	ExpirationOffset *ExpirationOffset `json:"expiration_offset,omitempty"`
	Fulfillment *CardFulfillmentRequest `json:"fulfillment,omitempty"`
	// Associates customer-provided metadata with the card.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// Reissues the specified card (known as the \"source\" card) with a new primary account number (PAN).  This field reissues a card with a new PAN from the specified source card. The source card is automatically terminated when the card is reissued with the new PAN. Use this field when reissuing a lost or stolen card.  Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
	NewPanFromCardToken *string `json:"new_pan_from_card_token,omitempty"`
	// Reissues the specified card (known as the \"source\" card).  This field reissues a card by copying the primary account number (PAN) and personal identification number (PIN) from the specified source card to the newly created card. The reissued card has the same PAN and PIN as the source card but a new expiration date and CVV2 number.  Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.  *NOTE:* By default, the source card is automatically terminated when the reissued card is activated. However, if your program is configured for multiple active cards, you can prevent the source card from being automatically terminated by setting the `activation_actions.terminate_reissued_source_card` field to `false`.
	ReissuePanFromCardToken *string `json:"reissue_pan_from_card_token,omitempty"`
	// Unique identifier of the card.  If you do not include a token, the system will generate one automatically. Other API calls will require this token, so we recommend creating a token that is easy to remember rather than letting the system generate one. This value cannot be updated.
	Token *string `json:"token,omitempty"`
	// Copies the PIN from the specified card to the newly created card.  Both cards must belong to the same user. Populating this field will raise an error if `reissue_pan_from_card_token` is also set.  Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
	TranslatePinFromCardToken *string `json:"translate_pin_from_card_token,omitempty"`
	// Unique identifier of the authorized user of the card.
	UserToken string `json:"user_token"`
}

// NewCardRequest instantiates a new CardRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardRequest(cardProductToken string, userToken string) *CardRequest {
	this := CardRequest{}
	this.CardProductToken = cardProductToken
	var expedite bool = false
	this.Expedite = &expedite
	this.UserToken = userToken
	return &this
}

// NewCardRequestWithDefaults instantiates a new CardRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardRequestWithDefaults() *CardRequest {
	this := CardRequest{}
	var expedite bool = false
	this.Expedite = &expedite
	return &this
}

// GetActivationActions returns the ActivationActions field value if set, zero value otherwise.
func (o *CardRequest) GetActivationActions() ActivationActions {
	if o == nil || IsNil(o.ActivationActions) {
		var ret ActivationActions
		return ret
	}
	return *o.ActivationActions
}

// GetActivationActionsOk returns a tuple with the ActivationActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequest) GetActivationActionsOk() (*ActivationActions, bool) {
	if o == nil || IsNil(o.ActivationActions) {
		return nil, false
	}
	return o.ActivationActions, true
}

// HasActivationActions returns a boolean if a field has been set.
func (o *CardRequest) HasActivationActions() bool {
	if o != nil && !IsNil(o.ActivationActions) {
		return true
	}

	return false
}

// SetActivationActions gets a reference to the given ActivationActions and assigns it to the ActivationActions field.
func (o *CardRequest) SetActivationActions(v ActivationActions) {
	o.ActivationActions = &v
}

// GetBulkIssuanceToken returns the BulkIssuanceToken field value if set, zero value otherwise.
func (o *CardRequest) GetBulkIssuanceToken() string {
	if o == nil || IsNil(o.BulkIssuanceToken) {
		var ret string
		return ret
	}
	return *o.BulkIssuanceToken
}

// GetBulkIssuanceTokenOk returns a tuple with the BulkIssuanceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequest) GetBulkIssuanceTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BulkIssuanceToken) {
		return nil, false
	}
	return o.BulkIssuanceToken, true
}

// HasBulkIssuanceToken returns a boolean if a field has been set.
func (o *CardRequest) HasBulkIssuanceToken() bool {
	if o != nil && !IsNil(o.BulkIssuanceToken) {
		return true
	}

	return false
}

// SetBulkIssuanceToken gets a reference to the given string and assigns it to the BulkIssuanceToken field.
func (o *CardRequest) SetBulkIssuanceToken(v string) {
	o.BulkIssuanceToken = &v
}

// GetCardProductToken returns the CardProductToken field value
func (o *CardRequest) GetCardProductToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardProductToken
}

// GetCardProductTokenOk returns a tuple with the CardProductToken field value
// and a boolean to check if the value has been set.
func (o *CardRequest) GetCardProductTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardProductToken, true
}

// SetCardProductToken sets field value
func (o *CardRequest) SetCardProductToken(v string) {
	o.CardProductToken = v
}

// GetExpedite returns the Expedite field value if set, zero value otherwise.
func (o *CardRequest) GetExpedite() bool {
	if o == nil || IsNil(o.Expedite) {
		var ret bool
		return ret
	}
	return *o.Expedite
}

// GetExpediteOk returns a tuple with the Expedite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequest) GetExpediteOk() (*bool, bool) {
	if o == nil || IsNil(o.Expedite) {
		return nil, false
	}
	return o.Expedite, true
}

// HasExpedite returns a boolean if a field has been set.
func (o *CardRequest) HasExpedite() bool {
	if o != nil && !IsNil(o.Expedite) {
		return true
	}

	return false
}

// SetExpedite gets a reference to the given bool and assigns it to the Expedite field.
func (o *CardRequest) SetExpedite(v bool) {
	o.Expedite = &v
}

// GetExpirationOffset returns the ExpirationOffset field value if set, zero value otherwise.
func (o *CardRequest) GetExpirationOffset() ExpirationOffset {
	if o == nil || IsNil(o.ExpirationOffset) {
		var ret ExpirationOffset
		return ret
	}
	return *o.ExpirationOffset
}

// GetExpirationOffsetOk returns a tuple with the ExpirationOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequest) GetExpirationOffsetOk() (*ExpirationOffset, bool) {
	if o == nil || IsNil(o.ExpirationOffset) {
		return nil, false
	}
	return o.ExpirationOffset, true
}

// HasExpirationOffset returns a boolean if a field has been set.
func (o *CardRequest) HasExpirationOffset() bool {
	if o != nil && !IsNil(o.ExpirationOffset) {
		return true
	}

	return false
}

// SetExpirationOffset gets a reference to the given ExpirationOffset and assigns it to the ExpirationOffset field.
func (o *CardRequest) SetExpirationOffset(v ExpirationOffset) {
	o.ExpirationOffset = &v
}

// GetFulfillment returns the Fulfillment field value if set, zero value otherwise.
func (o *CardRequest) GetFulfillment() CardFulfillmentRequest {
	if o == nil || IsNil(o.Fulfillment) {
		var ret CardFulfillmentRequest
		return ret
	}
	return *o.Fulfillment
}

// GetFulfillmentOk returns a tuple with the Fulfillment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequest) GetFulfillmentOk() (*CardFulfillmentRequest, bool) {
	if o == nil || IsNil(o.Fulfillment) {
		return nil, false
	}
	return o.Fulfillment, true
}

// HasFulfillment returns a boolean if a field has been set.
func (o *CardRequest) HasFulfillment() bool {
	if o != nil && !IsNil(o.Fulfillment) {
		return true
	}

	return false
}

// SetFulfillment gets a reference to the given CardFulfillmentRequest and assigns it to the Fulfillment field.
func (o *CardRequest) SetFulfillment(v CardFulfillmentRequest) {
	o.Fulfillment = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CardRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CardRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CardRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetNewPanFromCardToken returns the NewPanFromCardToken field value if set, zero value otherwise.
func (o *CardRequest) GetNewPanFromCardToken() string {
	if o == nil || IsNil(o.NewPanFromCardToken) {
		var ret string
		return ret
	}
	return *o.NewPanFromCardToken
}

// GetNewPanFromCardTokenOk returns a tuple with the NewPanFromCardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequest) GetNewPanFromCardTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NewPanFromCardToken) {
		return nil, false
	}
	return o.NewPanFromCardToken, true
}

// HasNewPanFromCardToken returns a boolean if a field has been set.
func (o *CardRequest) HasNewPanFromCardToken() bool {
	if o != nil && !IsNil(o.NewPanFromCardToken) {
		return true
	}

	return false
}

// SetNewPanFromCardToken gets a reference to the given string and assigns it to the NewPanFromCardToken field.
func (o *CardRequest) SetNewPanFromCardToken(v string) {
	o.NewPanFromCardToken = &v
}

// GetReissuePanFromCardToken returns the ReissuePanFromCardToken field value if set, zero value otherwise.
func (o *CardRequest) GetReissuePanFromCardToken() string {
	if o == nil || IsNil(o.ReissuePanFromCardToken) {
		var ret string
		return ret
	}
	return *o.ReissuePanFromCardToken
}

// GetReissuePanFromCardTokenOk returns a tuple with the ReissuePanFromCardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequest) GetReissuePanFromCardTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ReissuePanFromCardToken) {
		return nil, false
	}
	return o.ReissuePanFromCardToken, true
}

// HasReissuePanFromCardToken returns a boolean if a field has been set.
func (o *CardRequest) HasReissuePanFromCardToken() bool {
	if o != nil && !IsNil(o.ReissuePanFromCardToken) {
		return true
	}

	return false
}

// SetReissuePanFromCardToken gets a reference to the given string and assigns it to the ReissuePanFromCardToken field.
func (o *CardRequest) SetReissuePanFromCardToken(v string) {
	o.ReissuePanFromCardToken = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CardRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CardRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CardRequest) SetToken(v string) {
	o.Token = &v
}

// GetTranslatePinFromCardToken returns the TranslatePinFromCardToken field value if set, zero value otherwise.
func (o *CardRequest) GetTranslatePinFromCardToken() string {
	if o == nil || IsNil(o.TranslatePinFromCardToken) {
		var ret string
		return ret
	}
	return *o.TranslatePinFromCardToken
}

// GetTranslatePinFromCardTokenOk returns a tuple with the TranslatePinFromCardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequest) GetTranslatePinFromCardTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TranslatePinFromCardToken) {
		return nil, false
	}
	return o.TranslatePinFromCardToken, true
}

// HasTranslatePinFromCardToken returns a boolean if a field has been set.
func (o *CardRequest) HasTranslatePinFromCardToken() bool {
	if o != nil && !IsNil(o.TranslatePinFromCardToken) {
		return true
	}

	return false
}

// SetTranslatePinFromCardToken gets a reference to the given string and assigns it to the TranslatePinFromCardToken field.
func (o *CardRequest) SetTranslatePinFromCardToken(v string) {
	o.TranslatePinFromCardToken = &v
}

// GetUserToken returns the UserToken field value
func (o *CardRequest) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *CardRequest) GetUserTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *CardRequest) SetUserToken(v string) {
	o.UserToken = v
}

func (o CardRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivationActions) {
		toSerialize["activation_actions"] = o.ActivationActions
	}
	if !IsNil(o.BulkIssuanceToken) {
		toSerialize["bulk_issuance_token"] = o.BulkIssuanceToken
	}
	toSerialize["card_product_token"] = o.CardProductToken
	if !IsNil(o.Expedite) {
		toSerialize["expedite"] = o.Expedite
	}
	if !IsNil(o.ExpirationOffset) {
		toSerialize["expiration_offset"] = o.ExpirationOffset
	}
	if !IsNil(o.Fulfillment) {
		toSerialize["fulfillment"] = o.Fulfillment
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.NewPanFromCardToken) {
		toSerialize["new_pan_from_card_token"] = o.NewPanFromCardToken
	}
	if !IsNil(o.ReissuePanFromCardToken) {
		toSerialize["reissue_pan_from_card_token"] = o.ReissuePanFromCardToken
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.TranslatePinFromCardToken) {
		toSerialize["translate_pin_from_card_token"] = o.TranslatePinFromCardToken
	}
	toSerialize["user_token"] = o.UserToken
	return toSerialize, nil
}

type NullableCardRequest struct {
	value *CardRequest
	isSet bool
}

func (v NullableCardRequest) Get() *CardRequest {
	return v.value
}

func (v *NullableCardRequest) Set(val *CardRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCardRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCardRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardRequest(val *CardRequest) *NullableCardRequest {
	return &NullableCardRequest{value: val, isSet: true}
}

func (v NullableCardRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


