/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
	"time"
)

// checks if the CardTransitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardTransitionResponse{}

// CardTransitionResponse struct for CardTransitionResponse
type CardTransitionResponse struct {
	// The barcode printed on the card, expressed as digits.
	Barcode string `json:"barcode"`
	// The unique identifier of the bulk card order.
	BulkIssuanceToken *string `json:"bulk_issuance_token,omitempty"`
	Card *CardMetadata `json:"card,omitempty"`
	// Unique identifier of the card product.
	CardProductToken string `json:"card_product_token"`
	// Unique identifier of the card.
	CardToken string `json:"card_token"`
	// The mechanism by which the transition was initiated.  * *ADMIN* - Indicates that the card transition was initiated through the Marqeta Dashboard. * *API* - Indicates that the card transition was initiated by you through the Core API. Use this value when creating a card transition with an API `POST` request. * *FRAUD* - Indicates that either Marqeta or the card network has determined that the card is fraudulent. * *IVR* - Indicates that the card transition was initiated through your Interactive Voice Response system. * *SYSTEM* - Indicates that the card transition was initiated by Marqeta. For example, Marqeta suspended the card due to excessive failed personal identification number (PIN) entries.
	Channel string `json:"channel"`
	// Date and time when the resource was created, in UTC.
	CreatedTime *time.Time `json:"created_time,omitempty"`
	// A value of `true` indicates that you requested expedited processing of the card from your card fulfillment provider.
	Expedite *bool `json:"expedite,omitempty"`
	// Expiration date in `MMyy` format.
	Expiration string `json:"expiration"`
	// Expiration date and time in UTC format.
	ExpirationTime string `json:"expiration_time"`
	Fulfillment *CardFulfillmentRequest `json:"fulfillment,omitempty"`
	// Provides status information about the card related to order and delivery.  The possible fulfillment states are:  * *ISSUED:* Initial state of all newly created/issued cards * *ORDERED:* Card ordered through card fulfillment provider * *REJECTED:* Card rejected by card fulfillment provider * *SHIPPED:* Card shipped by card fulfillment provider * *DELIVERED:* Card delivered by the card fulfillment provider. * *DIGITALLY_PRESENTED:* Card digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards
	FulfillmentStatus string `json:"fulfillment_status"`
	// Last four digits of the card primary account number (PAN).
	LastFour string `json:"last_four"`
	// Reissues the specified (\"source\") card with a new primary account number (PAN).
	NewPanFromCardToken *string `json:"new_pan_from_card_token,omitempty"`
	// Primary account number (PAN) of the card.
	Pan string `json:"pan"`
	// Specifies if the personal identification number (PIN) has been set for the card.
	PinIsSet bool `json:"pin_is_set"`
	// Additional information about the state change.
	Reason *string `json:"reason,omitempty"`
	// A standard code describing the reason for the transition:  * *00:* Object activated for the first time * *01:* Requested by you * *02:* Inactivity over time * *03:* This address cannot accept mail or the addressee is unknown * *04:* Negative account balance * *05:* Account under review * *06:* Suspicious activity was identified * *07:* Activity outside the program parameters was identified * *08:* Confirmed fraud was identified * *09:* Matched with an Office of Foreign Assets Control list * *10:* Card was reported lost * *11:* Card information was cloned * *12:* Account or card information was compromised * *13:* Temporary status change while on hold/leave * *14:* Initiated by Marqeta * *15:* Initiated by issuer * *16:* Card expired * *17:* Failed KYC * *18:* Changed to `ACTIVE` because information was properly validated * *19:* Changed to `ACTIVE` because account activity was properly validated * *20:* Change occurred prior to the normalization of reason codes * *21:* Initiated by a third party, often a digital wallet provider * *22:* PIN retry limit reached * *23:* Card was reported stolen * *24:* Address issue * *25:* Name issue * *26:* SSN issue * *27:* DOB issue * *28:* Email issue * *29:* Phone issue * *30:* Account/fulfillment mismatch * *31:* Other reason
	ReasonCode *string `json:"reason_code,omitempty"`
	// Reissues the specified (\"source\") card.
	ReissuePanFromCardToken *string `json:"reissue_pan_from_card_token,omitempty"`
	// Indicates the state of the card.
	State string `json:"state"`
	// Unique identifier of the card transition.
	Token string `json:"token"`
	// This field cannot be set directly using the `/cardtransitions` endpoint. A card transition's `type` is managed by the Marqeta platform, based on the before and after state of the transition, as specified in the request's `state` field.  This field appears only when populated by the card fulfillment provider. The `type` field's possible values are:  * *fulfillment.delivered:* Card was delivered by the card fulfillment provider * *fulfillment.digitally_presented:* Card was digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards * *fulfillment.issued:* Card was created/issued * *fulfillment.ordered:* Card was ordered from the card fulfillment provider * *fulfillment.rejected:* Card was rejected by the card fulfillment provider * *fulfillment.shipped:* Card was shipped by the card fulfillment provider * *state.activated:* Card was activated * *state.limited:* Card was limited * *state.reinstated:* Card was reinstated from a suspended state * *state.suspended:* Card was suspended * *state.terminated:* Card was terminated  //Also appears in /core-api/event-types#_card_transition_events
	Type string `json:"type"`
	User *CardholderMetadata `json:"user,omitempty"`
	// Unique identifier of the cardholder.
	UserToken string `json:"user_token"`
	Validations *ValidationsResponse `json:"validations,omitempty"`
}

// NewCardTransitionResponse instantiates a new CardTransitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardTransitionResponse(barcode string, cardProductToken string, cardToken string, channel string, expiration string, expirationTime string, fulfillmentStatus string, lastFour string, pan string, pinIsSet bool, state string, token string, type_ string, userToken string) *CardTransitionResponse {
	this := CardTransitionResponse{}
	this.Barcode = barcode
	this.CardProductToken = cardProductToken
	this.CardToken = cardToken
	this.Channel = channel
	var expedite bool = false
	this.Expedite = &expedite
	this.Expiration = expiration
	this.ExpirationTime = expirationTime
	this.FulfillmentStatus = fulfillmentStatus
	this.LastFour = lastFour
	this.Pan = pan
	this.PinIsSet = pinIsSet
	this.State = state
	this.Token = token
	this.Type = type_
	this.UserToken = userToken
	return &this
}

// NewCardTransitionResponseWithDefaults instantiates a new CardTransitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardTransitionResponseWithDefaults() *CardTransitionResponse {
	this := CardTransitionResponse{}
	var expedite bool = false
	this.Expedite = &expedite
	var pinIsSet bool = false
	this.PinIsSet = pinIsSet
	return &this
}

// GetBarcode returns the Barcode field value
func (o *CardTransitionResponse) GetBarcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Barcode
}

// GetBarcodeOk returns a tuple with the Barcode field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetBarcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Barcode, true
}

// SetBarcode sets field value
func (o *CardTransitionResponse) SetBarcode(v string) {
	o.Barcode = v
}

// GetBulkIssuanceToken returns the BulkIssuanceToken field value if set, zero value otherwise.
func (o *CardTransitionResponse) GetBulkIssuanceToken() string {
	if o == nil || IsNil(o.BulkIssuanceToken) {
		var ret string
		return ret
	}
	return *o.BulkIssuanceToken
}

// GetBulkIssuanceTokenOk returns a tuple with the BulkIssuanceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetBulkIssuanceTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BulkIssuanceToken) {
		return nil, false
	}
	return o.BulkIssuanceToken, true
}

// HasBulkIssuanceToken returns a boolean if a field has been set.
func (o *CardTransitionResponse) HasBulkIssuanceToken() bool {
	if o != nil && !IsNil(o.BulkIssuanceToken) {
		return true
	}

	return false
}

// SetBulkIssuanceToken gets a reference to the given string and assigns it to the BulkIssuanceToken field.
func (o *CardTransitionResponse) SetBulkIssuanceToken(v string) {
	o.BulkIssuanceToken = &v
}

// GetCard returns the Card field value if set, zero value otherwise.
func (o *CardTransitionResponse) GetCard() CardMetadata {
	if o == nil || IsNil(o.Card) {
		var ret CardMetadata
		return ret
	}
	return *o.Card
}

// GetCardOk returns a tuple with the Card field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetCardOk() (*CardMetadata, bool) {
	if o == nil || IsNil(o.Card) {
		return nil, false
	}
	return o.Card, true
}

// HasCard returns a boolean if a field has been set.
func (o *CardTransitionResponse) HasCard() bool {
	if o != nil && !IsNil(o.Card) {
		return true
	}

	return false
}

// SetCard gets a reference to the given CardMetadata and assigns it to the Card field.
func (o *CardTransitionResponse) SetCard(v CardMetadata) {
	o.Card = &v
}

// GetCardProductToken returns the CardProductToken field value
func (o *CardTransitionResponse) GetCardProductToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardProductToken
}

// GetCardProductTokenOk returns a tuple with the CardProductToken field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetCardProductTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardProductToken, true
}

// SetCardProductToken sets field value
func (o *CardTransitionResponse) SetCardProductToken(v string) {
	o.CardProductToken = v
}

// GetCardToken returns the CardToken field value
func (o *CardTransitionResponse) GetCardToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardToken
}

// GetCardTokenOk returns a tuple with the CardToken field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetCardTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardToken, true
}

// SetCardToken sets field value
func (o *CardTransitionResponse) SetCardToken(v string) {
	o.CardToken = v
}

// GetChannel returns the Channel field value
func (o *CardTransitionResponse) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetChannelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *CardTransitionResponse) SetChannel(v string) {
	o.Channel = v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *CardTransitionResponse) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *CardTransitionResponse) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *CardTransitionResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetExpedite returns the Expedite field value if set, zero value otherwise.
func (o *CardTransitionResponse) GetExpedite() bool {
	if o == nil || IsNil(o.Expedite) {
		var ret bool
		return ret
	}
	return *o.Expedite
}

// GetExpediteOk returns a tuple with the Expedite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetExpediteOk() (*bool, bool) {
	if o == nil || IsNil(o.Expedite) {
		return nil, false
	}
	return o.Expedite, true
}

// HasExpedite returns a boolean if a field has been set.
func (o *CardTransitionResponse) HasExpedite() bool {
	if o != nil && !IsNil(o.Expedite) {
		return true
	}

	return false
}

// SetExpedite gets a reference to the given bool and assigns it to the Expedite field.
func (o *CardTransitionResponse) SetExpedite(v bool) {
	o.Expedite = &v
}

// GetExpiration returns the Expiration field value
func (o *CardTransitionResponse) GetExpiration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetExpirationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expiration, true
}

// SetExpiration sets field value
func (o *CardTransitionResponse) SetExpiration(v string) {
	o.Expiration = v
}

// GetExpirationTime returns the ExpirationTime field value
func (o *CardTransitionResponse) GetExpirationTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpirationTime
}

// GetExpirationTimeOk returns a tuple with the ExpirationTime field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetExpirationTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationTime, true
}

// SetExpirationTime sets field value
func (o *CardTransitionResponse) SetExpirationTime(v string) {
	o.ExpirationTime = v
}

// GetFulfillment returns the Fulfillment field value if set, zero value otherwise.
func (o *CardTransitionResponse) GetFulfillment() CardFulfillmentRequest {
	if o == nil || IsNil(o.Fulfillment) {
		var ret CardFulfillmentRequest
		return ret
	}
	return *o.Fulfillment
}

// GetFulfillmentOk returns a tuple with the Fulfillment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetFulfillmentOk() (*CardFulfillmentRequest, bool) {
	if o == nil || IsNil(o.Fulfillment) {
		return nil, false
	}
	return o.Fulfillment, true
}

// HasFulfillment returns a boolean if a field has been set.
func (o *CardTransitionResponse) HasFulfillment() bool {
	if o != nil && !IsNil(o.Fulfillment) {
		return true
	}

	return false
}

// SetFulfillment gets a reference to the given CardFulfillmentRequest and assigns it to the Fulfillment field.
func (o *CardTransitionResponse) SetFulfillment(v CardFulfillmentRequest) {
	o.Fulfillment = &v
}

// GetFulfillmentStatus returns the FulfillmentStatus field value
func (o *CardTransitionResponse) GetFulfillmentStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FulfillmentStatus
}

// GetFulfillmentStatusOk returns a tuple with the FulfillmentStatus field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetFulfillmentStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FulfillmentStatus, true
}

// SetFulfillmentStatus sets field value
func (o *CardTransitionResponse) SetFulfillmentStatus(v string) {
	o.FulfillmentStatus = v
}

// GetLastFour returns the LastFour field value
func (o *CardTransitionResponse) GetLastFour() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastFour
}

// GetLastFourOk returns a tuple with the LastFour field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetLastFourOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastFour, true
}

// SetLastFour sets field value
func (o *CardTransitionResponse) SetLastFour(v string) {
	o.LastFour = v
}

// GetNewPanFromCardToken returns the NewPanFromCardToken field value if set, zero value otherwise.
func (o *CardTransitionResponse) GetNewPanFromCardToken() string {
	if o == nil || IsNil(o.NewPanFromCardToken) {
		var ret string
		return ret
	}
	return *o.NewPanFromCardToken
}

// GetNewPanFromCardTokenOk returns a tuple with the NewPanFromCardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetNewPanFromCardTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NewPanFromCardToken) {
		return nil, false
	}
	return o.NewPanFromCardToken, true
}

// HasNewPanFromCardToken returns a boolean if a field has been set.
func (o *CardTransitionResponse) HasNewPanFromCardToken() bool {
	if o != nil && !IsNil(o.NewPanFromCardToken) {
		return true
	}

	return false
}

// SetNewPanFromCardToken gets a reference to the given string and assigns it to the NewPanFromCardToken field.
func (o *CardTransitionResponse) SetNewPanFromCardToken(v string) {
	o.NewPanFromCardToken = &v
}

// GetPan returns the Pan field value
func (o *CardTransitionResponse) GetPan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pan
}

// GetPanOk returns a tuple with the Pan field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetPanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pan, true
}

// SetPan sets field value
func (o *CardTransitionResponse) SetPan(v string) {
	o.Pan = v
}

// GetPinIsSet returns the PinIsSet field value
func (o *CardTransitionResponse) GetPinIsSet() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PinIsSet
}

// GetPinIsSetOk returns a tuple with the PinIsSet field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetPinIsSetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PinIsSet, true
}

// SetPinIsSet sets field value
func (o *CardTransitionResponse) SetPinIsSet(v bool) {
	o.PinIsSet = v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *CardTransitionResponse) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *CardTransitionResponse) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *CardTransitionResponse) SetReason(v string) {
	o.Reason = &v
}

// GetReasonCode returns the ReasonCode field value if set, zero value otherwise.
func (o *CardTransitionResponse) GetReasonCode() string {
	if o == nil || IsNil(o.ReasonCode) {
		var ret string
		return ret
	}
	return *o.ReasonCode
}

// GetReasonCodeOk returns a tuple with the ReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetReasonCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonCode) {
		return nil, false
	}
	return o.ReasonCode, true
}

// HasReasonCode returns a boolean if a field has been set.
func (o *CardTransitionResponse) HasReasonCode() bool {
	if o != nil && !IsNil(o.ReasonCode) {
		return true
	}

	return false
}

// SetReasonCode gets a reference to the given string and assigns it to the ReasonCode field.
func (o *CardTransitionResponse) SetReasonCode(v string) {
	o.ReasonCode = &v
}

// GetReissuePanFromCardToken returns the ReissuePanFromCardToken field value if set, zero value otherwise.
func (o *CardTransitionResponse) GetReissuePanFromCardToken() string {
	if o == nil || IsNil(o.ReissuePanFromCardToken) {
		var ret string
		return ret
	}
	return *o.ReissuePanFromCardToken
}

// GetReissuePanFromCardTokenOk returns a tuple with the ReissuePanFromCardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetReissuePanFromCardTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ReissuePanFromCardToken) {
		return nil, false
	}
	return o.ReissuePanFromCardToken, true
}

// HasReissuePanFromCardToken returns a boolean if a field has been set.
func (o *CardTransitionResponse) HasReissuePanFromCardToken() bool {
	if o != nil && !IsNil(o.ReissuePanFromCardToken) {
		return true
	}

	return false
}

// SetReissuePanFromCardToken gets a reference to the given string and assigns it to the ReissuePanFromCardToken field.
func (o *CardTransitionResponse) SetReissuePanFromCardToken(v string) {
	o.ReissuePanFromCardToken = &v
}

// GetState returns the State field value
func (o *CardTransitionResponse) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *CardTransitionResponse) SetState(v string) {
	o.State = v
}

// GetToken returns the Token field value
func (o *CardTransitionResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CardTransitionResponse) SetToken(v string) {
	o.Token = v
}

// GetType returns the Type field value
func (o *CardTransitionResponse) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CardTransitionResponse) SetType(v string) {
	o.Type = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *CardTransitionResponse) GetUser() CardholderMetadata {
	if o == nil || IsNil(o.User) {
		var ret CardholderMetadata
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetUserOk() (*CardholderMetadata, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *CardTransitionResponse) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given CardholderMetadata and assigns it to the User field.
func (o *CardTransitionResponse) SetUser(v CardholderMetadata) {
	o.User = &v
}

// GetUserToken returns the UserToken field value
func (o *CardTransitionResponse) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetUserTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *CardTransitionResponse) SetUserToken(v string) {
	o.UserToken = v
}

// GetValidations returns the Validations field value if set, zero value otherwise.
func (o *CardTransitionResponse) GetValidations() ValidationsResponse {
	if o == nil || IsNil(o.Validations) {
		var ret ValidationsResponse
		return ret
	}
	return *o.Validations
}

// GetValidationsOk returns a tuple with the Validations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransitionResponse) GetValidationsOk() (*ValidationsResponse, bool) {
	if o == nil || IsNil(o.Validations) {
		return nil, false
	}
	return o.Validations, true
}

// HasValidations returns a boolean if a field has been set.
func (o *CardTransitionResponse) HasValidations() bool {
	if o != nil && !IsNil(o.Validations) {
		return true
	}

	return false
}

// SetValidations gets a reference to the given ValidationsResponse and assigns it to the Validations field.
func (o *CardTransitionResponse) SetValidations(v ValidationsResponse) {
	o.Validations = &v
}

func (o CardTransitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardTransitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["barcode"] = o.Barcode
	if !IsNil(o.BulkIssuanceToken) {
		toSerialize["bulk_issuance_token"] = o.BulkIssuanceToken
	}
	if !IsNil(o.Card) {
		toSerialize["card"] = o.Card
	}
	toSerialize["card_product_token"] = o.CardProductToken
	toSerialize["card_token"] = o.CardToken
	toSerialize["channel"] = o.Channel
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.Expedite) {
		toSerialize["expedite"] = o.Expedite
	}
	toSerialize["expiration"] = o.Expiration
	toSerialize["expiration_time"] = o.ExpirationTime
	if !IsNil(o.Fulfillment) {
		toSerialize["fulfillment"] = o.Fulfillment
	}
	toSerialize["fulfillment_status"] = o.FulfillmentStatus
	toSerialize["last_four"] = o.LastFour
	if !IsNil(o.NewPanFromCardToken) {
		toSerialize["new_pan_from_card_token"] = o.NewPanFromCardToken
	}
	toSerialize["pan"] = o.Pan
	toSerialize["pin_is_set"] = o.PinIsSet
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.ReasonCode) {
		toSerialize["reason_code"] = o.ReasonCode
	}
	if !IsNil(o.ReissuePanFromCardToken) {
		toSerialize["reissue_pan_from_card_token"] = o.ReissuePanFromCardToken
	}
	toSerialize["state"] = o.State
	toSerialize["token"] = o.Token
	toSerialize["type"] = o.Type
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	toSerialize["user_token"] = o.UserToken
	if !IsNil(o.Validations) {
		toSerialize["validations"] = o.Validations
	}
	return toSerialize, nil
}

type NullableCardTransitionResponse struct {
	value *CardTransitionResponse
	isSet bool
}

func (v NullableCardTransitionResponse) Get() *CardTransitionResponse {
	return v.value
}

func (v *NullableCardTransitionResponse) Set(val *CardTransitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCardTransitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCardTransitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardTransitionResponse(val *CardTransitionResponse) *NullableCardTransitionResponse {
	return &NullableCardTransitionResponse{value: val, isSet: true}
}

func (v NullableCardTransitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardTransitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


