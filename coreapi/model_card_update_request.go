/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the CardUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardUpdateRequest{}

// CardUpdateRequest struct for CardUpdateRequest
type CardUpdateRequest struct {
	// Set to `true` to request expedited processing of the card by your card fulfillment provider.  This expedited service is available for cards fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window=\"_blank\"], link:http://www.idemia.com[IDEMIA, window=\"_blank\"], and link:https://www.arroweye.com/[Arroweye Solutions, window=\"_blank\"].  *NOTE:* Contact your Marqeta representative for information regarding the cost of expedited service.
	Expedite *bool `json:"expedite,omitempty"`
	Fulfillment *CardFulfillmentRequest `json:"fulfillment,omitempty"`
	// Associates customer-provided metadata with the card.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// Unique identifier of the card you want to update.
	Token string `json:"token"`
	// Specifies the user you want to associate with the card.
	UserToken *string `json:"user_token,omitempty"`
}

// NewCardUpdateRequest instantiates a new CardUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardUpdateRequest(token string) *CardUpdateRequest {
	this := CardUpdateRequest{}
	var expedite bool = false
	this.Expedite = &expedite
	this.Token = token
	return &this
}

// NewCardUpdateRequestWithDefaults instantiates a new CardUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardUpdateRequestWithDefaults() *CardUpdateRequest {
	this := CardUpdateRequest{}
	var expedite bool = false
	this.Expedite = &expedite
	return &this
}

// GetExpedite returns the Expedite field value if set, zero value otherwise.
func (o *CardUpdateRequest) GetExpedite() bool {
	if o == nil || IsNil(o.Expedite) {
		var ret bool
		return ret
	}
	return *o.Expedite
}

// GetExpediteOk returns a tuple with the Expedite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardUpdateRequest) GetExpediteOk() (*bool, bool) {
	if o == nil || IsNil(o.Expedite) {
		return nil, false
	}
	return o.Expedite, true
}

// HasExpedite returns a boolean if a field has been set.
func (o *CardUpdateRequest) HasExpedite() bool {
	if o != nil && !IsNil(o.Expedite) {
		return true
	}

	return false
}

// SetExpedite gets a reference to the given bool and assigns it to the Expedite field.
func (o *CardUpdateRequest) SetExpedite(v bool) {
	o.Expedite = &v
}

// GetFulfillment returns the Fulfillment field value if set, zero value otherwise.
func (o *CardUpdateRequest) GetFulfillment() CardFulfillmentRequest {
	if o == nil || IsNil(o.Fulfillment) {
		var ret CardFulfillmentRequest
		return ret
	}
	return *o.Fulfillment
}

// GetFulfillmentOk returns a tuple with the Fulfillment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardUpdateRequest) GetFulfillmentOk() (*CardFulfillmentRequest, bool) {
	if o == nil || IsNil(o.Fulfillment) {
		return nil, false
	}
	return o.Fulfillment, true
}

// HasFulfillment returns a boolean if a field has been set.
func (o *CardUpdateRequest) HasFulfillment() bool {
	if o != nil && !IsNil(o.Fulfillment) {
		return true
	}

	return false
}

// SetFulfillment gets a reference to the given CardFulfillmentRequest and assigns it to the Fulfillment field.
func (o *CardUpdateRequest) SetFulfillment(v CardFulfillmentRequest) {
	o.Fulfillment = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CardUpdateRequest) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardUpdateRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CardUpdateRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CardUpdateRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetToken returns the Token field value
func (o *CardUpdateRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CardUpdateRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CardUpdateRequest) SetToken(v string) {
	o.Token = v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *CardUpdateRequest) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardUpdateRequest) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *CardUpdateRequest) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *CardUpdateRequest) SetUserToken(v string) {
	o.UserToken = &v
}

func (o CardUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Expedite) {
		toSerialize["expedite"] = o.Expedite
	}
	if !IsNil(o.Fulfillment) {
		toSerialize["fulfillment"] = o.Fulfillment
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["token"] = o.Token
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	return toSerialize, nil
}

type NullableCardUpdateRequest struct {
	value *CardUpdateRequest
	isSet bool
}

func (v NullableCardUpdateRequest) Get() *CardUpdateRequest {
	return v.value
}

func (v *NullableCardUpdateRequest) Set(val *CardUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCardUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCardUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardUpdateRequest(val *CardUpdateRequest) *NullableCardUpdateRequest {
	return &NullableCardUpdateRequest{value: val, isSet: true}
}

func (v NullableCardUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


