/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the CardholderAddressResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardholderAddressResponse{}

// CardholderAddressResponse Contains information about the billing address of the funding source.
type CardholderAddressResponse struct {
	// Whether the address is active.
	Active *bool `json:"active,omitempty"`
	// Street address of the funding source.
	Address1 string `json:"address_1"`
	// Additional address information for the funding source. This field is returned if it exists in the resource.
	Address2 *string `json:"address_2,omitempty"`
	// Unique identifier of the business account holder associated with the address. This field is returned if it exists in the resource. It is required if 'user_token' is not specified.
	BusinessToken *string `json:"business_token,omitempty"`
	// City of the funding source.
	City string `json:"city"`
	// Country of the funding source.
	Country string `json:"country"`
	// Date and time when the address was created, in UTC.
	CreatedTime time.Time `json:"created_time"`
	// First name of the account holder associated with the funding source.
	FirstName string `json:"first_name"`
	// Whether this address is the default address used by the funding source.
	IsDefaultAddress *bool `json:"is_default_address,omitempty"`
	// Date and time when the address was last modified, in UTC. This field is returned if it exists in the resource.
	LastModifiedTime time.Time `json:"last_modified_time"`
	// Last name of the account holder associated with the funding source.
	LastName string `json:"last_name"`
	// Phone number of the funding source. This field is returned if it exists in the resource.
	Phone *string `json:"phone,omitempty"`
	// Postal code of the funding source.
	PostalCode string `json:"postal_code"`
	// Two-character state, province, or territorial abbreviation. For the complete list, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.
	State string `json:"state"`
	// Unique identifier of the `funding_source_address` object.
	Token string `json:"token"`
	// Unique identifier of the user account holder associated with the address. This field is returned if it exists in the resource. It is required if 'business_token' is not specified.
	UserToken *string `json:"user_token,omitempty"`
	// United States ZIP code of the funding source.
	Zip string `json:"zip"`
}

// NewCardholderAddressResponse instantiates a new CardholderAddressResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardholderAddressResponse(address1 string, city string, country string, createdTime time.Time, firstName string, lastModifiedTime time.Time, lastName string, postalCode string, state string, token string, zip string) *CardholderAddressResponse {
	this := CardholderAddressResponse{}
	var active bool = false
	this.Active = &active
	this.Address1 = address1
	this.City = city
	this.Country = country
	this.CreatedTime = createdTime
	this.FirstName = firstName
	var isDefaultAddress bool = false
	this.IsDefaultAddress = &isDefaultAddress
	this.LastModifiedTime = lastModifiedTime
	this.LastName = lastName
	this.PostalCode = postalCode
	this.State = state
	this.Token = token
	this.Zip = zip
	return &this
}

// NewCardholderAddressResponseWithDefaults instantiates a new CardholderAddressResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardholderAddressResponseWithDefaults() *CardholderAddressResponse {
	this := CardholderAddressResponse{}
	var active bool = false
	this.Active = &active
	var isDefaultAddress bool = false
	this.IsDefaultAddress = &isDefaultAddress
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CardholderAddressResponse) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CardholderAddressResponse) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CardholderAddressResponse) SetActive(v bool) {
	o.Active = &v
}

// GetAddress1 returns the Address1 field value
func (o *CardholderAddressResponse) GetAddress1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address1
}

// GetAddress1Ok returns a tuple with the Address1 field value
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetAddress1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address1, true
}

// SetAddress1 sets field value
func (o *CardholderAddressResponse) SetAddress1(v string) {
	o.Address1 = v
}

// GetAddress2 returns the Address2 field value if set, zero value otherwise.
func (o *CardholderAddressResponse) GetAddress2() string {
	if o == nil || IsNil(o.Address2) {
		var ret string
		return ret
	}
	return *o.Address2
}

// GetAddress2Ok returns a tuple with the Address2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetAddress2Ok() (*string, bool) {
	if o == nil || IsNil(o.Address2) {
		return nil, false
	}
	return o.Address2, true
}

// HasAddress2 returns a boolean if a field has been set.
func (o *CardholderAddressResponse) HasAddress2() bool {
	if o != nil && !IsNil(o.Address2) {
		return true
	}

	return false
}

// SetAddress2 gets a reference to the given string and assigns it to the Address2 field.
func (o *CardholderAddressResponse) SetAddress2(v string) {
	o.Address2 = &v
}

// GetBusinessToken returns the BusinessToken field value if set, zero value otherwise.
func (o *CardholderAddressResponse) GetBusinessToken() string {
	if o == nil || IsNil(o.BusinessToken) {
		var ret string
		return ret
	}
	return *o.BusinessToken
}

// GetBusinessTokenOk returns a tuple with the BusinessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetBusinessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessToken) {
		return nil, false
	}
	return o.BusinessToken, true
}

// HasBusinessToken returns a boolean if a field has been set.
func (o *CardholderAddressResponse) HasBusinessToken() bool {
	if o != nil && !IsNil(o.BusinessToken) {
		return true
	}

	return false
}

// SetBusinessToken gets a reference to the given string and assigns it to the BusinessToken field.
func (o *CardholderAddressResponse) SetBusinessToken(v string) {
	o.BusinessToken = &v
}

// GetCity returns the City field value
func (o *CardholderAddressResponse) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *CardholderAddressResponse) SetCity(v string) {
	o.City = v
}

// GetCountry returns the Country field value
func (o *CardholderAddressResponse) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *CardholderAddressResponse) SetCountry(v string) {
	o.Country = v
}

// GetCreatedTime returns the CreatedTime field value
func (o *CardholderAddressResponse) GetCreatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *CardholderAddressResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = v
}

// GetFirstName returns the FirstName field value
func (o *CardholderAddressResponse) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *CardholderAddressResponse) SetFirstName(v string) {
	o.FirstName = v
}

// GetIsDefaultAddress returns the IsDefaultAddress field value if set, zero value otherwise.
func (o *CardholderAddressResponse) GetIsDefaultAddress() bool {
	if o == nil || IsNil(o.IsDefaultAddress) {
		var ret bool
		return ret
	}
	return *o.IsDefaultAddress
}

// GetIsDefaultAddressOk returns a tuple with the IsDefaultAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetIsDefaultAddressOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefaultAddress) {
		return nil, false
	}
	return o.IsDefaultAddress, true
}

// HasIsDefaultAddress returns a boolean if a field has been set.
func (o *CardholderAddressResponse) HasIsDefaultAddress() bool {
	if o != nil && !IsNil(o.IsDefaultAddress) {
		return true
	}

	return false
}

// SetIsDefaultAddress gets a reference to the given bool and assigns it to the IsDefaultAddress field.
func (o *CardholderAddressResponse) SetIsDefaultAddress(v bool) {
	o.IsDefaultAddress = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value
func (o *CardholderAddressResponse) GetLastModifiedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifiedTime, true
}

// SetLastModifiedTime sets field value
func (o *CardholderAddressResponse) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = v
}

// GetLastName returns the LastName field value
func (o *CardholderAddressResponse) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *CardholderAddressResponse) SetLastName(v string) {
	o.LastName = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CardholderAddressResponse) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CardholderAddressResponse) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CardholderAddressResponse) SetPhone(v string) {
	o.Phone = &v
}

// GetPostalCode returns the PostalCode field value
func (o *CardholderAddressResponse) GetPostalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostalCode, true
}

// SetPostalCode sets field value
func (o *CardholderAddressResponse) SetPostalCode(v string) {
	o.PostalCode = v
}

// GetState returns the State field value
func (o *CardholderAddressResponse) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *CardholderAddressResponse) SetState(v string) {
	o.State = v
}

// GetToken returns the Token field value
func (o *CardholderAddressResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *CardholderAddressResponse) SetToken(v string) {
	o.Token = v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *CardholderAddressResponse) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *CardholderAddressResponse) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *CardholderAddressResponse) SetUserToken(v string) {
	o.UserToken = &v
}

// GetZip returns the Zip field value
func (o *CardholderAddressResponse) GetZip() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Zip
}

// GetZipOk returns a tuple with the Zip field value
// and a boolean to check if the value has been set.
func (o *CardholderAddressResponse) GetZipOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Zip, true
}

// SetZip sets field value
func (o *CardholderAddressResponse) SetZip(v string) {
	o.Zip = v
}

func (o CardholderAddressResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardholderAddressResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	toSerialize["address_1"] = o.Address1
	if !IsNil(o.Address2) {
		toSerialize["address_2"] = o.Address2
	}
	if !IsNil(o.BusinessToken) {
		toSerialize["business_token"] = o.BusinessToken
	}
	toSerialize["city"] = o.City
	toSerialize["country"] = o.Country
	toSerialize["created_time"] = o.CreatedTime
	toSerialize["first_name"] = o.FirstName
	if !IsNil(o.IsDefaultAddress) {
		toSerialize["is_default_address"] = o.IsDefaultAddress
	}
	toSerialize["last_modified_time"] = o.LastModifiedTime
	toSerialize["last_name"] = o.LastName
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["state"] = o.State
	toSerialize["token"] = o.Token
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	toSerialize["zip"] = o.Zip
	return toSerialize, nil
}

type NullableCardholderAddressResponse struct {
	value *CardholderAddressResponse
	isSet bool
}

func (v NullableCardholderAddressResponse) Get() *CardholderAddressResponse {
	return v.value
}

func (v *NullableCardholderAddressResponse) Set(val *CardholderAddressResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCardholderAddressResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCardholderAddressResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardholderAddressResponse(val *CardholderAddressResponse) *NullableCardholderAddressResponse {
	return &NullableCardholderAddressResponse{value: val, isSet: true}
}

func (v NullableCardholderAddressResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardholderAddressResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


