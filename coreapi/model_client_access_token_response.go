/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the ClientAccessTokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientAccessTokenResponse{}

// ClientAccessTokenResponse struct for ClientAccessTokenResponse
type ClientAccessTokenResponse struct {
	Application *Application `json:"application,omitempty"`
	// Unique identifier of the card whose sensitive information you want to display.
	CardToken *string `json:"card_token,omitempty"`
	// Date and time that the client access token was created, in UTC.
	Created time.Time `json:"created"`
	// Date and time that the client access token expires, in UTC.
	Expires time.Time `json:"expires"`
	// Value of the client access token to redeem when displaying sensitive card data.
	Token *string `json:"token,omitempty"`
}

// NewClientAccessTokenResponse instantiates a new ClientAccessTokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientAccessTokenResponse(created time.Time, expires time.Time) *ClientAccessTokenResponse {
	this := ClientAccessTokenResponse{}
	this.Created = created
	this.Expires = expires
	return &this
}

// NewClientAccessTokenResponseWithDefaults instantiates a new ClientAccessTokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientAccessTokenResponseWithDefaults() *ClientAccessTokenResponse {
	this := ClientAccessTokenResponse{}
	return &this
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *ClientAccessTokenResponse) GetApplication() Application {
	if o == nil || IsNil(o.Application) {
		var ret Application
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAccessTokenResponse) GetApplicationOk() (*Application, bool) {
	if o == nil || IsNil(o.Application) {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *ClientAccessTokenResponse) HasApplication() bool {
	if o != nil && !IsNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given Application and assigns it to the Application field.
func (o *ClientAccessTokenResponse) SetApplication(v Application) {
	o.Application = &v
}

// GetCardToken returns the CardToken field value if set, zero value otherwise.
func (o *ClientAccessTokenResponse) GetCardToken() string {
	if o == nil || IsNil(o.CardToken) {
		var ret string
		return ret
	}
	return *o.CardToken
}

// GetCardTokenOk returns a tuple with the CardToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAccessTokenResponse) GetCardTokenOk() (*string, bool) {
	if o == nil || IsNil(o.CardToken) {
		return nil, false
	}
	return o.CardToken, true
}

// HasCardToken returns a boolean if a field has been set.
func (o *ClientAccessTokenResponse) HasCardToken() bool {
	if o != nil && !IsNil(o.CardToken) {
		return true
	}

	return false
}

// SetCardToken gets a reference to the given string and assigns it to the CardToken field.
func (o *ClientAccessTokenResponse) SetCardToken(v string) {
	o.CardToken = &v
}

// GetCreated returns the Created field value
func (o *ClientAccessTokenResponse) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *ClientAccessTokenResponse) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *ClientAccessTokenResponse) SetCreated(v time.Time) {
	o.Created = v
}

// GetExpires returns the Expires field value
func (o *ClientAccessTokenResponse) GetExpires() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value
// and a boolean to check if the value has been set.
func (o *ClientAccessTokenResponse) GetExpiresOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expires, true
}

// SetExpires sets field value
func (o *ClientAccessTokenResponse) SetExpires(v time.Time) {
	o.Expires = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ClientAccessTokenResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAccessTokenResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ClientAccessTokenResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ClientAccessTokenResponse) SetToken(v string) {
	o.Token = &v
}

func (o ClientAccessTokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAccessTokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Application) {
		toSerialize["application"] = o.Application
	}
	if !IsNil(o.CardToken) {
		toSerialize["card_token"] = o.CardToken
	}
	toSerialize["created"] = o.Created
	toSerialize["expires"] = o.Expires
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableClientAccessTokenResponse struct {
	value *ClientAccessTokenResponse
	isSet bool
}

func (v NullableClientAccessTokenResponse) Get() *ClientAccessTokenResponse {
	return v.value
}

func (v *NullableClientAccessTokenResponse) Set(val *ClientAccessTokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAccessTokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAccessTokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAccessTokenResponse(val *ClientAccessTokenResponse) *NullableClientAccessTokenResponse {
	return &NullableClientAccessTokenResponse{value: val, isSet: true}
}

func (v NullableClientAccessTokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAccessTokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


