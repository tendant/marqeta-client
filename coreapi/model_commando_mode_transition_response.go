/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
	"time"
)

// checks if the CommandoModeTransitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommandoModeTransitionResponse{}

// CommandoModeTransitionResponse struct for CommandoModeTransitionResponse
type CommandoModeTransitionResponse struct {
	// Unique identifier of the Commando Mode control set.
	CommandoModeToken *string `json:"commando_mode_token,omitempty"`
	// Date and time when the resource was created, in UTC.
	CreatedTime time.Time `json:"created_time"`
	// Identifies the user who changed the Commando Mode control set's state.
	Name *string `json:"name,omitempty"`
	// Unique identifier of the Command Mode control set transition object.
	Token *string `json:"token,omitempty"`
	Transition *CommandoModeNestedTransition `json:"transition,omitempty"`
	// Specifies the type of event that triggered the Commando Mode transition, such as a `connection_error` or `response_timeout`.
	Type *string `json:"type,omitempty"`
}

// NewCommandoModeTransitionResponse instantiates a new CommandoModeTransitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommandoModeTransitionResponse(createdTime time.Time) *CommandoModeTransitionResponse {
	this := CommandoModeTransitionResponse{}
	this.CreatedTime = createdTime
	return &this
}

// NewCommandoModeTransitionResponseWithDefaults instantiates a new CommandoModeTransitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommandoModeTransitionResponseWithDefaults() *CommandoModeTransitionResponse {
	this := CommandoModeTransitionResponse{}
	return &this
}

// GetCommandoModeToken returns the CommandoModeToken field value if set, zero value otherwise.
func (o *CommandoModeTransitionResponse) GetCommandoModeToken() string {
	if o == nil || IsNil(o.CommandoModeToken) {
		var ret string
		return ret
	}
	return *o.CommandoModeToken
}

// GetCommandoModeTokenOk returns a tuple with the CommandoModeToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandoModeTransitionResponse) GetCommandoModeTokenOk() (*string, bool) {
	if o == nil || IsNil(o.CommandoModeToken) {
		return nil, false
	}
	return o.CommandoModeToken, true
}

// HasCommandoModeToken returns a boolean if a field has been set.
func (o *CommandoModeTransitionResponse) HasCommandoModeToken() bool {
	if o != nil && !IsNil(o.CommandoModeToken) {
		return true
	}

	return false
}

// SetCommandoModeToken gets a reference to the given string and assigns it to the CommandoModeToken field.
func (o *CommandoModeTransitionResponse) SetCommandoModeToken(v string) {
	o.CommandoModeToken = &v
}

// GetCreatedTime returns the CreatedTime field value
func (o *CommandoModeTransitionResponse) GetCreatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *CommandoModeTransitionResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *CommandoModeTransitionResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CommandoModeTransitionResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandoModeTransitionResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CommandoModeTransitionResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CommandoModeTransitionResponse) SetName(v string) {
	o.Name = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CommandoModeTransitionResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandoModeTransitionResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CommandoModeTransitionResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CommandoModeTransitionResponse) SetToken(v string) {
	o.Token = &v
}

// GetTransition returns the Transition field value if set, zero value otherwise.
func (o *CommandoModeTransitionResponse) GetTransition() CommandoModeNestedTransition {
	if o == nil || IsNil(o.Transition) {
		var ret CommandoModeNestedTransition
		return ret
	}
	return *o.Transition
}

// GetTransitionOk returns a tuple with the Transition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandoModeTransitionResponse) GetTransitionOk() (*CommandoModeNestedTransition, bool) {
	if o == nil || IsNil(o.Transition) {
		return nil, false
	}
	return o.Transition, true
}

// HasTransition returns a boolean if a field has been set.
func (o *CommandoModeTransitionResponse) HasTransition() bool {
	if o != nil && !IsNil(o.Transition) {
		return true
	}

	return false
}

// SetTransition gets a reference to the given CommandoModeNestedTransition and assigns it to the Transition field.
func (o *CommandoModeTransitionResponse) SetTransition(v CommandoModeNestedTransition) {
	o.Transition = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CommandoModeTransitionResponse) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandoModeTransitionResponse) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CommandoModeTransitionResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CommandoModeTransitionResponse) SetType(v string) {
	o.Type = &v
}

func (o CommandoModeTransitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommandoModeTransitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommandoModeToken) {
		toSerialize["commando_mode_token"] = o.CommandoModeToken
	}
	toSerialize["created_time"] = o.CreatedTime
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Transition) {
		toSerialize["transition"] = o.Transition
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableCommandoModeTransitionResponse struct {
	value *CommandoModeTransitionResponse
	isSet bool
}

func (v NullableCommandoModeTransitionResponse) Get() *CommandoModeTransitionResponse {
	return v.value
}

func (v *NullableCommandoModeTransitionResponse) Set(val *CommandoModeTransitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCommandoModeTransitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCommandoModeTransitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommandoModeTransitionResponse(val *CommandoModeTransitionResponse) *NullableCommandoModeTransitionResponse {
	return &NullableCommandoModeTransitionResponse{value: val, isSet: true}
}

func (v NullableCommandoModeTransitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommandoModeTransitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


