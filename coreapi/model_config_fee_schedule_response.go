/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the ConfigFeeScheduleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigFeeScheduleResponse{}

// ConfigFeeScheduleResponse Contains information returned when configuring fees.
type ConfigFeeScheduleResponse struct {
	// Whether the fee is active.
	Active *bool `json:"active,omitempty"`
	// Date and time when the fee was created on Marqeta's credit platform, in UTC.
	CreatedDate *time.Time `json:"created_date,omitempty"`
	// Contains one or more fee schedules.
	Schedule []ConfigFeeScheduleEntry `json:"schedule,omitempty"`
	Type *AccountProductFeeType `json:"type,omitempty"`
	// Date and time when the fee was last updated on Marqeta's credit platform, in UTC.
	UpdatedDate *time.Time `json:"updated_date,omitempty"`
}

// NewConfigFeeScheduleResponse instantiates a new ConfigFeeScheduleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigFeeScheduleResponse() *ConfigFeeScheduleResponse {
	this := ConfigFeeScheduleResponse{}
	return &this
}

// NewConfigFeeScheduleResponseWithDefaults instantiates a new ConfigFeeScheduleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigFeeScheduleResponseWithDefaults() *ConfigFeeScheduleResponse {
	this := ConfigFeeScheduleResponse{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ConfigFeeScheduleResponse) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigFeeScheduleResponse) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ConfigFeeScheduleResponse) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ConfigFeeScheduleResponse) SetActive(v bool) {
	o.Active = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *ConfigFeeScheduleResponse) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigFeeScheduleResponse) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *ConfigFeeScheduleResponse) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *ConfigFeeScheduleResponse) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *ConfigFeeScheduleResponse) GetSchedule() []ConfigFeeScheduleEntry {
	if o == nil || IsNil(o.Schedule) {
		var ret []ConfigFeeScheduleEntry
		return ret
	}
	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigFeeScheduleResponse) GetScheduleOk() ([]ConfigFeeScheduleEntry, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *ConfigFeeScheduleResponse) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given []ConfigFeeScheduleEntry and assigns it to the Schedule field.
func (o *ConfigFeeScheduleResponse) SetSchedule(v []ConfigFeeScheduleEntry) {
	o.Schedule = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ConfigFeeScheduleResponse) GetType() AccountProductFeeType {
	if o == nil || IsNil(o.Type) {
		var ret AccountProductFeeType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigFeeScheduleResponse) GetTypeOk() (*AccountProductFeeType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ConfigFeeScheduleResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AccountProductFeeType and assigns it to the Type field.
func (o *ConfigFeeScheduleResponse) SetType(v AccountProductFeeType) {
	o.Type = &v
}

// GetUpdatedDate returns the UpdatedDate field value if set, zero value otherwise.
func (o *ConfigFeeScheduleResponse) GetUpdatedDate() time.Time {
	if o == nil || IsNil(o.UpdatedDate) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedDate
}

// GetUpdatedDateOk returns a tuple with the UpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigFeeScheduleResponse) GetUpdatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedDate) {
		return nil, false
	}
	return o.UpdatedDate, true
}

// HasUpdatedDate returns a boolean if a field has been set.
func (o *ConfigFeeScheduleResponse) HasUpdatedDate() bool {
	if o != nil && !IsNil(o.UpdatedDate) {
		return true
	}

	return false
}

// SetUpdatedDate gets a reference to the given time.Time and assigns it to the UpdatedDate field.
func (o *ConfigFeeScheduleResponse) SetUpdatedDate(v time.Time) {
	o.UpdatedDate = &v
}

func (o ConfigFeeScheduleResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigFeeScheduleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["created_date"] = o.CreatedDate
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdatedDate) {
		toSerialize["updated_date"] = o.UpdatedDate
	}
	return toSerialize, nil
}

type NullableConfigFeeScheduleResponse struct {
	value *ConfigFeeScheduleResponse
	isSet bool
}

func (v NullableConfigFeeScheduleResponse) Get() *ConfigFeeScheduleResponse {
	return v.value
}

func (v *NullableConfigFeeScheduleResponse) Set(val *ConfigFeeScheduleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigFeeScheduleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigFeeScheduleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigFeeScheduleResponse(val *ConfigFeeScheduleResponse) *NullableConfigFeeScheduleResponse {
	return &NullableConfigFeeScheduleResponse{value: val, isSet: true}
}

func (v NullableConfigFeeScheduleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigFeeScheduleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


