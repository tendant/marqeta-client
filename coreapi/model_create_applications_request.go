/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the CreateApplicationsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApplicationsRequest{}

// CreateApplicationsRequest struct for CreateApplicationsRequest
type CreateApplicationsRequest struct {
	// A value of `true` indicates that the user has a non-taxable income source.  Required when retrieving an application.
	AnyNonTaxableIncome bool `json:"any_non_taxable_income"`
	// Unique identifier of the bundle associated with the application.
	BundleToken string `json:"bundle_token"`
	DeviceData *DeviceData `json:"device_data,omitempty"`
	// The tracking token of the eDisclosure.  This is the `tracking_token` returned in the `E_DISCLOSURE` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
	EDisclosureTrackingToken string `json:"e_disclosure_tracking_token"`
	// Customer-defined additional information about the application.
	MetaData map[string]interface{} `json:"meta_data,omitempty"`
	// Monthly amount of the mortgage or rent that the user currently pays.  Required when retrieving an application.
	MonthlyMortgageOrRent float32 `json:"monthly_mortgage_or_rent"`
	// Unique identifier of the offer for a pre-screened applicant.
	OfferId *string `json:"offer_id,omitempty"`
	// The tracking token of the Pre-qualified Offer Pre-Terms.  This is the `tracking_token` returned in the `PREQUALIFICATION_PRE_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
	PrequalifiedOfferPreTermsTrackingToken *string `json:"prequalified_offer_pre_terms_tracking_token,omitempty"`
	// Whether the primary income source comes from the user being employed, unemployed, self-employment, or another situation.  Required when retrieving an application.
	PrimaryIncomeSource string `json:"primary_income_source"`
	// The tracking token of the Privacy Policy.  This is the `tracking_token` returned in the `PRIVACY_POLICY` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
	PrivacyPolicyTrackingToken string `json:"privacy_policy_tracking_token"`
	// Whether the user owns or rents their residence, or has another situation.  Required when retrieving an application.
	ResidenceType string `json:"residence_type"`
	// The tracking token of the Rewards Disclosure Pre-terms.  This is the `tracking_token` returned in the `REWARDS_DISCLOSURE_PRE_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
	RewardsDisclosurePreTermsTrackingToken *string `json:"rewards_disclosure_pre_terms_tracking_token,omitempty"`
	// The tracking token of the Summary of Credit Terms (SOCT).  This is the `tracking_token` returned in the `SOCT` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
	SoctTrackingToken string `json:"soct_tracking_token"`
	// Unique identifier of the application.
	Token *string `json:"token,omitempty"`
	// The total amount of the user's annual income.  Required when retrieving an application.
	TotalAnnualIncome float32 `json:"total_annual_income"`
	Type *ApplicationType `json:"type,omitempty"`
	// Unique identifier of the applicant, the user applying for a credit account.
	UserToken string `json:"user_token"`
}

// NewCreateApplicationsRequest instantiates a new CreateApplicationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationsRequest(anyNonTaxableIncome bool, bundleToken string, eDisclosureTrackingToken string, monthlyMortgageOrRent float32, primaryIncomeSource string, privacyPolicyTrackingToken string, residenceType string, soctTrackingToken string, totalAnnualIncome float32, userToken string) *CreateApplicationsRequest {
	this := CreateApplicationsRequest{}
	this.AnyNonTaxableIncome = anyNonTaxableIncome
	this.BundleToken = bundleToken
	this.EDisclosureTrackingToken = eDisclosureTrackingToken
	this.MonthlyMortgageOrRent = monthlyMortgageOrRent
	this.PrimaryIncomeSource = primaryIncomeSource
	this.PrivacyPolicyTrackingToken = privacyPolicyTrackingToken
	this.ResidenceType = residenceType
	this.SoctTrackingToken = soctTrackingToken
	this.TotalAnnualIncome = totalAnnualIncome
	this.UserToken = userToken
	return &this
}

// NewCreateApplicationsRequestWithDefaults instantiates a new CreateApplicationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationsRequestWithDefaults() *CreateApplicationsRequest {
	this := CreateApplicationsRequest{}
	return &this
}

// GetAnyNonTaxableIncome returns the AnyNonTaxableIncome field value
func (o *CreateApplicationsRequest) GetAnyNonTaxableIncome() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AnyNonTaxableIncome
}

// GetAnyNonTaxableIncomeOk returns a tuple with the AnyNonTaxableIncome field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetAnyNonTaxableIncomeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnyNonTaxableIncome, true
}

// SetAnyNonTaxableIncome sets field value
func (o *CreateApplicationsRequest) SetAnyNonTaxableIncome(v bool) {
	o.AnyNonTaxableIncome = v
}

// GetBundleToken returns the BundleToken field value
func (o *CreateApplicationsRequest) GetBundleToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BundleToken
}

// GetBundleTokenOk returns a tuple with the BundleToken field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetBundleTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BundleToken, true
}

// SetBundleToken sets field value
func (o *CreateApplicationsRequest) SetBundleToken(v string) {
	o.BundleToken = v
}

// GetDeviceData returns the DeviceData field value if set, zero value otherwise.
func (o *CreateApplicationsRequest) GetDeviceData() DeviceData {
	if o == nil || IsNil(o.DeviceData) {
		var ret DeviceData
		return ret
	}
	return *o.DeviceData
}

// GetDeviceDataOk returns a tuple with the DeviceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetDeviceDataOk() (*DeviceData, bool) {
	if o == nil || IsNil(o.DeviceData) {
		return nil, false
	}
	return o.DeviceData, true
}

// HasDeviceData returns a boolean if a field has been set.
func (o *CreateApplicationsRequest) HasDeviceData() bool {
	if o != nil && !IsNil(o.DeviceData) {
		return true
	}

	return false
}

// SetDeviceData gets a reference to the given DeviceData and assigns it to the DeviceData field.
func (o *CreateApplicationsRequest) SetDeviceData(v DeviceData) {
	o.DeviceData = &v
}

// GetEDisclosureTrackingToken returns the EDisclosureTrackingToken field value
func (o *CreateApplicationsRequest) GetEDisclosureTrackingToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EDisclosureTrackingToken
}

// GetEDisclosureTrackingTokenOk returns a tuple with the EDisclosureTrackingToken field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetEDisclosureTrackingTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EDisclosureTrackingToken, true
}

// SetEDisclosureTrackingToken sets field value
func (o *CreateApplicationsRequest) SetEDisclosureTrackingToken(v string) {
	o.EDisclosureTrackingToken = v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *CreateApplicationsRequest) GetMetaData() map[string]interface{} {
	if o == nil || IsNil(o.MetaData) {
		var ret map[string]interface{}
		return ret
	}
	return o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetMetaDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MetaData) {
		return map[string]interface{}{}, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *CreateApplicationsRequest) HasMetaData() bool {
	if o != nil && !IsNil(o.MetaData) {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given map[string]interface{} and assigns it to the MetaData field.
func (o *CreateApplicationsRequest) SetMetaData(v map[string]interface{}) {
	o.MetaData = v
}

// GetMonthlyMortgageOrRent returns the MonthlyMortgageOrRent field value
func (o *CreateApplicationsRequest) GetMonthlyMortgageOrRent() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MonthlyMortgageOrRent
}

// GetMonthlyMortgageOrRentOk returns a tuple with the MonthlyMortgageOrRent field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetMonthlyMortgageOrRentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MonthlyMortgageOrRent, true
}

// SetMonthlyMortgageOrRent sets field value
func (o *CreateApplicationsRequest) SetMonthlyMortgageOrRent(v float32) {
	o.MonthlyMortgageOrRent = v
}

// GetOfferId returns the OfferId field value if set, zero value otherwise.
func (o *CreateApplicationsRequest) GetOfferId() string {
	if o == nil || IsNil(o.OfferId) {
		var ret string
		return ret
	}
	return *o.OfferId
}

// GetOfferIdOk returns a tuple with the OfferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetOfferIdOk() (*string, bool) {
	if o == nil || IsNil(o.OfferId) {
		return nil, false
	}
	return o.OfferId, true
}

// HasOfferId returns a boolean if a field has been set.
func (o *CreateApplicationsRequest) HasOfferId() bool {
	if o != nil && !IsNil(o.OfferId) {
		return true
	}

	return false
}

// SetOfferId gets a reference to the given string and assigns it to the OfferId field.
func (o *CreateApplicationsRequest) SetOfferId(v string) {
	o.OfferId = &v
}

// GetPrequalifiedOfferPreTermsTrackingToken returns the PrequalifiedOfferPreTermsTrackingToken field value if set, zero value otherwise.
func (o *CreateApplicationsRequest) GetPrequalifiedOfferPreTermsTrackingToken() string {
	if o == nil || IsNil(o.PrequalifiedOfferPreTermsTrackingToken) {
		var ret string
		return ret
	}
	return *o.PrequalifiedOfferPreTermsTrackingToken
}

// GetPrequalifiedOfferPreTermsTrackingTokenOk returns a tuple with the PrequalifiedOfferPreTermsTrackingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetPrequalifiedOfferPreTermsTrackingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PrequalifiedOfferPreTermsTrackingToken) {
		return nil, false
	}
	return o.PrequalifiedOfferPreTermsTrackingToken, true
}

// HasPrequalifiedOfferPreTermsTrackingToken returns a boolean if a field has been set.
func (o *CreateApplicationsRequest) HasPrequalifiedOfferPreTermsTrackingToken() bool {
	if o != nil && !IsNil(o.PrequalifiedOfferPreTermsTrackingToken) {
		return true
	}

	return false
}

// SetPrequalifiedOfferPreTermsTrackingToken gets a reference to the given string and assigns it to the PrequalifiedOfferPreTermsTrackingToken field.
func (o *CreateApplicationsRequest) SetPrequalifiedOfferPreTermsTrackingToken(v string) {
	o.PrequalifiedOfferPreTermsTrackingToken = &v
}

// GetPrimaryIncomeSource returns the PrimaryIncomeSource field value
func (o *CreateApplicationsRequest) GetPrimaryIncomeSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrimaryIncomeSource
}

// GetPrimaryIncomeSourceOk returns a tuple with the PrimaryIncomeSource field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetPrimaryIncomeSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrimaryIncomeSource, true
}

// SetPrimaryIncomeSource sets field value
func (o *CreateApplicationsRequest) SetPrimaryIncomeSource(v string) {
	o.PrimaryIncomeSource = v
}

// GetPrivacyPolicyTrackingToken returns the PrivacyPolicyTrackingToken field value
func (o *CreateApplicationsRequest) GetPrivacyPolicyTrackingToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivacyPolicyTrackingToken
}

// GetPrivacyPolicyTrackingTokenOk returns a tuple with the PrivacyPolicyTrackingToken field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetPrivacyPolicyTrackingTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivacyPolicyTrackingToken, true
}

// SetPrivacyPolicyTrackingToken sets field value
func (o *CreateApplicationsRequest) SetPrivacyPolicyTrackingToken(v string) {
	o.PrivacyPolicyTrackingToken = v
}

// GetResidenceType returns the ResidenceType field value
func (o *CreateApplicationsRequest) GetResidenceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResidenceType
}

// GetResidenceTypeOk returns a tuple with the ResidenceType field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetResidenceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResidenceType, true
}

// SetResidenceType sets field value
func (o *CreateApplicationsRequest) SetResidenceType(v string) {
	o.ResidenceType = v
}

// GetRewardsDisclosurePreTermsTrackingToken returns the RewardsDisclosurePreTermsTrackingToken field value if set, zero value otherwise.
func (o *CreateApplicationsRequest) GetRewardsDisclosurePreTermsTrackingToken() string {
	if o == nil || IsNil(o.RewardsDisclosurePreTermsTrackingToken) {
		var ret string
		return ret
	}
	return *o.RewardsDisclosurePreTermsTrackingToken
}

// GetRewardsDisclosurePreTermsTrackingTokenOk returns a tuple with the RewardsDisclosurePreTermsTrackingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetRewardsDisclosurePreTermsTrackingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RewardsDisclosurePreTermsTrackingToken) {
		return nil, false
	}
	return o.RewardsDisclosurePreTermsTrackingToken, true
}

// HasRewardsDisclosurePreTermsTrackingToken returns a boolean if a field has been set.
func (o *CreateApplicationsRequest) HasRewardsDisclosurePreTermsTrackingToken() bool {
	if o != nil && !IsNil(o.RewardsDisclosurePreTermsTrackingToken) {
		return true
	}

	return false
}

// SetRewardsDisclosurePreTermsTrackingToken gets a reference to the given string and assigns it to the RewardsDisclosurePreTermsTrackingToken field.
func (o *CreateApplicationsRequest) SetRewardsDisclosurePreTermsTrackingToken(v string) {
	o.RewardsDisclosurePreTermsTrackingToken = &v
}

// GetSoctTrackingToken returns the SoctTrackingToken field value
func (o *CreateApplicationsRequest) GetSoctTrackingToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SoctTrackingToken
}

// GetSoctTrackingTokenOk returns a tuple with the SoctTrackingToken field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetSoctTrackingTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SoctTrackingToken, true
}

// SetSoctTrackingToken sets field value
func (o *CreateApplicationsRequest) SetSoctTrackingToken(v string) {
	o.SoctTrackingToken = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CreateApplicationsRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CreateApplicationsRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CreateApplicationsRequest) SetToken(v string) {
	o.Token = &v
}

// GetTotalAnnualIncome returns the TotalAnnualIncome field value
func (o *CreateApplicationsRequest) GetTotalAnnualIncome() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalAnnualIncome
}

// GetTotalAnnualIncomeOk returns a tuple with the TotalAnnualIncome field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetTotalAnnualIncomeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAnnualIncome, true
}

// SetTotalAnnualIncome sets field value
func (o *CreateApplicationsRequest) SetTotalAnnualIncome(v float32) {
	o.TotalAnnualIncome = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateApplicationsRequest) GetType() ApplicationType {
	if o == nil || IsNil(o.Type) {
		var ret ApplicationType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetTypeOk() (*ApplicationType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateApplicationsRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ApplicationType and assigns it to the Type field.
func (o *CreateApplicationsRequest) SetType(v ApplicationType) {
	o.Type = &v
}

// GetUserToken returns the UserToken field value
func (o *CreateApplicationsRequest) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationsRequest) GetUserTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *CreateApplicationsRequest) SetUserToken(v string) {
	o.UserToken = v
}

func (o CreateApplicationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApplicationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["any_non_taxable_income"] = o.AnyNonTaxableIncome
	toSerialize["bundle_token"] = o.BundleToken
	if !IsNil(o.DeviceData) {
		toSerialize["device_data"] = o.DeviceData
	}
	toSerialize["e_disclosure_tracking_token"] = o.EDisclosureTrackingToken
	if !IsNil(o.MetaData) {
		toSerialize["meta_data"] = o.MetaData
	}
	toSerialize["monthly_mortgage_or_rent"] = o.MonthlyMortgageOrRent
	if !IsNil(o.OfferId) {
		toSerialize["offer_id"] = o.OfferId
	}
	if !IsNil(o.PrequalifiedOfferPreTermsTrackingToken) {
		toSerialize["prequalified_offer_pre_terms_tracking_token"] = o.PrequalifiedOfferPreTermsTrackingToken
	}
	toSerialize["primary_income_source"] = o.PrimaryIncomeSource
	toSerialize["privacy_policy_tracking_token"] = o.PrivacyPolicyTrackingToken
	toSerialize["residence_type"] = o.ResidenceType
	if !IsNil(o.RewardsDisclosurePreTermsTrackingToken) {
		toSerialize["rewards_disclosure_pre_terms_tracking_token"] = o.RewardsDisclosurePreTermsTrackingToken
	}
	toSerialize["soct_tracking_token"] = o.SoctTrackingToken
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	toSerialize["total_annual_income"] = o.TotalAnnualIncome
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["user_token"] = o.UserToken
	return toSerialize, nil
}

type NullableCreateApplicationsRequest struct {
	value *CreateApplicationsRequest
	isSet bool
}

func (v NullableCreateApplicationsRequest) Get() *CreateApplicationsRequest {
	return v.value
}

func (v *NullableCreateApplicationsRequest) Set(val *CreateApplicationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationsRequest(val *CreateApplicationsRequest) *NullableCreateApplicationsRequest {
	return &NullableCreateApplicationsRequest{value: val, isSet: true}
}

func (v NullableCreateApplicationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


