/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the CreateRewardProgramsEntriesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRewardProgramsEntriesRequest{}

// CreateRewardProgramsEntriesRequest struct for CreateRewardProgramsEntriesRequest
type CreateRewardProgramsEntriesRequest struct {
	// Date and time when the reward entry was created on the Marqeta platform, in UTC.
	CreatedTime *time.Time `json:"created_time,omitempty"`
	// A note explaining why the reward entry is being created manually.
	Note string `json:"note"`
	// Unique identifier of the reward entry.
	Token *string `json:"token,omitempty"`
	// Value of the reward granted to the account.
	Value float32 `json:"value"`
}

// NewCreateRewardProgramsEntriesRequest instantiates a new CreateRewardProgramsEntriesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRewardProgramsEntriesRequest(note string, value float32) *CreateRewardProgramsEntriesRequest {
	this := CreateRewardProgramsEntriesRequest{}
	this.Note = note
	this.Value = value
	return &this
}

// NewCreateRewardProgramsEntriesRequestWithDefaults instantiates a new CreateRewardProgramsEntriesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRewardProgramsEntriesRequestWithDefaults() *CreateRewardProgramsEntriesRequest {
	this := CreateRewardProgramsEntriesRequest{}
	return &this
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *CreateRewardProgramsEntriesRequest) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRewardProgramsEntriesRequest) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *CreateRewardProgramsEntriesRequest) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *CreateRewardProgramsEntriesRequest) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetNote returns the Note field value
func (o *CreateRewardProgramsEntriesRequest) GetNote() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Note
}

// GetNoteOk returns a tuple with the Note field value
// and a boolean to check if the value has been set.
func (o *CreateRewardProgramsEntriesRequest) GetNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Note, true
}

// SetNote sets field value
func (o *CreateRewardProgramsEntriesRequest) SetNote(v string) {
	o.Note = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *CreateRewardProgramsEntriesRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRewardProgramsEntriesRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *CreateRewardProgramsEntriesRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *CreateRewardProgramsEntriesRequest) SetToken(v string) {
	o.Token = &v
}

// GetValue returns the Value field value
func (o *CreateRewardProgramsEntriesRequest) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CreateRewardProgramsEntriesRequest) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *CreateRewardProgramsEntriesRequest) SetValue(v float32) {
	o.Value = v
}

func (o CreateRewardProgramsEntriesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRewardProgramsEntriesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	toSerialize["note"] = o.Note
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableCreateRewardProgramsEntriesRequest struct {
	value *CreateRewardProgramsEntriesRequest
	isSet bool
}

func (v NullableCreateRewardProgramsEntriesRequest) Get() *CreateRewardProgramsEntriesRequest {
	return v.value
}

func (v *NullableCreateRewardProgramsEntriesRequest) Set(val *CreateRewardProgramsEntriesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRewardProgramsEntriesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRewardProgramsEntriesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRewardProgramsEntriesRequest(val *CreateRewardProgramsEntriesRequest) *NullableCreateRewardProgramsEntriesRequest {
	return &NullableCreateRewardProgramsEntriesRequest{value: val, isSet: true}
}

func (v NullableCreateRewardProgramsEntriesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRewardProgramsEntriesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


