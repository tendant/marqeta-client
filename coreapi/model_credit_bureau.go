/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the CreditBureau type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreditBureau{}

// CreditBureau Contains information on the credit bureau.
type CreditBureau struct {
	Address CreditBureauAddress `json:"address"`
	// Name of the credit bureau used to obtain the user's credit data.
	Name string `json:"name"`
	// Phone number of the credit bureau.
	PhoneNumber string `json:"phone_number"`
	// Website of the credit bureau.
	Website string `json:"website"`
}

// NewCreditBureau instantiates a new CreditBureau object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditBureau(address CreditBureauAddress, name string, phoneNumber string, website string) *CreditBureau {
	this := CreditBureau{}
	this.Address = address
	this.Name = name
	this.PhoneNumber = phoneNumber
	this.Website = website
	return &this
}

// NewCreditBureauWithDefaults instantiates a new CreditBureau object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditBureauWithDefaults() *CreditBureau {
	this := CreditBureau{}
	return &this
}

// GetAddress returns the Address field value
func (o *CreditBureau) GetAddress() CreditBureauAddress {
	if o == nil {
		var ret CreditBureauAddress
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *CreditBureau) GetAddressOk() (*CreditBureauAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *CreditBureau) SetAddress(v CreditBureauAddress) {
	o.Address = v
}

// GetName returns the Name field value
func (o *CreditBureau) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreditBureau) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreditBureau) SetName(v string) {
	o.Name = v
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *CreditBureau) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *CreditBureau) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *CreditBureau) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetWebsite returns the Website field value
func (o *CreditBureau) GetWebsite() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Website
}

// GetWebsiteOk returns a tuple with the Website field value
// and a boolean to check if the value has been set.
func (o *CreditBureau) GetWebsiteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Website, true
}

// SetWebsite sets field value
func (o *CreditBureau) SetWebsite(v string) {
	o.Website = v
}

func (o CreditBureau) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreditBureau) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	toSerialize["name"] = o.Name
	toSerialize["phone_number"] = o.PhoneNumber
	toSerialize["website"] = o.Website
	return toSerialize, nil
}

type NullableCreditBureau struct {
	value *CreditBureau
	isSet bool
}

func (v NullableCreditBureau) Get() *CreditBureau {
	return v.value
}

func (v *NullableCreditBureau) Set(val *CreditBureau) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditBureau) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditBureau) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditBureau(val *CreditBureau) *NullableCreditBureau {
	return &NullableCreditBureau{value: val, isSet: true}
}

func (v NullableCreditBureau) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditBureau) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


