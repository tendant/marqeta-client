/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the DecisionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DecisionsResponse{}

// DecisionsResponse Contains information on the decision model returned by the issuing bank if a decision has been rendered.  Returned when retrieving an application after a decision has been rendered.
type DecisionsResponse struct {
	// Indicates the version of the Notice of Adverse Action (NOAA) template used. Can have these possible values:  * `AA0` - score denial with score disclosure * `AA1` - individual reason with score disclosure * `AA2` - individual reason without score disclosure * `AA3` - locked and frozen * `AA4` - fraud related
	AdverseActionTemplateCode *string `json:"adverse_action_template_code,omitempty"`
	// The tier of the card product.
	CardProductLevel *string `json:"card_product_level,omitempty"`
	// Date and time when the decision model was created on the Marqeta platform, in UTC.
	CreatedDate *time.Time `json:"created_date,omitempty"`
	CreditBureau *CreditBureau `json:"credit_bureau,omitempty"`
	// The maximum line of credit extended to the user, also the maximum balance the credit account can carry.
	CreditLimit *int32 `json:"credit_limit,omitempty"`
	// The user's credit score.
	CreditScore *int32 `json:"credit_score,omitempty"`
	// Date and time when the credit score went into effect.
	CreditScoreDate *string `json:"credit_score_date,omitempty"`
	// Date and time when the decision on the application was rendered, in UTC.
	DecisionDate *time.Time `json:"decision_date,omitempty"`
	// An array of reasons that explain why the application was declined.
	DenialReasons []string `json:"denial_reasons,omitempty"`
	// Date when the decision model expires.
	ExpireDate *string `json:"expire_date,omitempty"`
	// Number of percentage points added to the prime rate, used to calculate the purchase APR.
	Margin *float32 `json:"margin,omitempty"`
	// The current prime rate set by the Fed.
	PrimeRate *float32 `json:"prime_rate,omitempty"`
	// The purchase APR approved for the user.
	PurchaseApr *float32 `json:"purchase_apr,omitempty"`
	// A value of `true` indicates that the user received the credit product's best APR.  If `false`, you must display to the user the following: `score_factors`, `credit_score`, `credit_score_date`, `credit_bureau`, `score_range`.
	ReceivedBestRate *bool `json:"received_best_rate,omitempty"`
	// Factors that the bureau used to determine the user's credit score.
	ScoreFactors []string `json:"score_factors,omitempty"`
	// The range in which the user's credit score falls.
	ScoreRange *string `json:"score_range,omitempty"`
	// Unique identifier of the application.
	ApplicationToken string `json:"application_token"`
	// Unique identifier of the decision made based on the decision model.  See `decision_model.status` for the current state of the application.
	DecisionId string `json:"decision_id"`
	// Status of the decision on the application.
	Status string `json:"status"`
	// Date and time when the decision was submitted, in UTC.
	SubmittedDateTime time.Time `json:"submitted_date_time"`
	// Unique identifier of the decision model.  See `decision_model.status` for the current state of the application.
	Token string `json:"token"`
	// Unique identifier of the applicant, the user applying for a credit account.
	UserToken string `json:"user_token"`
}

// NewDecisionsResponse instantiates a new DecisionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDecisionsResponse(applicationToken string, decisionId string, status string, submittedDateTime time.Time, token string, userToken string) *DecisionsResponse {
	this := DecisionsResponse{}
	this.ApplicationToken = applicationToken
	this.DecisionId = decisionId
	this.Status = status
	this.SubmittedDateTime = submittedDateTime
	this.Token = token
	this.UserToken = userToken
	return &this
}

// NewDecisionsResponseWithDefaults instantiates a new DecisionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDecisionsResponseWithDefaults() *DecisionsResponse {
	this := DecisionsResponse{}
	return &this
}

// GetAdverseActionTemplateCode returns the AdverseActionTemplateCode field value if set, zero value otherwise.
func (o *DecisionsResponse) GetAdverseActionTemplateCode() string {
	if o == nil || IsNil(o.AdverseActionTemplateCode) {
		var ret string
		return ret
	}
	return *o.AdverseActionTemplateCode
}

// GetAdverseActionTemplateCodeOk returns a tuple with the AdverseActionTemplateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetAdverseActionTemplateCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AdverseActionTemplateCode) {
		return nil, false
	}
	return o.AdverseActionTemplateCode, true
}

// HasAdverseActionTemplateCode returns a boolean if a field has been set.
func (o *DecisionsResponse) HasAdverseActionTemplateCode() bool {
	if o != nil && !IsNil(o.AdverseActionTemplateCode) {
		return true
	}

	return false
}

// SetAdverseActionTemplateCode gets a reference to the given string and assigns it to the AdverseActionTemplateCode field.
func (o *DecisionsResponse) SetAdverseActionTemplateCode(v string) {
	o.AdverseActionTemplateCode = &v
}

// GetCardProductLevel returns the CardProductLevel field value if set, zero value otherwise.
func (o *DecisionsResponse) GetCardProductLevel() string {
	if o == nil || IsNil(o.CardProductLevel) {
		var ret string
		return ret
	}
	return *o.CardProductLevel
}

// GetCardProductLevelOk returns a tuple with the CardProductLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetCardProductLevelOk() (*string, bool) {
	if o == nil || IsNil(o.CardProductLevel) {
		return nil, false
	}
	return o.CardProductLevel, true
}

// HasCardProductLevel returns a boolean if a field has been set.
func (o *DecisionsResponse) HasCardProductLevel() bool {
	if o != nil && !IsNil(o.CardProductLevel) {
		return true
	}

	return false
}

// SetCardProductLevel gets a reference to the given string and assigns it to the CardProductLevel field.
func (o *DecisionsResponse) SetCardProductLevel(v string) {
	o.CardProductLevel = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *DecisionsResponse) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *DecisionsResponse) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *DecisionsResponse) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetCreditBureau returns the CreditBureau field value if set, zero value otherwise.
func (o *DecisionsResponse) GetCreditBureau() CreditBureau {
	if o == nil || IsNil(o.CreditBureau) {
		var ret CreditBureau
		return ret
	}
	return *o.CreditBureau
}

// GetCreditBureauOk returns a tuple with the CreditBureau field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetCreditBureauOk() (*CreditBureau, bool) {
	if o == nil || IsNil(o.CreditBureau) {
		return nil, false
	}
	return o.CreditBureau, true
}

// HasCreditBureau returns a boolean if a field has been set.
func (o *DecisionsResponse) HasCreditBureau() bool {
	if o != nil && !IsNil(o.CreditBureau) {
		return true
	}

	return false
}

// SetCreditBureau gets a reference to the given CreditBureau and assigns it to the CreditBureau field.
func (o *DecisionsResponse) SetCreditBureau(v CreditBureau) {
	o.CreditBureau = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *DecisionsResponse) GetCreditLimit() int32 {
	if o == nil || IsNil(o.CreditLimit) {
		var ret int32
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetCreditLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *DecisionsResponse) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given int32 and assigns it to the CreditLimit field.
func (o *DecisionsResponse) SetCreditLimit(v int32) {
	o.CreditLimit = &v
}

// GetCreditScore returns the CreditScore field value if set, zero value otherwise.
func (o *DecisionsResponse) GetCreditScore() int32 {
	if o == nil || IsNil(o.CreditScore) {
		var ret int32
		return ret
	}
	return *o.CreditScore
}

// GetCreditScoreOk returns a tuple with the CreditScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetCreditScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.CreditScore) {
		return nil, false
	}
	return o.CreditScore, true
}

// HasCreditScore returns a boolean if a field has been set.
func (o *DecisionsResponse) HasCreditScore() bool {
	if o != nil && !IsNil(o.CreditScore) {
		return true
	}

	return false
}

// SetCreditScore gets a reference to the given int32 and assigns it to the CreditScore field.
func (o *DecisionsResponse) SetCreditScore(v int32) {
	o.CreditScore = &v
}

// GetCreditScoreDate returns the CreditScoreDate field value if set, zero value otherwise.
func (o *DecisionsResponse) GetCreditScoreDate() string {
	if o == nil || IsNil(o.CreditScoreDate) {
		var ret string
		return ret
	}
	return *o.CreditScoreDate
}

// GetCreditScoreDateOk returns a tuple with the CreditScoreDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetCreditScoreDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreditScoreDate) {
		return nil, false
	}
	return o.CreditScoreDate, true
}

// HasCreditScoreDate returns a boolean if a field has been set.
func (o *DecisionsResponse) HasCreditScoreDate() bool {
	if o != nil && !IsNil(o.CreditScoreDate) {
		return true
	}

	return false
}

// SetCreditScoreDate gets a reference to the given string and assigns it to the CreditScoreDate field.
func (o *DecisionsResponse) SetCreditScoreDate(v string) {
	o.CreditScoreDate = &v
}

// GetDecisionDate returns the DecisionDate field value if set, zero value otherwise.
func (o *DecisionsResponse) GetDecisionDate() time.Time {
	if o == nil || IsNil(o.DecisionDate) {
		var ret time.Time
		return ret
	}
	return *o.DecisionDate
}

// GetDecisionDateOk returns a tuple with the DecisionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetDecisionDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DecisionDate) {
		return nil, false
	}
	return o.DecisionDate, true
}

// HasDecisionDate returns a boolean if a field has been set.
func (o *DecisionsResponse) HasDecisionDate() bool {
	if o != nil && !IsNil(o.DecisionDate) {
		return true
	}

	return false
}

// SetDecisionDate gets a reference to the given time.Time and assigns it to the DecisionDate field.
func (o *DecisionsResponse) SetDecisionDate(v time.Time) {
	o.DecisionDate = &v
}

// GetDenialReasons returns the DenialReasons field value if set, zero value otherwise.
func (o *DecisionsResponse) GetDenialReasons() []string {
	if o == nil || IsNil(o.DenialReasons) {
		var ret []string
		return ret
	}
	return o.DenialReasons
}

// GetDenialReasonsOk returns a tuple with the DenialReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetDenialReasonsOk() ([]string, bool) {
	if o == nil || IsNil(o.DenialReasons) {
		return nil, false
	}
	return o.DenialReasons, true
}

// HasDenialReasons returns a boolean if a field has been set.
func (o *DecisionsResponse) HasDenialReasons() bool {
	if o != nil && !IsNil(o.DenialReasons) {
		return true
	}

	return false
}

// SetDenialReasons gets a reference to the given []string and assigns it to the DenialReasons field.
func (o *DecisionsResponse) SetDenialReasons(v []string) {
	o.DenialReasons = v
}

// GetExpireDate returns the ExpireDate field value if set, zero value otherwise.
func (o *DecisionsResponse) GetExpireDate() string {
	if o == nil || IsNil(o.ExpireDate) {
		var ret string
		return ret
	}
	return *o.ExpireDate
}

// GetExpireDateOk returns a tuple with the ExpireDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetExpireDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireDate) {
		return nil, false
	}
	return o.ExpireDate, true
}

// HasExpireDate returns a boolean if a field has been set.
func (o *DecisionsResponse) HasExpireDate() bool {
	if o != nil && !IsNil(o.ExpireDate) {
		return true
	}

	return false
}

// SetExpireDate gets a reference to the given string and assigns it to the ExpireDate field.
func (o *DecisionsResponse) SetExpireDate(v string) {
	o.ExpireDate = &v
}

// GetMargin returns the Margin field value if set, zero value otherwise.
func (o *DecisionsResponse) GetMargin() float32 {
	if o == nil || IsNil(o.Margin) {
		var ret float32
		return ret
	}
	return *o.Margin
}

// GetMarginOk returns a tuple with the Margin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetMarginOk() (*float32, bool) {
	if o == nil || IsNil(o.Margin) {
		return nil, false
	}
	return o.Margin, true
}

// HasMargin returns a boolean if a field has been set.
func (o *DecisionsResponse) HasMargin() bool {
	if o != nil && !IsNil(o.Margin) {
		return true
	}

	return false
}

// SetMargin gets a reference to the given float32 and assigns it to the Margin field.
func (o *DecisionsResponse) SetMargin(v float32) {
	o.Margin = &v
}

// GetPrimeRate returns the PrimeRate field value if set, zero value otherwise.
func (o *DecisionsResponse) GetPrimeRate() float32 {
	if o == nil || IsNil(o.PrimeRate) {
		var ret float32
		return ret
	}
	return *o.PrimeRate
}

// GetPrimeRateOk returns a tuple with the PrimeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetPrimeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.PrimeRate) {
		return nil, false
	}
	return o.PrimeRate, true
}

// HasPrimeRate returns a boolean if a field has been set.
func (o *DecisionsResponse) HasPrimeRate() bool {
	if o != nil && !IsNil(o.PrimeRate) {
		return true
	}

	return false
}

// SetPrimeRate gets a reference to the given float32 and assigns it to the PrimeRate field.
func (o *DecisionsResponse) SetPrimeRate(v float32) {
	o.PrimeRate = &v
}

// GetPurchaseApr returns the PurchaseApr field value if set, zero value otherwise.
func (o *DecisionsResponse) GetPurchaseApr() float32 {
	if o == nil || IsNil(o.PurchaseApr) {
		var ret float32
		return ret
	}
	return *o.PurchaseApr
}

// GetPurchaseAprOk returns a tuple with the PurchaseApr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetPurchaseAprOk() (*float32, bool) {
	if o == nil || IsNil(o.PurchaseApr) {
		return nil, false
	}
	return o.PurchaseApr, true
}

// HasPurchaseApr returns a boolean if a field has been set.
func (o *DecisionsResponse) HasPurchaseApr() bool {
	if o != nil && !IsNil(o.PurchaseApr) {
		return true
	}

	return false
}

// SetPurchaseApr gets a reference to the given float32 and assigns it to the PurchaseApr field.
func (o *DecisionsResponse) SetPurchaseApr(v float32) {
	o.PurchaseApr = &v
}

// GetReceivedBestRate returns the ReceivedBestRate field value if set, zero value otherwise.
func (o *DecisionsResponse) GetReceivedBestRate() bool {
	if o == nil || IsNil(o.ReceivedBestRate) {
		var ret bool
		return ret
	}
	return *o.ReceivedBestRate
}

// GetReceivedBestRateOk returns a tuple with the ReceivedBestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetReceivedBestRateOk() (*bool, bool) {
	if o == nil || IsNil(o.ReceivedBestRate) {
		return nil, false
	}
	return o.ReceivedBestRate, true
}

// HasReceivedBestRate returns a boolean if a field has been set.
func (o *DecisionsResponse) HasReceivedBestRate() bool {
	if o != nil && !IsNil(o.ReceivedBestRate) {
		return true
	}

	return false
}

// SetReceivedBestRate gets a reference to the given bool and assigns it to the ReceivedBestRate field.
func (o *DecisionsResponse) SetReceivedBestRate(v bool) {
	o.ReceivedBestRate = &v
}

// GetScoreFactors returns the ScoreFactors field value if set, zero value otherwise.
func (o *DecisionsResponse) GetScoreFactors() []string {
	if o == nil || IsNil(o.ScoreFactors) {
		var ret []string
		return ret
	}
	return o.ScoreFactors
}

// GetScoreFactorsOk returns a tuple with the ScoreFactors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetScoreFactorsOk() ([]string, bool) {
	if o == nil || IsNil(o.ScoreFactors) {
		return nil, false
	}
	return o.ScoreFactors, true
}

// HasScoreFactors returns a boolean if a field has been set.
func (o *DecisionsResponse) HasScoreFactors() bool {
	if o != nil && !IsNil(o.ScoreFactors) {
		return true
	}

	return false
}

// SetScoreFactors gets a reference to the given []string and assigns it to the ScoreFactors field.
func (o *DecisionsResponse) SetScoreFactors(v []string) {
	o.ScoreFactors = v
}

// GetScoreRange returns the ScoreRange field value if set, zero value otherwise.
func (o *DecisionsResponse) GetScoreRange() string {
	if o == nil || IsNil(o.ScoreRange) {
		var ret string
		return ret
	}
	return *o.ScoreRange
}

// GetScoreRangeOk returns a tuple with the ScoreRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetScoreRangeOk() (*string, bool) {
	if o == nil || IsNil(o.ScoreRange) {
		return nil, false
	}
	return o.ScoreRange, true
}

// HasScoreRange returns a boolean if a field has been set.
func (o *DecisionsResponse) HasScoreRange() bool {
	if o != nil && !IsNil(o.ScoreRange) {
		return true
	}

	return false
}

// SetScoreRange gets a reference to the given string and assigns it to the ScoreRange field.
func (o *DecisionsResponse) SetScoreRange(v string) {
	o.ScoreRange = &v
}

// GetApplicationToken returns the ApplicationToken field value
func (o *DecisionsResponse) GetApplicationToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationToken
}

// GetApplicationTokenOk returns a tuple with the ApplicationToken field value
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetApplicationTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationToken, true
}

// SetApplicationToken sets field value
func (o *DecisionsResponse) SetApplicationToken(v string) {
	o.ApplicationToken = v
}

// GetDecisionId returns the DecisionId field value
func (o *DecisionsResponse) GetDecisionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DecisionId
}

// GetDecisionIdOk returns a tuple with the DecisionId field value
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetDecisionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DecisionId, true
}

// SetDecisionId sets field value
func (o *DecisionsResponse) SetDecisionId(v string) {
	o.DecisionId = v
}

// GetStatus returns the Status field value
func (o *DecisionsResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DecisionsResponse) SetStatus(v string) {
	o.Status = v
}

// GetSubmittedDateTime returns the SubmittedDateTime field value
func (o *DecisionsResponse) GetSubmittedDateTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.SubmittedDateTime
}

// GetSubmittedDateTimeOk returns a tuple with the SubmittedDateTime field value
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetSubmittedDateTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubmittedDateTime, true
}

// SetSubmittedDateTime sets field value
func (o *DecisionsResponse) SetSubmittedDateTime(v time.Time) {
	o.SubmittedDateTime = v
}

// GetToken returns the Token field value
func (o *DecisionsResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *DecisionsResponse) SetToken(v string) {
	o.Token = v
}

// GetUserToken returns the UserToken field value
func (o *DecisionsResponse) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *DecisionsResponse) GetUserTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *DecisionsResponse) SetUserToken(v string) {
	o.UserToken = v
}

func (o DecisionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DecisionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdverseActionTemplateCode) {
		toSerialize["adverse_action_template_code"] = o.AdverseActionTemplateCode
	}
	if !IsNil(o.CardProductLevel) {
		toSerialize["card_product_level"] = o.CardProductLevel
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["created_date"] = o.CreatedDate
	}
	if !IsNil(o.CreditBureau) {
		toSerialize["credit_bureau"] = o.CreditBureau
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["credit_limit"] = o.CreditLimit
	}
	if !IsNil(o.CreditScore) {
		toSerialize["credit_score"] = o.CreditScore
	}
	if !IsNil(o.CreditScoreDate) {
		toSerialize["credit_score_date"] = o.CreditScoreDate
	}
	if !IsNil(o.DecisionDate) {
		toSerialize["decision_date"] = o.DecisionDate
	}
	if !IsNil(o.DenialReasons) {
		toSerialize["denial_reasons"] = o.DenialReasons
	}
	if !IsNil(o.ExpireDate) {
		toSerialize["expire_date"] = o.ExpireDate
	}
	if !IsNil(o.Margin) {
		toSerialize["margin"] = o.Margin
	}
	if !IsNil(o.PrimeRate) {
		toSerialize["prime_rate"] = o.PrimeRate
	}
	if !IsNil(o.PurchaseApr) {
		toSerialize["purchase_apr"] = o.PurchaseApr
	}
	if !IsNil(o.ReceivedBestRate) {
		toSerialize["received_best_rate"] = o.ReceivedBestRate
	}
	if !IsNil(o.ScoreFactors) {
		toSerialize["score_factors"] = o.ScoreFactors
	}
	if !IsNil(o.ScoreRange) {
		toSerialize["score_range"] = o.ScoreRange
	}
	toSerialize["application_token"] = o.ApplicationToken
	toSerialize["decision_id"] = o.DecisionId
	toSerialize["status"] = o.Status
	toSerialize["submitted_date_time"] = o.SubmittedDateTime
	toSerialize["token"] = o.Token
	toSerialize["user_token"] = o.UserToken
	return toSerialize, nil
}

type NullableDecisionsResponse struct {
	value *DecisionsResponse
	isSet bool
}

func (v NullableDecisionsResponse) Get() *DecisionsResponse {
	return v.value
}

func (v *NullableDecisionsResponse) Set(val *DecisionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDecisionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDecisionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDecisionsResponse(val *DecisionsResponse) *NullableDecisionsResponse {
	return &NullableDecisionsResponse{value: val, isSet: true}
}

func (v NullableDecisionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDecisionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


