/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"fmt"
)

// DelinquencyTransitionTriggerReason Event that triggered an update to the account's delinquency state.
type DelinquencyTransitionTriggerReason string

// List of DelinquencyTransitionTriggerReason
const (
	DELINQUENCYTRANSITIONTRIGGERREASON_PAYMENT DelinquencyTransitionTriggerReason = "PAYMENT"
	DELINQUENCYTRANSITIONTRIGGERREASON_PAYMENT_VOID DelinquencyTransitionTriggerReason = "PAYMENT_VOID"
	DELINQUENCYTRANSITIONTRIGGERREASON_CREDIT DelinquencyTransitionTriggerReason = "CREDIT"
	DELINQUENCYTRANSITIONTRIGGERREASON_MINIMUM_PAYMENT_OVERRIDE DelinquencyTransitionTriggerReason = "MINIMUM_PAYMENT_OVERRIDE"
	DELINQUENCYTRANSITIONTRIGGERREASON_STATEMENT_GENERATION DelinquencyTransitionTriggerReason = "STATEMENT_GENERATION"
	DELINQUENCYTRANSITIONTRIGGERREASON_REAGE DelinquencyTransitionTriggerReason = "REAGE"
)

// All allowed values of DelinquencyTransitionTriggerReason enum
var AllowedDelinquencyTransitionTriggerReasonEnumValues = []DelinquencyTransitionTriggerReason{
	"PAYMENT",
	"PAYMENT_VOID",
	"CREDIT",
	"MINIMUM_PAYMENT_OVERRIDE",
	"STATEMENT_GENERATION",
	"REAGE",
}

func (v *DelinquencyTransitionTriggerReason) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DelinquencyTransitionTriggerReason(value)
	for _, existing := range AllowedDelinquencyTransitionTriggerReasonEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DelinquencyTransitionTriggerReason", value)
}

// NewDelinquencyTransitionTriggerReasonFromValue returns a pointer to a valid DelinquencyTransitionTriggerReason
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDelinquencyTransitionTriggerReasonFromValue(v string) (*DelinquencyTransitionTriggerReason, error) {
	ev := DelinquencyTransitionTriggerReason(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DelinquencyTransitionTriggerReason: valid values are %v", v, AllowedDelinquencyTransitionTriggerReasonEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DelinquencyTransitionTriggerReason) IsValid() bool {
	for _, existing := range AllowedDelinquencyTransitionTriggerReasonEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DelinquencyTransitionTriggerReason value
func (v DelinquencyTransitionTriggerReason) Ptr() *DelinquencyTransitionTriggerReason {
	return &v
}

type NullableDelinquencyTransitionTriggerReason struct {
	value *DelinquencyTransitionTriggerReason
	isSet bool
}

func (v NullableDelinquencyTransitionTriggerReason) Get() *DelinquencyTransitionTriggerReason {
	return v.value
}

func (v *NullableDelinquencyTransitionTriggerReason) Set(val *DelinquencyTransitionTriggerReason) {
	v.value = val
	v.isSet = true
}

func (v NullableDelinquencyTransitionTriggerReason) IsSet() bool {
	return v.isSet
}

func (v *NullableDelinquencyTransitionTriggerReason) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDelinquencyTransitionTriggerReason(val *DelinquencyTransitionTriggerReason) *NullableDelinquencyTransitionTriggerReason {
	return &NullableDelinquencyTransitionTriggerReason{value: val, isSet: true}
}

func (v NullableDelinquencyTransitionTriggerReason) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDelinquencyTransitionTriggerReason) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

