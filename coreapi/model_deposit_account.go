/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the DepositAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepositAccount{}

// DepositAccount struct for DepositAccount
type DepositAccount struct {
	AccountNumber string `json:"account_number"`
	AllowImmediateCredit *bool `json:"allow_immediate_credit,omitempty"`
	BusinessToken *string `json:"business_token,omitempty"`
	RoutingNumber string `json:"routing_number"`
	Token string `json:"token"`
	UserToken *string `json:"user_token,omitempty"`
}

// NewDepositAccount instantiates a new DepositAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepositAccount(accountNumber string, routingNumber string, token string) *DepositAccount {
	this := DepositAccount{}
	this.AccountNumber = accountNumber
	var allowImmediateCredit bool = false
	this.AllowImmediateCredit = &allowImmediateCredit
	this.RoutingNumber = routingNumber
	this.Token = token
	return &this
}

// NewDepositAccountWithDefaults instantiates a new DepositAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositAccountWithDefaults() *DepositAccount {
	this := DepositAccount{}
	var allowImmediateCredit bool = false
	this.AllowImmediateCredit = &allowImmediateCredit
	return &this
}

// GetAccountNumber returns the AccountNumber field value
func (o *DepositAccount) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *DepositAccount) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *DepositAccount) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetAllowImmediateCredit returns the AllowImmediateCredit field value if set, zero value otherwise.
func (o *DepositAccount) GetAllowImmediateCredit() bool {
	if o == nil || IsNil(o.AllowImmediateCredit) {
		var ret bool
		return ret
	}
	return *o.AllowImmediateCredit
}

// GetAllowImmediateCreditOk returns a tuple with the AllowImmediateCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositAccount) GetAllowImmediateCreditOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowImmediateCredit) {
		return nil, false
	}
	return o.AllowImmediateCredit, true
}

// HasAllowImmediateCredit returns a boolean if a field has been set.
func (o *DepositAccount) HasAllowImmediateCredit() bool {
	if o != nil && !IsNil(o.AllowImmediateCredit) {
		return true
	}

	return false
}

// SetAllowImmediateCredit gets a reference to the given bool and assigns it to the AllowImmediateCredit field.
func (o *DepositAccount) SetAllowImmediateCredit(v bool) {
	o.AllowImmediateCredit = &v
}

// GetBusinessToken returns the BusinessToken field value if set, zero value otherwise.
func (o *DepositAccount) GetBusinessToken() string {
	if o == nil || IsNil(o.BusinessToken) {
		var ret string
		return ret
	}
	return *o.BusinessToken
}

// GetBusinessTokenOk returns a tuple with the BusinessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositAccount) GetBusinessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessToken) {
		return nil, false
	}
	return o.BusinessToken, true
}

// HasBusinessToken returns a boolean if a field has been set.
func (o *DepositAccount) HasBusinessToken() bool {
	if o != nil && !IsNil(o.BusinessToken) {
		return true
	}

	return false
}

// SetBusinessToken gets a reference to the given string and assigns it to the BusinessToken field.
func (o *DepositAccount) SetBusinessToken(v string) {
	o.BusinessToken = &v
}

// GetRoutingNumber returns the RoutingNumber field value
func (o *DepositAccount) GetRoutingNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoutingNumber
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value
// and a boolean to check if the value has been set.
func (o *DepositAccount) GetRoutingNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoutingNumber, true
}

// SetRoutingNumber sets field value
func (o *DepositAccount) SetRoutingNumber(v string) {
	o.RoutingNumber = v
}

// GetToken returns the Token field value
func (o *DepositAccount) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *DepositAccount) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *DepositAccount) SetToken(v string) {
	o.Token = v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *DepositAccount) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositAccount) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *DepositAccount) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *DepositAccount) SetUserToken(v string) {
	o.UserToken = &v
}

func (o DepositAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepositAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_number"] = o.AccountNumber
	if !IsNil(o.AllowImmediateCredit) {
		toSerialize["allow_immediate_credit"] = o.AllowImmediateCredit
	}
	if !IsNil(o.BusinessToken) {
		toSerialize["business_token"] = o.BusinessToken
	}
	toSerialize["routing_number"] = o.RoutingNumber
	toSerialize["token"] = o.Token
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	return toSerialize, nil
}

type NullableDepositAccount struct {
	value *DepositAccount
	isSet bool
}

func (v NullableDepositAccount) Get() *DepositAccount {
	return v.value
}

func (v *NullableDepositAccount) Set(val *DepositAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableDepositAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableDepositAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepositAccount(val *DepositAccount) *NullableDepositAccount {
	return &NullableDepositAccount{value: val, isSet: true}
}

func (v NullableDepositAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepositAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


