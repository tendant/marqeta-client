/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the DepositAccountUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepositAccountUpdateRequest{}

// DepositAccountUpdateRequest struct for DepositAccountUpdateRequest
type DepositAccountUpdateRequest struct {
	AllowImmediateCredit *bool `json:"allow_immediate_credit,omitempty"`
}

// NewDepositAccountUpdateRequest instantiates a new DepositAccountUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepositAccountUpdateRequest() *DepositAccountUpdateRequest {
	this := DepositAccountUpdateRequest{}
	var allowImmediateCredit bool = false
	this.AllowImmediateCredit = &allowImmediateCredit
	return &this
}

// NewDepositAccountUpdateRequestWithDefaults instantiates a new DepositAccountUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositAccountUpdateRequestWithDefaults() *DepositAccountUpdateRequest {
	this := DepositAccountUpdateRequest{}
	var allowImmediateCredit bool = false
	this.AllowImmediateCredit = &allowImmediateCredit
	return &this
}

// GetAllowImmediateCredit returns the AllowImmediateCredit field value if set, zero value otherwise.
func (o *DepositAccountUpdateRequest) GetAllowImmediateCredit() bool {
	if o == nil || IsNil(o.AllowImmediateCredit) {
		var ret bool
		return ret
	}
	return *o.AllowImmediateCredit
}

// GetAllowImmediateCreditOk returns a tuple with the AllowImmediateCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositAccountUpdateRequest) GetAllowImmediateCreditOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowImmediateCredit) {
		return nil, false
	}
	return o.AllowImmediateCredit, true
}

// HasAllowImmediateCredit returns a boolean if a field has been set.
func (o *DepositAccountUpdateRequest) HasAllowImmediateCredit() bool {
	if o != nil && !IsNil(o.AllowImmediateCredit) {
		return true
	}

	return false
}

// SetAllowImmediateCredit gets a reference to the given bool and assigns it to the AllowImmediateCredit field.
func (o *DepositAccountUpdateRequest) SetAllowImmediateCredit(v bool) {
	o.AllowImmediateCredit = &v
}

func (o DepositAccountUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepositAccountUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowImmediateCredit) {
		toSerialize["allow_immediate_credit"] = o.AllowImmediateCredit
	}
	return toSerialize, nil
}

type NullableDepositAccountUpdateRequest struct {
	value *DepositAccountUpdateRequest
	isSet bool
}

func (v NullableDepositAccountUpdateRequest) Get() *DepositAccountUpdateRequest {
	return v.value
}

func (v *NullableDepositAccountUpdateRequest) Set(val *DepositAccountUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDepositAccountUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDepositAccountUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepositAccountUpdateRequest(val *DepositAccountUpdateRequest) *NullableDepositAccountUpdateRequest {
	return &NullableDepositAccountUpdateRequest{value: val, isSet: true}
}

func (v NullableDepositAccountUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepositAccountUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


