/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
	"time"
)

// checks if the DigitalWalletApplePayProvisionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DigitalWalletApplePayProvisionResponse{}

// DigitalWalletApplePayProvisionResponse struct for DigitalWalletApplePayProvisionResponse
type DigitalWalletApplePayProvisionResponse struct {
	// Cryptographic one-time passcode conforming to the payment network operator or service provider specifications.
	ActivationData string `json:"activation_data"`
	// Unique identifier of the card resource to use for the provisioning request.
	CardToken string `json:"card_token"`
	// Date and time when the digital wallet provisioning request was created, in UTC.
	CreatedTime time.Time `json:"created_time"`
	// Payload encrypted with a shared key derived from the Apple Public Certificates and the generated ephemeral private key.
	EncryptedPassData string `json:"encrypted_pass_data"`
	// Ephemeral public key used for the provisioning attempt.
	EphemeralPublicKey string `json:"ephemeral_public_key"`
	// Date and time when the digital wallet token provisioning request was last updated, in UTC.
	LastModifiedTime time.Time `json:"last_modified_time"`
}

// NewDigitalWalletApplePayProvisionResponse instantiates a new DigitalWalletApplePayProvisionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDigitalWalletApplePayProvisionResponse(activationData string, cardToken string, createdTime time.Time, encryptedPassData string, ephemeralPublicKey string, lastModifiedTime time.Time) *DigitalWalletApplePayProvisionResponse {
	this := DigitalWalletApplePayProvisionResponse{}
	this.ActivationData = activationData
	this.CardToken = cardToken
	this.CreatedTime = createdTime
	this.EncryptedPassData = encryptedPassData
	this.EphemeralPublicKey = ephemeralPublicKey
	this.LastModifiedTime = lastModifiedTime
	return &this
}

// NewDigitalWalletApplePayProvisionResponseWithDefaults instantiates a new DigitalWalletApplePayProvisionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDigitalWalletApplePayProvisionResponseWithDefaults() *DigitalWalletApplePayProvisionResponse {
	this := DigitalWalletApplePayProvisionResponse{}
	return &this
}

// GetActivationData returns the ActivationData field value
func (o *DigitalWalletApplePayProvisionResponse) GetActivationData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivationData
}

// GetActivationDataOk returns a tuple with the ActivationData field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletApplePayProvisionResponse) GetActivationDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivationData, true
}

// SetActivationData sets field value
func (o *DigitalWalletApplePayProvisionResponse) SetActivationData(v string) {
	o.ActivationData = v
}

// GetCardToken returns the CardToken field value
func (o *DigitalWalletApplePayProvisionResponse) GetCardToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardToken
}

// GetCardTokenOk returns a tuple with the CardToken field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletApplePayProvisionResponse) GetCardTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardToken, true
}

// SetCardToken sets field value
func (o *DigitalWalletApplePayProvisionResponse) SetCardToken(v string) {
	o.CardToken = v
}

// GetCreatedTime returns the CreatedTime field value
func (o *DigitalWalletApplePayProvisionResponse) GetCreatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletApplePayProvisionResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *DigitalWalletApplePayProvisionResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = v
}

// GetEncryptedPassData returns the EncryptedPassData field value
func (o *DigitalWalletApplePayProvisionResponse) GetEncryptedPassData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EncryptedPassData
}

// GetEncryptedPassDataOk returns a tuple with the EncryptedPassData field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletApplePayProvisionResponse) GetEncryptedPassDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncryptedPassData, true
}

// SetEncryptedPassData sets field value
func (o *DigitalWalletApplePayProvisionResponse) SetEncryptedPassData(v string) {
	o.EncryptedPassData = v
}

// GetEphemeralPublicKey returns the EphemeralPublicKey field value
func (o *DigitalWalletApplePayProvisionResponse) GetEphemeralPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EphemeralPublicKey
}

// GetEphemeralPublicKeyOk returns a tuple with the EphemeralPublicKey field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletApplePayProvisionResponse) GetEphemeralPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EphemeralPublicKey, true
}

// SetEphemeralPublicKey sets field value
func (o *DigitalWalletApplePayProvisionResponse) SetEphemeralPublicKey(v string) {
	o.EphemeralPublicKey = v
}

// GetLastModifiedTime returns the LastModifiedTime field value
func (o *DigitalWalletApplePayProvisionResponse) GetLastModifiedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletApplePayProvisionResponse) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifiedTime, true
}

// SetLastModifiedTime sets field value
func (o *DigitalWalletApplePayProvisionResponse) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = v
}

func (o DigitalWalletApplePayProvisionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DigitalWalletApplePayProvisionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["activation_data"] = o.ActivationData
	toSerialize["card_token"] = o.CardToken
	toSerialize["created_time"] = o.CreatedTime
	toSerialize["encrypted_pass_data"] = o.EncryptedPassData
	toSerialize["ephemeral_public_key"] = o.EphemeralPublicKey
	toSerialize["last_modified_time"] = o.LastModifiedTime
	return toSerialize, nil
}

type NullableDigitalWalletApplePayProvisionResponse struct {
	value *DigitalWalletApplePayProvisionResponse
	isSet bool
}

func (v NullableDigitalWalletApplePayProvisionResponse) Get() *DigitalWalletApplePayProvisionResponse {
	return v.value
}

func (v *NullableDigitalWalletApplePayProvisionResponse) Set(val *DigitalWalletApplePayProvisionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDigitalWalletApplePayProvisionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDigitalWalletApplePayProvisionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDigitalWalletApplePayProvisionResponse(val *DigitalWalletApplePayProvisionResponse) *NullableDigitalWalletApplePayProvisionResponse {
	return &NullableDigitalWalletApplePayProvisionResponse{value: val, isSet: true}
}

func (v NullableDigitalWalletApplePayProvisionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDigitalWalletApplePayProvisionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


