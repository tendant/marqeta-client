/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the DigitalWalletXPayProvisionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DigitalWalletXPayProvisionRequest{}

// DigitalWalletXPayProvisionRequest struct for DigitalWalletXPayProvisionRequest
type DigitalWalletXPayProvisionRequest struct {
	// Unique identifier of the card resource to use for the provisioning request.
	CardToken string `json:"card_token"`
	// Unique identifier of the user's XPay device, as provided by XPay during the provisioning process.
	DeviceId string `json:"device_id"`
	// Type of device into which the digital wallet token will be provisioned.
	DeviceType string `json:"device_type"`
	// Version of the application making the provisioning request. Used for debugging and fraud prevention.
	ProvisioningAppVersion string `json:"provisioning_app_version"`
	// Unique numerical identifier of the digital wallet token requestor within the card network. These ID numbers map to `token_requestor_name` field values as follows:  *Mastercard*  * 50110030273 – `APPLE_PAY` * 50120834693 – `ANDROID_PAY` * 50139059239 – `SAMSUNG_PAY`  *Visa*  * 40010030273 – `APPLE_PAY` * 40010075001 – `ANDROID_PAY` * 40010043095 – `SAMSUNG_PAY` * 40010075196 – `MICROSOFT_PAY` * 40010075338 – `VISA_CHECKOUT` * 40010075449 – `FACEBOOK` * 40010075839 – `NETFLIX` * 40010077056 – `FITBIT_PAY` * 40010069887 – `GARMIN_PAY`
	TokenRequestorId string `json:"token_requestor_id"`
	// User's XPay account identifier, as provided by XPay during the provisioning process.
	WalletAccountId string `json:"wallet_account_id"`
}

// NewDigitalWalletXPayProvisionRequest instantiates a new DigitalWalletXPayProvisionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDigitalWalletXPayProvisionRequest(cardToken string, deviceId string, deviceType string, provisioningAppVersion string, tokenRequestorId string, walletAccountId string) *DigitalWalletXPayProvisionRequest {
	this := DigitalWalletXPayProvisionRequest{}
	this.CardToken = cardToken
	this.DeviceId = deviceId
	this.DeviceType = deviceType
	this.ProvisioningAppVersion = provisioningAppVersion
	this.TokenRequestorId = tokenRequestorId
	this.WalletAccountId = walletAccountId
	return &this
}

// NewDigitalWalletXPayProvisionRequestWithDefaults instantiates a new DigitalWalletXPayProvisionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDigitalWalletXPayProvisionRequestWithDefaults() *DigitalWalletXPayProvisionRequest {
	this := DigitalWalletXPayProvisionRequest{}
	return &this
}

// GetCardToken returns the CardToken field value
func (o *DigitalWalletXPayProvisionRequest) GetCardToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardToken
}

// GetCardTokenOk returns a tuple with the CardToken field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletXPayProvisionRequest) GetCardTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardToken, true
}

// SetCardToken sets field value
func (o *DigitalWalletXPayProvisionRequest) SetCardToken(v string) {
	o.CardToken = v
}

// GetDeviceId returns the DeviceId field value
func (o *DigitalWalletXPayProvisionRequest) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletXPayProvisionRequest) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *DigitalWalletXPayProvisionRequest) SetDeviceId(v string) {
	o.DeviceId = v
}

// GetDeviceType returns the DeviceType field value
func (o *DigitalWalletXPayProvisionRequest) GetDeviceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletXPayProvisionRequest) GetDeviceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceType, true
}

// SetDeviceType sets field value
func (o *DigitalWalletXPayProvisionRequest) SetDeviceType(v string) {
	o.DeviceType = v
}

// GetProvisioningAppVersion returns the ProvisioningAppVersion field value
func (o *DigitalWalletXPayProvisionRequest) GetProvisioningAppVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProvisioningAppVersion
}

// GetProvisioningAppVersionOk returns a tuple with the ProvisioningAppVersion field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletXPayProvisionRequest) GetProvisioningAppVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProvisioningAppVersion, true
}

// SetProvisioningAppVersion sets field value
func (o *DigitalWalletXPayProvisionRequest) SetProvisioningAppVersion(v string) {
	o.ProvisioningAppVersion = v
}

// GetTokenRequestorId returns the TokenRequestorId field value
func (o *DigitalWalletXPayProvisionRequest) GetTokenRequestorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenRequestorId
}

// GetTokenRequestorIdOk returns a tuple with the TokenRequestorId field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletXPayProvisionRequest) GetTokenRequestorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenRequestorId, true
}

// SetTokenRequestorId sets field value
func (o *DigitalWalletXPayProvisionRequest) SetTokenRequestorId(v string) {
	o.TokenRequestorId = v
}

// GetWalletAccountId returns the WalletAccountId field value
func (o *DigitalWalletXPayProvisionRequest) GetWalletAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletAccountId
}

// GetWalletAccountIdOk returns a tuple with the WalletAccountId field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletXPayProvisionRequest) GetWalletAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletAccountId, true
}

// SetWalletAccountId sets field value
func (o *DigitalWalletXPayProvisionRequest) SetWalletAccountId(v string) {
	o.WalletAccountId = v
}

func (o DigitalWalletXPayProvisionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DigitalWalletXPayProvisionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["card_token"] = o.CardToken
	toSerialize["device_id"] = o.DeviceId
	toSerialize["device_type"] = o.DeviceType
	toSerialize["provisioning_app_version"] = o.ProvisioningAppVersion
	toSerialize["token_requestor_id"] = o.TokenRequestorId
	toSerialize["wallet_account_id"] = o.WalletAccountId
	return toSerialize, nil
}

type NullableDigitalWalletXPayProvisionRequest struct {
	value *DigitalWalletXPayProvisionRequest
	isSet bool
}

func (v NullableDigitalWalletXPayProvisionRequest) Get() *DigitalWalletXPayProvisionRequest {
	return v.value
}

func (v *NullableDigitalWalletXPayProvisionRequest) Set(val *DigitalWalletXPayProvisionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDigitalWalletXPayProvisionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDigitalWalletXPayProvisionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDigitalWalletXPayProvisionRequest(val *DigitalWalletXPayProvisionRequest) *NullableDigitalWalletXPayProvisionRequest {
	return &NullableDigitalWalletXPayProvisionRequest{value: val, isSet: true}
}

func (v NullableDigitalWalletXPayProvisionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDigitalWalletXPayProvisionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


