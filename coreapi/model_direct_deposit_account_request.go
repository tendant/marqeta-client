/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the DirectDepositAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DirectDepositAccountRequest{}

// DirectDepositAccountRequest struct for DirectDepositAccountRequest
type DirectDepositAccountRequest struct {
	AllowImmediateCredit *bool `json:"allow_immediate_credit,omitempty"`
	// Required if 'user_token' is null
	BusinessToken *string `json:"business_token,omitempty"`
	// Required if account type = Checking
	CustomerDueDiligence []CustomerDueDiligenceRequest `json:"customer_due_diligence,omitempty"`
	Token *string `json:"token,omitempty"`
	Type *string `json:"type,omitempty"`
	// Required if 'business_token' is null
	UserToken *string `json:"user_token,omitempty"`
}

// NewDirectDepositAccountRequest instantiates a new DirectDepositAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectDepositAccountRequest() *DirectDepositAccountRequest {
	this := DirectDepositAccountRequest{}
	var allowImmediateCredit bool = false
	this.AllowImmediateCredit = &allowImmediateCredit
	return &this
}

// NewDirectDepositAccountRequestWithDefaults instantiates a new DirectDepositAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectDepositAccountRequestWithDefaults() *DirectDepositAccountRequest {
	this := DirectDepositAccountRequest{}
	var allowImmediateCredit bool = false
	this.AllowImmediateCredit = &allowImmediateCredit
	return &this
}

// GetAllowImmediateCredit returns the AllowImmediateCredit field value if set, zero value otherwise.
func (o *DirectDepositAccountRequest) GetAllowImmediateCredit() bool {
	if o == nil || IsNil(o.AllowImmediateCredit) {
		var ret bool
		return ret
	}
	return *o.AllowImmediateCredit
}

// GetAllowImmediateCreditOk returns a tuple with the AllowImmediateCredit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositAccountRequest) GetAllowImmediateCreditOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowImmediateCredit) {
		return nil, false
	}
	return o.AllowImmediateCredit, true
}

// HasAllowImmediateCredit returns a boolean if a field has been set.
func (o *DirectDepositAccountRequest) HasAllowImmediateCredit() bool {
	if o != nil && !IsNil(o.AllowImmediateCredit) {
		return true
	}

	return false
}

// SetAllowImmediateCredit gets a reference to the given bool and assigns it to the AllowImmediateCredit field.
func (o *DirectDepositAccountRequest) SetAllowImmediateCredit(v bool) {
	o.AllowImmediateCredit = &v
}

// GetBusinessToken returns the BusinessToken field value if set, zero value otherwise.
func (o *DirectDepositAccountRequest) GetBusinessToken() string {
	if o == nil || IsNil(o.BusinessToken) {
		var ret string
		return ret
	}
	return *o.BusinessToken
}

// GetBusinessTokenOk returns a tuple with the BusinessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositAccountRequest) GetBusinessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessToken) {
		return nil, false
	}
	return o.BusinessToken, true
}

// HasBusinessToken returns a boolean if a field has been set.
func (o *DirectDepositAccountRequest) HasBusinessToken() bool {
	if o != nil && !IsNil(o.BusinessToken) {
		return true
	}

	return false
}

// SetBusinessToken gets a reference to the given string and assigns it to the BusinessToken field.
func (o *DirectDepositAccountRequest) SetBusinessToken(v string) {
	o.BusinessToken = &v
}

// GetCustomerDueDiligence returns the CustomerDueDiligence field value if set, zero value otherwise.
func (o *DirectDepositAccountRequest) GetCustomerDueDiligence() []CustomerDueDiligenceRequest {
	if o == nil || IsNil(o.CustomerDueDiligence) {
		var ret []CustomerDueDiligenceRequest
		return ret
	}
	return o.CustomerDueDiligence
}

// GetCustomerDueDiligenceOk returns a tuple with the CustomerDueDiligence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositAccountRequest) GetCustomerDueDiligenceOk() ([]CustomerDueDiligenceRequest, bool) {
	if o == nil || IsNil(o.CustomerDueDiligence) {
		return nil, false
	}
	return o.CustomerDueDiligence, true
}

// HasCustomerDueDiligence returns a boolean if a field has been set.
func (o *DirectDepositAccountRequest) HasCustomerDueDiligence() bool {
	if o != nil && !IsNil(o.CustomerDueDiligence) {
		return true
	}

	return false
}

// SetCustomerDueDiligence gets a reference to the given []CustomerDueDiligenceRequest and assigns it to the CustomerDueDiligence field.
func (o *DirectDepositAccountRequest) SetCustomerDueDiligence(v []CustomerDueDiligenceRequest) {
	o.CustomerDueDiligence = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *DirectDepositAccountRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositAccountRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *DirectDepositAccountRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *DirectDepositAccountRequest) SetToken(v string) {
	o.Token = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DirectDepositAccountRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositAccountRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DirectDepositAccountRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DirectDepositAccountRequest) SetType(v string) {
	o.Type = &v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *DirectDepositAccountRequest) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositAccountRequest) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *DirectDepositAccountRequest) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *DirectDepositAccountRequest) SetUserToken(v string) {
	o.UserToken = &v
}

func (o DirectDepositAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DirectDepositAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowImmediateCredit) {
		toSerialize["allow_immediate_credit"] = o.AllowImmediateCredit
	}
	if !IsNil(o.BusinessToken) {
		toSerialize["business_token"] = o.BusinessToken
	}
	if !IsNil(o.CustomerDueDiligence) {
		toSerialize["customer_due_diligence"] = o.CustomerDueDiligence
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	return toSerialize, nil
}

type NullableDirectDepositAccountRequest struct {
	value *DirectDepositAccountRequest
	isSet bool
}

func (v NullableDirectDepositAccountRequest) Get() *DirectDepositAccountRequest {
	return v.value
}

func (v *NullableDirectDepositAccountRequest) Set(val *DirectDepositAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectDepositAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectDepositAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectDepositAccountRequest(val *DirectDepositAccountRequest) *NullableDirectDepositAccountRequest {
	return &NullableDirectDepositAccountRequest{value: val, isSet: true}
}

func (v NullableDirectDepositAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectDepositAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


