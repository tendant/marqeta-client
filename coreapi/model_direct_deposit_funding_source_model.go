/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
	"time"
)

// checks if the DirectDepositFundingSourceModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DirectDepositFundingSourceModel{}

// DirectDepositFundingSourceModel struct for DirectDepositFundingSourceModel
type DirectDepositFundingSourceModel struct {
	FundingSourceModel
	Name string `json:"name"`
}

// NewDirectDepositFundingSourceModel instantiates a new DirectDepositFundingSourceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectDepositFundingSourceModel(name string, active bool, createdTime time.Time, isDefaultAccount bool, lastModifiedTime time.Time, token string, type_ string) *DirectDepositFundingSourceModel {
	this := DirectDepositFundingSourceModel{}
	this.Active = active
	this.CreatedTime = createdTime
	this.IsDefaultAccount = isDefaultAccount
	this.LastModifiedTime = lastModifiedTime
	this.Token = token
	this.Type = type_
	this.Name = name
	return &this
}

// NewDirectDepositFundingSourceModelWithDefaults instantiates a new DirectDepositFundingSourceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectDepositFundingSourceModelWithDefaults() *DirectDepositFundingSourceModel {
	this := DirectDepositFundingSourceModel{}
	return &this
}

// GetName returns the Name field value
func (o *DirectDepositFundingSourceModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DirectDepositFundingSourceModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DirectDepositFundingSourceModel) SetName(v string) {
	o.Name = v
}

func (o DirectDepositFundingSourceModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DirectDepositFundingSourceModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedFundingSourceModel, errFundingSourceModel := json.Marshal(o.FundingSourceModel)
	if errFundingSourceModel != nil {
		return map[string]interface{}{}, errFundingSourceModel
	}
	errFundingSourceModel = json.Unmarshal([]byte(serializedFundingSourceModel), &toSerialize)
	if errFundingSourceModel != nil {
		return map[string]interface{}{}, errFundingSourceModel
	}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableDirectDepositFundingSourceModel struct {
	value *DirectDepositFundingSourceModel
	isSet bool
}

func (v NullableDirectDepositFundingSourceModel) Get() *DirectDepositFundingSourceModel {
	return v.value
}

func (v *NullableDirectDepositFundingSourceModel) Set(val *DirectDepositFundingSourceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectDepositFundingSourceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectDepositFundingSourceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectDepositFundingSourceModel(val *DirectDepositFundingSourceModel) *NullableDirectDepositFundingSourceModel {
	return &NullableDirectDepositFundingSourceModel{value: val, isSet: true}
}

func (v NullableDirectDepositFundingSourceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectDepositFundingSourceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


