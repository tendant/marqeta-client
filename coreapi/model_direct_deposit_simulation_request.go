/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the DirectDepositSimulationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DirectDepositSimulationRequest{}

// DirectDepositSimulationRequest struct for DirectDepositSimulationRequest
type DirectDepositSimulationRequest struct {
	// The account number of the user to debit or credit.
	AccountNumber string `json:"account_number"`
	// Amount of the transaction.
	Amount float32 `json:"amount"`
	// Company-specific data provided by the direct deposit originator.
	CompanyDiscretionaryData *string `json:"company_discretionary_data,omitempty"`
	// Company-specific data provided by the direct deposit originator.
	CompanyEntryDescription *string `json:"company_entry_description,omitempty"`
	// Alphanumeric code that identifies the direct deposit originator.
	CompanyIdentification *string `json:"company_identification,omitempty"`
	// Name of the direct deposit originator.
	CompanyName *string `json:"company_name,omitempty"`
	// Indicates whether the transaction is eligible for early pay.
	EarlyPayEligible *bool `json:"earlyPayEligible,omitempty"`
	// Accounting number by which the recipient is known to the direct deposit originator.
	IndividualIdentificationNumber *string `json:"individual_identification_number,omitempty"`
	// Identity of the direct deposit recipient.
	IndividualName *string `json:"individual_name,omitempty"`
	// Date when the credit or debit is applied.
	SettlementDate time.Time `json:"settlement_date"`
	// Three-letter code identifying the type of entry.
	StandardEntryClassCode *string `json:"standard_entry_class_code,omitempty"`
	// Unique identifier of this direct deposit transition. If you do not include a token, the system generates one automatically. This token is used in other API calls, so rather than let the system generate a string, enter a string that you can remember. This value cannot be updated.
	Token *string `json:"token,omitempty"`
	// Whether funds are being debited from or credited to the account.
	Type *string `json:"type,omitempty"`
}

// NewDirectDepositSimulationRequest instantiates a new DirectDepositSimulationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectDepositSimulationRequest(accountNumber string, amount float32, settlementDate time.Time) *DirectDepositSimulationRequest {
	this := DirectDepositSimulationRequest{}
	this.AccountNumber = accountNumber
	this.Amount = amount
	var earlyPayEligible bool = false
	this.EarlyPayEligible = &earlyPayEligible
	this.SettlementDate = settlementDate
	return &this
}

// NewDirectDepositSimulationRequestWithDefaults instantiates a new DirectDepositSimulationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectDepositSimulationRequestWithDefaults() *DirectDepositSimulationRequest {
	this := DirectDepositSimulationRequest{}
	var earlyPayEligible bool = false
	this.EarlyPayEligible = &earlyPayEligible
	return &this
}

// GetAccountNumber returns the AccountNumber field value
func (o *DirectDepositSimulationRequest) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *DirectDepositSimulationRequest) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetAmount returns the Amount field value
func (o *DirectDepositSimulationRequest) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *DirectDepositSimulationRequest) SetAmount(v float32) {
	o.Amount = v
}

// GetCompanyDiscretionaryData returns the CompanyDiscretionaryData field value if set, zero value otherwise.
func (o *DirectDepositSimulationRequest) GetCompanyDiscretionaryData() string {
	if o == nil || IsNil(o.CompanyDiscretionaryData) {
		var ret string
		return ret
	}
	return *o.CompanyDiscretionaryData
}

// GetCompanyDiscretionaryDataOk returns a tuple with the CompanyDiscretionaryData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetCompanyDiscretionaryDataOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyDiscretionaryData) {
		return nil, false
	}
	return o.CompanyDiscretionaryData, true
}

// HasCompanyDiscretionaryData returns a boolean if a field has been set.
func (o *DirectDepositSimulationRequest) HasCompanyDiscretionaryData() bool {
	if o != nil && !IsNil(o.CompanyDiscretionaryData) {
		return true
	}

	return false
}

// SetCompanyDiscretionaryData gets a reference to the given string and assigns it to the CompanyDiscretionaryData field.
func (o *DirectDepositSimulationRequest) SetCompanyDiscretionaryData(v string) {
	o.CompanyDiscretionaryData = &v
}

// GetCompanyEntryDescription returns the CompanyEntryDescription field value if set, zero value otherwise.
func (o *DirectDepositSimulationRequest) GetCompanyEntryDescription() string {
	if o == nil || IsNil(o.CompanyEntryDescription) {
		var ret string
		return ret
	}
	return *o.CompanyEntryDescription
}

// GetCompanyEntryDescriptionOk returns a tuple with the CompanyEntryDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetCompanyEntryDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyEntryDescription) {
		return nil, false
	}
	return o.CompanyEntryDescription, true
}

// HasCompanyEntryDescription returns a boolean if a field has been set.
func (o *DirectDepositSimulationRequest) HasCompanyEntryDescription() bool {
	if o != nil && !IsNil(o.CompanyEntryDescription) {
		return true
	}

	return false
}

// SetCompanyEntryDescription gets a reference to the given string and assigns it to the CompanyEntryDescription field.
func (o *DirectDepositSimulationRequest) SetCompanyEntryDescription(v string) {
	o.CompanyEntryDescription = &v
}

// GetCompanyIdentification returns the CompanyIdentification field value if set, zero value otherwise.
func (o *DirectDepositSimulationRequest) GetCompanyIdentification() string {
	if o == nil || IsNil(o.CompanyIdentification) {
		var ret string
		return ret
	}
	return *o.CompanyIdentification
}

// GetCompanyIdentificationOk returns a tuple with the CompanyIdentification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetCompanyIdentificationOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyIdentification) {
		return nil, false
	}
	return o.CompanyIdentification, true
}

// HasCompanyIdentification returns a boolean if a field has been set.
func (o *DirectDepositSimulationRequest) HasCompanyIdentification() bool {
	if o != nil && !IsNil(o.CompanyIdentification) {
		return true
	}

	return false
}

// SetCompanyIdentification gets a reference to the given string and assigns it to the CompanyIdentification field.
func (o *DirectDepositSimulationRequest) SetCompanyIdentification(v string) {
	o.CompanyIdentification = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *DirectDepositSimulationRequest) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *DirectDepositSimulationRequest) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *DirectDepositSimulationRequest) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetEarlyPayEligible returns the EarlyPayEligible field value if set, zero value otherwise.
func (o *DirectDepositSimulationRequest) GetEarlyPayEligible() bool {
	if o == nil || IsNil(o.EarlyPayEligible) {
		var ret bool
		return ret
	}
	return *o.EarlyPayEligible
}

// GetEarlyPayEligibleOk returns a tuple with the EarlyPayEligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetEarlyPayEligibleOk() (*bool, bool) {
	if o == nil || IsNil(o.EarlyPayEligible) {
		return nil, false
	}
	return o.EarlyPayEligible, true
}

// HasEarlyPayEligible returns a boolean if a field has been set.
func (o *DirectDepositSimulationRequest) HasEarlyPayEligible() bool {
	if o != nil && !IsNil(o.EarlyPayEligible) {
		return true
	}

	return false
}

// SetEarlyPayEligible gets a reference to the given bool and assigns it to the EarlyPayEligible field.
func (o *DirectDepositSimulationRequest) SetEarlyPayEligible(v bool) {
	o.EarlyPayEligible = &v
}

// GetIndividualIdentificationNumber returns the IndividualIdentificationNumber field value if set, zero value otherwise.
func (o *DirectDepositSimulationRequest) GetIndividualIdentificationNumber() string {
	if o == nil || IsNil(o.IndividualIdentificationNumber) {
		var ret string
		return ret
	}
	return *o.IndividualIdentificationNumber
}

// GetIndividualIdentificationNumberOk returns a tuple with the IndividualIdentificationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetIndividualIdentificationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.IndividualIdentificationNumber) {
		return nil, false
	}
	return o.IndividualIdentificationNumber, true
}

// HasIndividualIdentificationNumber returns a boolean if a field has been set.
func (o *DirectDepositSimulationRequest) HasIndividualIdentificationNumber() bool {
	if o != nil && !IsNil(o.IndividualIdentificationNumber) {
		return true
	}

	return false
}

// SetIndividualIdentificationNumber gets a reference to the given string and assigns it to the IndividualIdentificationNumber field.
func (o *DirectDepositSimulationRequest) SetIndividualIdentificationNumber(v string) {
	o.IndividualIdentificationNumber = &v
}

// GetIndividualName returns the IndividualName field value if set, zero value otherwise.
func (o *DirectDepositSimulationRequest) GetIndividualName() string {
	if o == nil || IsNil(o.IndividualName) {
		var ret string
		return ret
	}
	return *o.IndividualName
}

// GetIndividualNameOk returns a tuple with the IndividualName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetIndividualNameOk() (*string, bool) {
	if o == nil || IsNil(o.IndividualName) {
		return nil, false
	}
	return o.IndividualName, true
}

// HasIndividualName returns a boolean if a field has been set.
func (o *DirectDepositSimulationRequest) HasIndividualName() bool {
	if o != nil && !IsNil(o.IndividualName) {
		return true
	}

	return false
}

// SetIndividualName gets a reference to the given string and assigns it to the IndividualName field.
func (o *DirectDepositSimulationRequest) SetIndividualName(v string) {
	o.IndividualName = &v
}

// GetSettlementDate returns the SettlementDate field value
func (o *DirectDepositSimulationRequest) GetSettlementDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.SettlementDate
}

// GetSettlementDateOk returns a tuple with the SettlementDate field value
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetSettlementDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SettlementDate, true
}

// SetSettlementDate sets field value
func (o *DirectDepositSimulationRequest) SetSettlementDate(v time.Time) {
	o.SettlementDate = v
}

// GetStandardEntryClassCode returns the StandardEntryClassCode field value if set, zero value otherwise.
func (o *DirectDepositSimulationRequest) GetStandardEntryClassCode() string {
	if o == nil || IsNil(o.StandardEntryClassCode) {
		var ret string
		return ret
	}
	return *o.StandardEntryClassCode
}

// GetStandardEntryClassCodeOk returns a tuple with the StandardEntryClassCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetStandardEntryClassCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StandardEntryClassCode) {
		return nil, false
	}
	return o.StandardEntryClassCode, true
}

// HasStandardEntryClassCode returns a boolean if a field has been set.
func (o *DirectDepositSimulationRequest) HasStandardEntryClassCode() bool {
	if o != nil && !IsNil(o.StandardEntryClassCode) {
		return true
	}

	return false
}

// SetStandardEntryClassCode gets a reference to the given string and assigns it to the StandardEntryClassCode field.
func (o *DirectDepositSimulationRequest) SetStandardEntryClassCode(v string) {
	o.StandardEntryClassCode = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *DirectDepositSimulationRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *DirectDepositSimulationRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *DirectDepositSimulationRequest) SetToken(v string) {
	o.Token = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DirectDepositSimulationRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositSimulationRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DirectDepositSimulationRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DirectDepositSimulationRequest) SetType(v string) {
	o.Type = &v
}

func (o DirectDepositSimulationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DirectDepositSimulationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_number"] = o.AccountNumber
	toSerialize["amount"] = o.Amount
	if !IsNil(o.CompanyDiscretionaryData) {
		toSerialize["company_discretionary_data"] = o.CompanyDiscretionaryData
	}
	if !IsNil(o.CompanyEntryDescription) {
		toSerialize["company_entry_description"] = o.CompanyEntryDescription
	}
	if !IsNil(o.CompanyIdentification) {
		toSerialize["company_identification"] = o.CompanyIdentification
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.EarlyPayEligible) {
		toSerialize["earlyPayEligible"] = o.EarlyPayEligible
	}
	if !IsNil(o.IndividualIdentificationNumber) {
		toSerialize["individual_identification_number"] = o.IndividualIdentificationNumber
	}
	if !IsNil(o.IndividualName) {
		toSerialize["individual_name"] = o.IndividualName
	}
	toSerialize["settlement_date"] = o.SettlementDate
	if !IsNil(o.StandardEntryClassCode) {
		toSerialize["standard_entry_class_code"] = o.StandardEntryClassCode
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableDirectDepositSimulationRequest struct {
	value *DirectDepositSimulationRequest
	isSet bool
}

func (v NullableDirectDepositSimulationRequest) Get() *DirectDepositSimulationRequest {
	return v.value
}

func (v *NullableDirectDepositSimulationRequest) Set(val *DirectDepositSimulationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectDepositSimulationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectDepositSimulationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectDepositSimulationRequest(val *DirectDepositSimulationRequest) *NullableDirectDepositSimulationRequest {
	return &NullableDirectDepositSimulationRequest{value: val, isSet: true}
}

func (v NullableDirectDepositSimulationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectDepositSimulationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


