/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the DirectDepositTransitionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DirectDepositTransitionRequest{}

// DirectDepositTransitionRequest struct for DirectDepositTransitionRequest
type DirectDepositTransitionRequest struct {
	Channel string `json:"channel"`
	DirectDepositToken string `json:"direct_deposit_token"`
	IdempotentHash *string `json:"idempotentHash,omitempty"`
	Reason string `json:"reason"`
	ReasonCode *string `json:"reason_code,omitempty"`
	State string `json:"state"`
	Token *string `json:"token,omitempty"`
}

// NewDirectDepositTransitionRequest instantiates a new DirectDepositTransitionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectDepositTransitionRequest(channel string, directDepositToken string, reason string, state string) *DirectDepositTransitionRequest {
	this := DirectDepositTransitionRequest{}
	this.Channel = channel
	this.DirectDepositToken = directDepositToken
	this.Reason = reason
	this.State = state
	return &this
}

// NewDirectDepositTransitionRequestWithDefaults instantiates a new DirectDepositTransitionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectDepositTransitionRequestWithDefaults() *DirectDepositTransitionRequest {
	this := DirectDepositTransitionRequest{}
	return &this
}

// GetChannel returns the Channel field value
func (o *DirectDepositTransitionRequest) GetChannel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionRequest) GetChannelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *DirectDepositTransitionRequest) SetChannel(v string) {
	o.Channel = v
}

// GetDirectDepositToken returns the DirectDepositToken field value
func (o *DirectDepositTransitionRequest) GetDirectDepositToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DirectDepositToken
}

// GetDirectDepositTokenOk returns a tuple with the DirectDepositToken field value
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionRequest) GetDirectDepositTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DirectDepositToken, true
}

// SetDirectDepositToken sets field value
func (o *DirectDepositTransitionRequest) SetDirectDepositToken(v string) {
	o.DirectDepositToken = v
}

// GetIdempotentHash returns the IdempotentHash field value if set, zero value otherwise.
func (o *DirectDepositTransitionRequest) GetIdempotentHash() string {
	if o == nil || IsNil(o.IdempotentHash) {
		var ret string
		return ret
	}
	return *o.IdempotentHash
}

// GetIdempotentHashOk returns a tuple with the IdempotentHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionRequest) GetIdempotentHashOk() (*string, bool) {
	if o == nil || IsNil(o.IdempotentHash) {
		return nil, false
	}
	return o.IdempotentHash, true
}

// HasIdempotentHash returns a boolean if a field has been set.
func (o *DirectDepositTransitionRequest) HasIdempotentHash() bool {
	if o != nil && !IsNil(o.IdempotentHash) {
		return true
	}

	return false
}

// SetIdempotentHash gets a reference to the given string and assigns it to the IdempotentHash field.
func (o *DirectDepositTransitionRequest) SetIdempotentHash(v string) {
	o.IdempotentHash = &v
}

// GetReason returns the Reason field value
func (o *DirectDepositTransitionRequest) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionRequest) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *DirectDepositTransitionRequest) SetReason(v string) {
	o.Reason = v
}

// GetReasonCode returns the ReasonCode field value if set, zero value otherwise.
func (o *DirectDepositTransitionRequest) GetReasonCode() string {
	if o == nil || IsNil(o.ReasonCode) {
		var ret string
		return ret
	}
	return *o.ReasonCode
}

// GetReasonCodeOk returns a tuple with the ReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionRequest) GetReasonCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonCode) {
		return nil, false
	}
	return o.ReasonCode, true
}

// HasReasonCode returns a boolean if a field has been set.
func (o *DirectDepositTransitionRequest) HasReasonCode() bool {
	if o != nil && !IsNil(o.ReasonCode) {
		return true
	}

	return false
}

// SetReasonCode gets a reference to the given string and assigns it to the ReasonCode field.
func (o *DirectDepositTransitionRequest) SetReasonCode(v string) {
	o.ReasonCode = &v
}

// GetState returns the State field value
func (o *DirectDepositTransitionRequest) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionRequest) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *DirectDepositTransitionRequest) SetState(v string) {
	o.State = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *DirectDepositTransitionRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *DirectDepositTransitionRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *DirectDepositTransitionRequest) SetToken(v string) {
	o.Token = &v
}

func (o DirectDepositTransitionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DirectDepositTransitionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["channel"] = o.Channel
	toSerialize["direct_deposit_token"] = o.DirectDepositToken
	if !IsNil(o.IdempotentHash) {
		toSerialize["idempotentHash"] = o.IdempotentHash
	}
	toSerialize["reason"] = o.Reason
	if !IsNil(o.ReasonCode) {
		toSerialize["reason_code"] = o.ReasonCode
	}
	toSerialize["state"] = o.State
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableDirectDepositTransitionRequest struct {
	value *DirectDepositTransitionRequest
	isSet bool
}

func (v NullableDirectDepositTransitionRequest) Get() *DirectDepositTransitionRequest {
	return v.value
}

func (v *NullableDirectDepositTransitionRequest) Set(val *DirectDepositTransitionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectDepositTransitionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectDepositTransitionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectDepositTransitionRequest(val *DirectDepositTransitionRequest) *NullableDirectDepositTransitionRequest {
	return &NullableDirectDepositTransitionRequest{value: val, isSet: true}
}

func (v NullableDirectDepositTransitionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectDepositTransitionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


