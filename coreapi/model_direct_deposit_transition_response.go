/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the DirectDepositTransitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DirectDepositTransitionResponse{}

// DirectDepositTransitionResponse struct for DirectDepositTransitionResponse
type DirectDepositTransitionResponse struct {
	Channel *string `json:"channel,omitempty"`
	CreatedTime *time.Time `json:"created_time,omitempty"`
	DirectDepositAccountToken *string `json:"direct_deposit_account_token,omitempty"`
	DirectDepositToken *string `json:"direct_deposit_token,omitempty"`
	Reason *string `json:"reason,omitempty"`
	ReasonCode *string `json:"reason_code,omitempty"`
	State *string `json:"state,omitempty"`
	Token *string `json:"token,omitempty"`
	TransactionToken *string `json:"transaction_token,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewDirectDepositTransitionResponse instantiates a new DirectDepositTransitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectDepositTransitionResponse() *DirectDepositTransitionResponse {
	this := DirectDepositTransitionResponse{}
	return &this
}

// NewDirectDepositTransitionResponseWithDefaults instantiates a new DirectDepositTransitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectDepositTransitionResponseWithDefaults() *DirectDepositTransitionResponse {
	this := DirectDepositTransitionResponse{}
	return &this
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *DirectDepositTransitionResponse) GetChannel() string {
	if o == nil || IsNil(o.Channel) {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionResponse) GetChannelOk() (*string, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *DirectDepositTransitionResponse) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *DirectDepositTransitionResponse) SetChannel(v string) {
	o.Channel = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *DirectDepositTransitionResponse) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *DirectDepositTransitionResponse) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *DirectDepositTransitionResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetDirectDepositAccountToken returns the DirectDepositAccountToken field value if set, zero value otherwise.
func (o *DirectDepositTransitionResponse) GetDirectDepositAccountToken() string {
	if o == nil || IsNil(o.DirectDepositAccountToken) {
		var ret string
		return ret
	}
	return *o.DirectDepositAccountToken
}

// GetDirectDepositAccountTokenOk returns a tuple with the DirectDepositAccountToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionResponse) GetDirectDepositAccountTokenOk() (*string, bool) {
	if o == nil || IsNil(o.DirectDepositAccountToken) {
		return nil, false
	}
	return o.DirectDepositAccountToken, true
}

// HasDirectDepositAccountToken returns a boolean if a field has been set.
func (o *DirectDepositTransitionResponse) HasDirectDepositAccountToken() bool {
	if o != nil && !IsNil(o.DirectDepositAccountToken) {
		return true
	}

	return false
}

// SetDirectDepositAccountToken gets a reference to the given string and assigns it to the DirectDepositAccountToken field.
func (o *DirectDepositTransitionResponse) SetDirectDepositAccountToken(v string) {
	o.DirectDepositAccountToken = &v
}

// GetDirectDepositToken returns the DirectDepositToken field value if set, zero value otherwise.
func (o *DirectDepositTransitionResponse) GetDirectDepositToken() string {
	if o == nil || IsNil(o.DirectDepositToken) {
		var ret string
		return ret
	}
	return *o.DirectDepositToken
}

// GetDirectDepositTokenOk returns a tuple with the DirectDepositToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionResponse) GetDirectDepositTokenOk() (*string, bool) {
	if o == nil || IsNil(o.DirectDepositToken) {
		return nil, false
	}
	return o.DirectDepositToken, true
}

// HasDirectDepositToken returns a boolean if a field has been set.
func (o *DirectDepositTransitionResponse) HasDirectDepositToken() bool {
	if o != nil && !IsNil(o.DirectDepositToken) {
		return true
	}

	return false
}

// SetDirectDepositToken gets a reference to the given string and assigns it to the DirectDepositToken field.
func (o *DirectDepositTransitionResponse) SetDirectDepositToken(v string) {
	o.DirectDepositToken = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *DirectDepositTransitionResponse) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionResponse) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *DirectDepositTransitionResponse) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *DirectDepositTransitionResponse) SetReason(v string) {
	o.Reason = &v
}

// GetReasonCode returns the ReasonCode field value if set, zero value otherwise.
func (o *DirectDepositTransitionResponse) GetReasonCode() string {
	if o == nil || IsNil(o.ReasonCode) {
		var ret string
		return ret
	}
	return *o.ReasonCode
}

// GetReasonCodeOk returns a tuple with the ReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionResponse) GetReasonCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonCode) {
		return nil, false
	}
	return o.ReasonCode, true
}

// HasReasonCode returns a boolean if a field has been set.
func (o *DirectDepositTransitionResponse) HasReasonCode() bool {
	if o != nil && !IsNil(o.ReasonCode) {
		return true
	}

	return false
}

// SetReasonCode gets a reference to the given string and assigns it to the ReasonCode field.
func (o *DirectDepositTransitionResponse) SetReasonCode(v string) {
	o.ReasonCode = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *DirectDepositTransitionResponse) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionResponse) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *DirectDepositTransitionResponse) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *DirectDepositTransitionResponse) SetState(v string) {
	o.State = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *DirectDepositTransitionResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *DirectDepositTransitionResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *DirectDepositTransitionResponse) SetToken(v string) {
	o.Token = &v
}

// GetTransactionToken returns the TransactionToken field value if set, zero value otherwise.
func (o *DirectDepositTransitionResponse) GetTransactionToken() string {
	if o == nil || IsNil(o.TransactionToken) {
		var ret string
		return ret
	}
	return *o.TransactionToken
}

// GetTransactionTokenOk returns a tuple with the TransactionToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionResponse) GetTransactionTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionToken) {
		return nil, false
	}
	return o.TransactionToken, true
}

// HasTransactionToken returns a boolean if a field has been set.
func (o *DirectDepositTransitionResponse) HasTransactionToken() bool {
	if o != nil && !IsNil(o.TransactionToken) {
		return true
	}

	return false
}

// SetTransactionToken gets a reference to the given string and assigns it to the TransactionToken field.
func (o *DirectDepositTransitionResponse) SetTransactionToken(v string) {
	o.TransactionToken = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DirectDepositTransitionResponse) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDepositTransitionResponse) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DirectDepositTransitionResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DirectDepositTransitionResponse) SetType(v string) {
	o.Type = &v
}

func (o DirectDepositTransitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DirectDepositTransitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.DirectDepositAccountToken) {
		toSerialize["direct_deposit_account_token"] = o.DirectDepositAccountToken
	}
	if !IsNil(o.DirectDepositToken) {
		toSerialize["direct_deposit_token"] = o.DirectDepositToken
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.ReasonCode) {
		toSerialize["reason_code"] = o.ReasonCode
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.TransactionToken) {
		toSerialize["transaction_token"] = o.TransactionToken
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableDirectDepositTransitionResponse struct {
	value *DirectDepositTransitionResponse
	isSet bool
}

func (v NullableDirectDepositTransitionResponse) Get() *DirectDepositTransitionResponse {
	return v.value
}

func (v *NullableDirectDepositTransitionResponse) Set(val *DirectDepositTransitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectDepositTransitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectDepositTransitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectDepositTransitionResponse(val *DirectDepositTransitionResponse) *NullableDirectDepositTransitionResponse {
	return &NullableDirectDepositTransitionResponse{value: val, isSet: true}
}

func (v NullableDirectDepositTransitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectDepositTransitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


