/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the FeeAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeeAttributes{}

// FeeAttributes Describes the attributes of a fee.
type FeeAttributes struct {
	// Describes the reason for the fee.
	Reason *string `json:"reason,omitempty"`
	// Describes the region in which the fee is assessed.
	Region *string `json:"region,omitempty"`
	// Describes the status of the fee.
	Status *string `json:"status,omitempty"`
	// Specifies the transaction type in which the fee was assessed.
	TransactionType *string `json:"transaction_type,omitempty"`
}

// NewFeeAttributes instantiates a new FeeAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeeAttributes() *FeeAttributes {
	this := FeeAttributes{}
	return &this
}

// NewFeeAttributesWithDefaults instantiates a new FeeAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeAttributesWithDefaults() *FeeAttributes {
	this := FeeAttributes{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *FeeAttributes) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeAttributes) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *FeeAttributes) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *FeeAttributes) SetReason(v string) {
	o.Reason = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *FeeAttributes) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeAttributes) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *FeeAttributes) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *FeeAttributes) SetRegion(v string) {
	o.Region = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FeeAttributes) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeAttributes) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FeeAttributes) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FeeAttributes) SetStatus(v string) {
	o.Status = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *FeeAttributes) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeAttributes) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *FeeAttributes) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *FeeAttributes) SetTransactionType(v string) {
	o.TransactionType = &v
}

func (o FeeAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeeAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transaction_type"] = o.TransactionType
	}
	return toSerialize, nil
}

type NullableFeeAttributes struct {
	value *FeeAttributes
	isSet bool
}

func (v NullableFeeAttributes) Get() *FeeAttributes {
	return v.value
}

func (v *NullableFeeAttributes) Set(val *FeeAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableFeeAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableFeeAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeeAttributes(val *FeeAttributes) *NullableFeeAttributes {
	return &NullableFeeAttributes{value: val, isSet: true}
}

func (v NullableFeeAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeeAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


