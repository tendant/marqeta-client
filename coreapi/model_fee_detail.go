/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the FeeDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeeDetail{}

// FeeDetail struct for FeeDetail
type FeeDetail struct {
	Fee Fee `json:"fee"`
	// Additional text that describes the fee transfer.
	Memo *string `json:"memo,omitempty"`
	// Descriptive metadata about the fee.
	Tags *string `json:"tags,omitempty"`
	// Unique identifier of the fee.
	Token string `json:"token"`
	// Unique identifier of the fee transaction.
	TransactionToken string `json:"transaction_token"`
}

// NewFeeDetail instantiates a new FeeDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeeDetail(fee Fee, token string, transactionToken string) *FeeDetail {
	this := FeeDetail{}
	this.Fee = fee
	this.Token = token
	this.TransactionToken = transactionToken
	return &this
}

// NewFeeDetailWithDefaults instantiates a new FeeDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeDetailWithDefaults() *FeeDetail {
	this := FeeDetail{}
	return &this
}

// GetFee returns the Fee field value
func (o *FeeDetail) GetFee() Fee {
	if o == nil {
		var ret Fee
		return ret
	}

	return o.Fee
}

// GetFeeOk returns a tuple with the Fee field value
// and a boolean to check if the value has been set.
func (o *FeeDetail) GetFeeOk() (*Fee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fee, true
}

// SetFee sets field value
func (o *FeeDetail) SetFee(v Fee) {
	o.Fee = v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *FeeDetail) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeDetail) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *FeeDetail) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *FeeDetail) SetMemo(v string) {
	o.Memo = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FeeDetail) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeDetail) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FeeDetail) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *FeeDetail) SetTags(v string) {
	o.Tags = &v
}

// GetToken returns the Token field value
func (o *FeeDetail) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *FeeDetail) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *FeeDetail) SetToken(v string) {
	o.Token = v
}

// GetTransactionToken returns the TransactionToken field value
func (o *FeeDetail) GetTransactionToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionToken
}

// GetTransactionTokenOk returns a tuple with the TransactionToken field value
// and a boolean to check if the value has been set.
func (o *FeeDetail) GetTransactionTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionToken, true
}

// SetTransactionToken sets field value
func (o *FeeDetail) SetTransactionToken(v string) {
	o.TransactionToken = v
}

func (o FeeDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeeDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fee"] = o.Fee
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["token"] = o.Token
	toSerialize["transaction_token"] = o.TransactionToken
	return toSerialize, nil
}

type NullableFeeDetail struct {
	value *FeeDetail
	isSet bool
}

func (v NullableFeeDetail) Get() *FeeDetail {
	return v.value
}

func (v *NullableFeeDetail) Set(val *FeeDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableFeeDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableFeeDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeeDetail(val *FeeDetail) *NullableFeeDetail {
	return &NullableFeeDetail{value: val, isSet: true}
}

func (v NullableFeeDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeeDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


