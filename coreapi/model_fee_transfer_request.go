/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the FeeTransferRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeeTransferRequest{}

// FeeTransferRequest struct for FeeTransferRequest
type FeeTransferRequest struct {
	// Specifies the business account holder to which the fee applies.  Pass either `business_token` or `user_token`, not both.
	BusinessToken string `json:"business_token"`
	// Contains attributes that define characteristics of one or more fees.
	Fees []FeeModel `json:"fees"`
	// Metadata about the transfer.
	Tags *string `json:"tags,omitempty"`
	// Unique identifier of the fee transfer.  If you do not include a token, the system will generate one automatically. This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember. This value cannot be updated.
	Token *string `json:"token,omitempty"`
	// Specifies the user account holder to which the fee applies.  Pass either `user_token` or `business_token`, not both.
	UserToken string `json:"user_token"`
}

// NewFeeTransferRequest instantiates a new FeeTransferRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeeTransferRequest(businessToken string, fees []FeeModel, userToken string) *FeeTransferRequest {
	this := FeeTransferRequest{}
	this.BusinessToken = businessToken
	this.Fees = fees
	this.UserToken = userToken
	return &this
}

// NewFeeTransferRequestWithDefaults instantiates a new FeeTransferRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeTransferRequestWithDefaults() *FeeTransferRequest {
	this := FeeTransferRequest{}
	return &this
}

// GetBusinessToken returns the BusinessToken field value
func (o *FeeTransferRequest) GetBusinessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BusinessToken
}

// GetBusinessTokenOk returns a tuple with the BusinessToken field value
// and a boolean to check if the value has been set.
func (o *FeeTransferRequest) GetBusinessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BusinessToken, true
}

// SetBusinessToken sets field value
func (o *FeeTransferRequest) SetBusinessToken(v string) {
	o.BusinessToken = v
}

// GetFees returns the Fees field value
func (o *FeeTransferRequest) GetFees() []FeeModel {
	if o == nil {
		var ret []FeeModel
		return ret
	}

	return o.Fees
}

// GetFeesOk returns a tuple with the Fees field value
// and a boolean to check if the value has been set.
func (o *FeeTransferRequest) GetFeesOk() ([]FeeModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fees, true
}

// SetFees sets field value
func (o *FeeTransferRequest) SetFees(v []FeeModel) {
	o.Fees = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FeeTransferRequest) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeTransferRequest) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FeeTransferRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *FeeTransferRequest) SetTags(v string) {
	o.Tags = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *FeeTransferRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeTransferRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *FeeTransferRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *FeeTransferRequest) SetToken(v string) {
	o.Token = &v
}

// GetUserToken returns the UserToken field value
func (o *FeeTransferRequest) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *FeeTransferRequest) GetUserTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *FeeTransferRequest) SetUserToken(v string) {
	o.UserToken = v
}

func (o FeeTransferRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeeTransferRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["business_token"] = o.BusinessToken
	toSerialize["fees"] = o.Fees
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	toSerialize["user_token"] = o.UserToken
	return toSerialize, nil
}

type NullableFeeTransferRequest struct {
	value *FeeTransferRequest
	isSet bool
}

func (v NullableFeeTransferRequest) Get() *FeeTransferRequest {
	return v.value
}

func (v *NullableFeeTransferRequest) Set(val *FeeTransferRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFeeTransferRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFeeTransferRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeeTransferRequest(val *FeeTransferRequest) *NullableFeeTransferRequest {
	return &NullableFeeTransferRequest{value: val, isSet: true}
}

func (v NullableFeeTransferRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeeTransferRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


