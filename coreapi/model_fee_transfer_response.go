/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
	"time"
)

// checks if the FeeTransferResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeeTransferResponse{}

// FeeTransferResponse Contains information about a fee charge, including the amount, currency code, and user or business token.
type FeeTransferResponse struct {
	// Specifies the business account holder to which the fee applies.
	BusinessToken string `json:"business_token"`
	// Date and time when the `fee_charge` object was created, in UTC.
	CreatedTime time.Time `json:"created_time"`
	// Contains attributes that define characteristics of one or more fees.
	Fees []FeeDetail `json:"fees"`
	// Metadata about the fee charge.  This field is returned if it exists in the resource.
	Tags *string `json:"tags,omitempty"`
	// Unique identifier of the fee transfer.
	Token string `json:"token"`
	// Specifies the user account holder to which the fee applies.
	UserToken string `json:"user_token"`
}

// NewFeeTransferResponse instantiates a new FeeTransferResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeeTransferResponse(businessToken string, createdTime time.Time, fees []FeeDetail, token string, userToken string) *FeeTransferResponse {
	this := FeeTransferResponse{}
	this.BusinessToken = businessToken
	this.CreatedTime = createdTime
	this.Fees = fees
	this.Token = token
	this.UserToken = userToken
	return &this
}

// NewFeeTransferResponseWithDefaults instantiates a new FeeTransferResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeeTransferResponseWithDefaults() *FeeTransferResponse {
	this := FeeTransferResponse{}
	return &this
}

// GetBusinessToken returns the BusinessToken field value
func (o *FeeTransferResponse) GetBusinessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BusinessToken
}

// GetBusinessTokenOk returns a tuple with the BusinessToken field value
// and a boolean to check if the value has been set.
func (o *FeeTransferResponse) GetBusinessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BusinessToken, true
}

// SetBusinessToken sets field value
func (o *FeeTransferResponse) SetBusinessToken(v string) {
	o.BusinessToken = v
}

// GetCreatedTime returns the CreatedTime field value
func (o *FeeTransferResponse) GetCreatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *FeeTransferResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *FeeTransferResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = v
}

// GetFees returns the Fees field value
func (o *FeeTransferResponse) GetFees() []FeeDetail {
	if o == nil {
		var ret []FeeDetail
		return ret
	}

	return o.Fees
}

// GetFeesOk returns a tuple with the Fees field value
// and a boolean to check if the value has been set.
func (o *FeeTransferResponse) GetFeesOk() ([]FeeDetail, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fees, true
}

// SetFees sets field value
func (o *FeeTransferResponse) SetFees(v []FeeDetail) {
	o.Fees = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FeeTransferResponse) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeeTransferResponse) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FeeTransferResponse) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *FeeTransferResponse) SetTags(v string) {
	o.Tags = &v
}

// GetToken returns the Token field value
func (o *FeeTransferResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *FeeTransferResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *FeeTransferResponse) SetToken(v string) {
	o.Token = v
}

// GetUserToken returns the UserToken field value
func (o *FeeTransferResponse) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *FeeTransferResponse) GetUserTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *FeeTransferResponse) SetUserToken(v string) {
	o.UserToken = v
}

func (o FeeTransferResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeeTransferResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["business_token"] = o.BusinessToken
	toSerialize["created_time"] = o.CreatedTime
	toSerialize["fees"] = o.Fees
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["token"] = o.Token
	toSerialize["user_token"] = o.UserToken
	return toSerialize, nil
}

type NullableFeeTransferResponse struct {
	value *FeeTransferResponse
	isSet bool
}

func (v NullableFeeTransferResponse) Get() *FeeTransferResponse {
	return v.value
}

func (v *NullableFeeTransferResponse) Set(val *FeeTransferResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFeeTransferResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFeeTransferResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeeTransferResponse(val *FeeTransferResponse) *NullableFeeTransferResponse {
	return &NullableFeeTransferResponse{value: val, isSet: true}
}

func (v NullableFeeTransferResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeeTransferResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


