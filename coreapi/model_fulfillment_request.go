/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the FulfillmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FulfillmentRequest{}

// FulfillmentRequest Specifies certain physical characteristics of a card, as well as bulk shipment information.
type FulfillmentRequest struct {
	CardPersonalization CardPersonalization `json:"card_personalization"`
	Shipping *Shipping `json:"shipping,omitempty"`
}

// NewFulfillmentRequest instantiates a new FulfillmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFulfillmentRequest(cardPersonalization CardPersonalization) *FulfillmentRequest {
	this := FulfillmentRequest{}
	this.CardPersonalization = cardPersonalization
	return &this
}

// NewFulfillmentRequestWithDefaults instantiates a new FulfillmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFulfillmentRequestWithDefaults() *FulfillmentRequest {
	this := FulfillmentRequest{}
	return &this
}

// GetCardPersonalization returns the CardPersonalization field value
func (o *FulfillmentRequest) GetCardPersonalization() CardPersonalization {
	if o == nil {
		var ret CardPersonalization
		return ret
	}

	return o.CardPersonalization
}

// GetCardPersonalizationOk returns a tuple with the CardPersonalization field value
// and a boolean to check if the value has been set.
func (o *FulfillmentRequest) GetCardPersonalizationOk() (*CardPersonalization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardPersonalization, true
}

// SetCardPersonalization sets field value
func (o *FulfillmentRequest) SetCardPersonalization(v CardPersonalization) {
	o.CardPersonalization = v
}

// GetShipping returns the Shipping field value if set, zero value otherwise.
func (o *FulfillmentRequest) GetShipping() Shipping {
	if o == nil || IsNil(o.Shipping) {
		var ret Shipping
		return ret
	}
	return *o.Shipping
}

// GetShippingOk returns a tuple with the Shipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FulfillmentRequest) GetShippingOk() (*Shipping, bool) {
	if o == nil || IsNil(o.Shipping) {
		return nil, false
	}
	return o.Shipping, true
}

// HasShipping returns a boolean if a field has been set.
func (o *FulfillmentRequest) HasShipping() bool {
	if o != nil && !IsNil(o.Shipping) {
		return true
	}

	return false
}

// SetShipping gets a reference to the given Shipping and assigns it to the Shipping field.
func (o *FulfillmentRequest) SetShipping(v Shipping) {
	o.Shipping = &v
}

func (o FulfillmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FulfillmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["card_personalization"] = o.CardPersonalization
	if !IsNil(o.Shipping) {
		toSerialize["shipping"] = o.Shipping
	}
	return toSerialize, nil
}

type NullableFulfillmentRequest struct {
	value *FulfillmentRequest
	isSet bool
}

func (v NullableFulfillmentRequest) Get() *FulfillmentRequest {
	return v.value
}

func (v *NullableFulfillmentRequest) Set(val *FulfillmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFulfillmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFulfillmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFulfillmentRequest(val *FulfillmentRequest) *NullableFulfillmentRequest {
	return &NullableFulfillmentRequest{value: val, isSet: true}
}

func (v NullableFulfillmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFulfillmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


