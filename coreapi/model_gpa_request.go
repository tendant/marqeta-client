/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the GpaRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GpaRequest{}

// GpaRequest struct for GpaRequest
type GpaRequest struct {
	// Amount to fund.
	Amount float32 `json:"amount"`
	// Unique identifier of the business.  Pass either a `business_token` or a `user_token`, not both.  Send a `GET` request to `/businesses` to retrieve business tokens.
	BusinessToken *string `json:"business_token,omitempty"`
	// Three-digit ISO 4217 currency code.
	CurrencyCode string `json:"currency_code"`
	// List of fees associated with the funding transaction.
	Fees []FeeModel `json:"fees,omitempty"`
	// Unique identifier of the funding source address to use for this order. If your funding source is an ACH account, then a funding source address is not required. If your funding source is a payment card, you must have at least one funding source address in order to create a GPA order. Send a `GET` request to `/fundingsources/addresses/user/{token}` to retrieve addresses for a specific user.
	FundingSourceAddressToken *string `json:"funding_source_address_token,omitempty"`
	// Unique identifier of the funding source to use for this order.  You do not have to supply a funding source token value in this call if you have a default funding source set up (verify the funding source's `is_default_account` field). If you have only one funding source, then this source is used as the default. If you have multiple funding sources and none are configured as the default, then an error is returned.  Send a `GET` request to `/fundingsources/user/{user_token}` to retrieve funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve funding source tokens for a business.
	FundingSourceToken string `json:"funding_source_token"`
	// Additional descriptive text.
	Memo *string `json:"memo,omitempty"`
	// Comma-delimited list of tags describing the GPA order.
	Tags *string `json:"tags,omitempty"`
	// Unique identifier of the GPA order.  If you do not include a token, the system will generate one automatically. This token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember. This value cannot be updated.
	Token *string `json:"token,omitempty"`
	// Unique identifier of the user.  Pass either a `user_token` or a `business_token`, not both.  Send a `GET` request to `/users` to retrieve business tokens.
	UserToken *string `json:"user_token,omitempty"`
}

// NewGpaRequest instantiates a new GpaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGpaRequest(amount float32, currencyCode string, fundingSourceToken string) *GpaRequest {
	this := GpaRequest{}
	this.Amount = amount
	this.CurrencyCode = currencyCode
	this.FundingSourceToken = fundingSourceToken
	return &this
}

// NewGpaRequestWithDefaults instantiates a new GpaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGpaRequestWithDefaults() *GpaRequest {
	this := GpaRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *GpaRequest) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *GpaRequest) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *GpaRequest) SetAmount(v float32) {
	o.Amount = v
}

// GetBusinessToken returns the BusinessToken field value if set, zero value otherwise.
func (o *GpaRequest) GetBusinessToken() string {
	if o == nil || IsNil(o.BusinessToken) {
		var ret string
		return ret
	}
	return *o.BusinessToken
}

// GetBusinessTokenOk returns a tuple with the BusinessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpaRequest) GetBusinessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessToken) {
		return nil, false
	}
	return o.BusinessToken, true
}

// HasBusinessToken returns a boolean if a field has been set.
func (o *GpaRequest) HasBusinessToken() bool {
	if o != nil && !IsNil(o.BusinessToken) {
		return true
	}

	return false
}

// SetBusinessToken gets a reference to the given string and assigns it to the BusinessToken field.
func (o *GpaRequest) SetBusinessToken(v string) {
	o.BusinessToken = &v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *GpaRequest) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *GpaRequest) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *GpaRequest) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetFees returns the Fees field value if set, zero value otherwise.
func (o *GpaRequest) GetFees() []FeeModel {
	if o == nil || IsNil(o.Fees) {
		var ret []FeeModel
		return ret
	}
	return o.Fees
}

// GetFeesOk returns a tuple with the Fees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpaRequest) GetFeesOk() ([]FeeModel, bool) {
	if o == nil || IsNil(o.Fees) {
		return nil, false
	}
	return o.Fees, true
}

// HasFees returns a boolean if a field has been set.
func (o *GpaRequest) HasFees() bool {
	if o != nil && !IsNil(o.Fees) {
		return true
	}

	return false
}

// SetFees gets a reference to the given []FeeModel and assigns it to the Fees field.
func (o *GpaRequest) SetFees(v []FeeModel) {
	o.Fees = v
}

// GetFundingSourceAddressToken returns the FundingSourceAddressToken field value if set, zero value otherwise.
func (o *GpaRequest) GetFundingSourceAddressToken() string {
	if o == nil || IsNil(o.FundingSourceAddressToken) {
		var ret string
		return ret
	}
	return *o.FundingSourceAddressToken
}

// GetFundingSourceAddressTokenOk returns a tuple with the FundingSourceAddressToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpaRequest) GetFundingSourceAddressTokenOk() (*string, bool) {
	if o == nil || IsNil(o.FundingSourceAddressToken) {
		return nil, false
	}
	return o.FundingSourceAddressToken, true
}

// HasFundingSourceAddressToken returns a boolean if a field has been set.
func (o *GpaRequest) HasFundingSourceAddressToken() bool {
	if o != nil && !IsNil(o.FundingSourceAddressToken) {
		return true
	}

	return false
}

// SetFundingSourceAddressToken gets a reference to the given string and assigns it to the FundingSourceAddressToken field.
func (o *GpaRequest) SetFundingSourceAddressToken(v string) {
	o.FundingSourceAddressToken = &v
}

// GetFundingSourceToken returns the FundingSourceToken field value
func (o *GpaRequest) GetFundingSourceToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FundingSourceToken
}

// GetFundingSourceTokenOk returns a tuple with the FundingSourceToken field value
// and a boolean to check if the value has been set.
func (o *GpaRequest) GetFundingSourceTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FundingSourceToken, true
}

// SetFundingSourceToken sets field value
func (o *GpaRequest) SetFundingSourceToken(v string) {
	o.FundingSourceToken = v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *GpaRequest) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpaRequest) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *GpaRequest) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *GpaRequest) SetMemo(v string) {
	o.Memo = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GpaRequest) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpaRequest) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GpaRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *GpaRequest) SetTags(v string) {
	o.Tags = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *GpaRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpaRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *GpaRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *GpaRequest) SetToken(v string) {
	o.Token = &v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *GpaRequest) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpaRequest) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *GpaRequest) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *GpaRequest) SetUserToken(v string) {
	o.UserToken = &v
}

func (o GpaRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GpaRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	if !IsNil(o.BusinessToken) {
		toSerialize["business_token"] = o.BusinessToken
	}
	toSerialize["currency_code"] = o.CurrencyCode
	if !IsNil(o.Fees) {
		toSerialize["fees"] = o.Fees
	}
	if !IsNil(o.FundingSourceAddressToken) {
		toSerialize["funding_source_address_token"] = o.FundingSourceAddressToken
	}
	toSerialize["funding_source_token"] = o.FundingSourceToken
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	return toSerialize, nil
}

type NullableGpaRequest struct {
	value *GpaRequest
	isSet bool
}

func (v NullableGpaRequest) Get() *GpaRequest {
	return v.value
}

func (v *NullableGpaRequest) Set(val *GpaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGpaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGpaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGpaRequest(val *GpaRequest) *NullableGpaRequest {
	return &NullableGpaRequest{value: val, isSet: true}
}

func (v NullableGpaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGpaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


