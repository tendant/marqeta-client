/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the IdentificationRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentificationRequestModel{}

// IdentificationRequestModel Contains identifications associated with the cardholder.
type IdentificationRequestModel struct {
	// Expiration date of the identification, if applicable.
	ExpirationDate *string `json:"expiration_date,omitempty"`
	// Type of identification.  *NOTE:* Full Social Security Number (SSN) is required for US-based cardholder KYC verification. Nine digits only, no delimiters. `123456789`, for example.
	Type string `json:"type"`
	// Number associated with the identification.
	Value *string `json:"value,omitempty"`
}

// NewIdentificationRequestModel instantiates a new IdentificationRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentificationRequestModel(type_ string) *IdentificationRequestModel {
	this := IdentificationRequestModel{}
	this.Type = type_
	return &this
}

// NewIdentificationRequestModelWithDefaults instantiates a new IdentificationRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentificationRequestModelWithDefaults() *IdentificationRequestModel {
	this := IdentificationRequestModel{}
	return &this
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *IdentificationRequestModel) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentificationRequestModel) GetExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *IdentificationRequestModel) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *IdentificationRequestModel) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetType returns the Type field value
func (o *IdentificationRequestModel) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *IdentificationRequestModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *IdentificationRequestModel) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *IdentificationRequestModel) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentificationRequestModel) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *IdentificationRequestModel) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *IdentificationRequestModel) SetValue(v string) {
	o.Value = &v
}

func (o IdentificationRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentificationRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expiration_date"] = o.ExpirationDate
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableIdentificationRequestModel struct {
	value *IdentificationRequestModel
	isSet bool
}

func (v NullableIdentificationRequestModel) Get() *IdentificationRequestModel {
	return v.value
}

func (v *NullableIdentificationRequestModel) Set(val *IdentificationRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentificationRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentificationRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentificationRequestModel(val *IdentificationRequestModel) *NullableIdentificationRequestModel {
	return &NullableIdentificationRequestModel{value: val, isSet: true}
}

func (v NullableIdentificationRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentificationRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


