/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the ImagesCarrier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImagesCarrier{}

// ImagesCarrier Specifies personalized images that appear on the card carrier.
type ImagesCarrier struct {
	// Specifies a custom message that appears on the card carrier.
	Message1 *string `json:"message_1,omitempty"`
	// Specifies a PNG image to display on the card carrier.
	Name *string `json:"name,omitempty"`
}

// NewImagesCarrier instantiates a new ImagesCarrier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImagesCarrier() *ImagesCarrier {
	this := ImagesCarrier{}
	return &this
}

// NewImagesCarrierWithDefaults instantiates a new ImagesCarrier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImagesCarrierWithDefaults() *ImagesCarrier {
	this := ImagesCarrier{}
	return &this
}

// GetMessage1 returns the Message1 field value if set, zero value otherwise.
func (o *ImagesCarrier) GetMessage1() string {
	if o == nil || IsNil(o.Message1) {
		var ret string
		return ret
	}
	return *o.Message1
}

// GetMessage1Ok returns a tuple with the Message1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImagesCarrier) GetMessage1Ok() (*string, bool) {
	if o == nil || IsNil(o.Message1) {
		return nil, false
	}
	return o.Message1, true
}

// HasMessage1 returns a boolean if a field has been set.
func (o *ImagesCarrier) HasMessage1() bool {
	if o != nil && !IsNil(o.Message1) {
		return true
	}

	return false
}

// SetMessage1 gets a reference to the given string and assigns it to the Message1 field.
func (o *ImagesCarrier) SetMessage1(v string) {
	o.Message1 = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ImagesCarrier) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImagesCarrier) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ImagesCarrier) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ImagesCarrier) SetName(v string) {
	o.Name = &v
}

func (o ImagesCarrier) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImagesCarrier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message1) {
		toSerialize["message_1"] = o.Message1
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableImagesCarrier struct {
	value *ImagesCarrier
	isSet bool
}

func (v NullableImagesCarrier) Get() *ImagesCarrier {
	return v.value
}

func (v *NullableImagesCarrier) Set(val *ImagesCarrier) {
	v.value = val
	v.isSet = true
}

func (v NullableImagesCarrier) IsSet() bool {
	return v.isSet
}

func (v *NullableImagesCarrier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImagesCarrier(val *ImagesCarrier) *NullableImagesCarrier {
	return &NullableImagesCarrier{value: val, isSet: true}
}

func (v NullableImagesCarrier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImagesCarrier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


