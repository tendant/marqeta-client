/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the JitFunding type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JitFunding{}

// JitFunding Governs the behavior of JIT Funding.
type JitFunding struct {
	PaymentcardFundingSource *JitFundingPaymentcardFundingSource `json:"paymentcard_funding_source,omitempty"`
	ProgramFundingSource *JitFundingProgramFundingSource `json:"program_funding_source,omitempty"`
	ProgramgatewayFundingSource *JitFundingProgramgatewayFundingSource `json:"programgateway_funding_source,omitempty"`
}

// NewJitFunding instantiates a new JitFunding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJitFunding() *JitFunding {
	this := JitFunding{}
	return &this
}

// NewJitFundingWithDefaults instantiates a new JitFunding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJitFundingWithDefaults() *JitFunding {
	this := JitFunding{}
	return &this
}

// GetPaymentcardFundingSource returns the PaymentcardFundingSource field value if set, zero value otherwise.
func (o *JitFunding) GetPaymentcardFundingSource() JitFundingPaymentcardFundingSource {
	if o == nil || IsNil(o.PaymentcardFundingSource) {
		var ret JitFundingPaymentcardFundingSource
		return ret
	}
	return *o.PaymentcardFundingSource
}

// GetPaymentcardFundingSourceOk returns a tuple with the PaymentcardFundingSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFunding) GetPaymentcardFundingSourceOk() (*JitFundingPaymentcardFundingSource, bool) {
	if o == nil || IsNil(o.PaymentcardFundingSource) {
		return nil, false
	}
	return o.PaymentcardFundingSource, true
}

// HasPaymentcardFundingSource returns a boolean if a field has been set.
func (o *JitFunding) HasPaymentcardFundingSource() bool {
	if o != nil && !IsNil(o.PaymentcardFundingSource) {
		return true
	}

	return false
}

// SetPaymentcardFundingSource gets a reference to the given JitFundingPaymentcardFundingSource and assigns it to the PaymentcardFundingSource field.
func (o *JitFunding) SetPaymentcardFundingSource(v JitFundingPaymentcardFundingSource) {
	o.PaymentcardFundingSource = &v
}

// GetProgramFundingSource returns the ProgramFundingSource field value if set, zero value otherwise.
func (o *JitFunding) GetProgramFundingSource() JitFundingProgramFundingSource {
	if o == nil || IsNil(o.ProgramFundingSource) {
		var ret JitFundingProgramFundingSource
		return ret
	}
	return *o.ProgramFundingSource
}

// GetProgramFundingSourceOk returns a tuple with the ProgramFundingSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFunding) GetProgramFundingSourceOk() (*JitFundingProgramFundingSource, bool) {
	if o == nil || IsNil(o.ProgramFundingSource) {
		return nil, false
	}
	return o.ProgramFundingSource, true
}

// HasProgramFundingSource returns a boolean if a field has been set.
func (o *JitFunding) HasProgramFundingSource() bool {
	if o != nil && !IsNil(o.ProgramFundingSource) {
		return true
	}

	return false
}

// SetProgramFundingSource gets a reference to the given JitFundingProgramFundingSource and assigns it to the ProgramFundingSource field.
func (o *JitFunding) SetProgramFundingSource(v JitFundingProgramFundingSource) {
	o.ProgramFundingSource = &v
}

// GetProgramgatewayFundingSource returns the ProgramgatewayFundingSource field value if set, zero value otherwise.
func (o *JitFunding) GetProgramgatewayFundingSource() JitFundingProgramgatewayFundingSource {
	if o == nil || IsNil(o.ProgramgatewayFundingSource) {
		var ret JitFundingProgramgatewayFundingSource
		return ret
	}
	return *o.ProgramgatewayFundingSource
}

// GetProgramgatewayFundingSourceOk returns a tuple with the ProgramgatewayFundingSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFunding) GetProgramgatewayFundingSourceOk() (*JitFundingProgramgatewayFundingSource, bool) {
	if o == nil || IsNil(o.ProgramgatewayFundingSource) {
		return nil, false
	}
	return o.ProgramgatewayFundingSource, true
}

// HasProgramgatewayFundingSource returns a boolean if a field has been set.
func (o *JitFunding) HasProgramgatewayFundingSource() bool {
	if o != nil && !IsNil(o.ProgramgatewayFundingSource) {
		return true
	}

	return false
}

// SetProgramgatewayFundingSource gets a reference to the given JitFundingProgramgatewayFundingSource and assigns it to the ProgramgatewayFundingSource field.
func (o *JitFunding) SetProgramgatewayFundingSource(v JitFundingProgramgatewayFundingSource) {
	o.ProgramgatewayFundingSource = &v
}

func (o JitFunding) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JitFunding) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentcardFundingSource) {
		toSerialize["paymentcard_funding_source"] = o.PaymentcardFundingSource
	}
	if !IsNil(o.ProgramFundingSource) {
		toSerialize["program_funding_source"] = o.ProgramFundingSource
	}
	if !IsNil(o.ProgramgatewayFundingSource) {
		toSerialize["programgateway_funding_source"] = o.ProgramgatewayFundingSource
	}
	return toSerialize, nil
}

type NullableJitFunding struct {
	value *JitFunding
	isSet bool
}

func (v NullableJitFunding) Get() *JitFunding {
	return v.value
}

func (v *NullableJitFunding) Set(val *JitFunding) {
	v.value = val
	v.isSet = true
}

func (v NullableJitFunding) IsSet() bool {
	return v.isSet
}

func (v *NullableJitFunding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJitFunding(val *JitFunding) *NullableJitFunding {
	return &NullableJitFunding{value: val, isSet: true}
}

func (v NullableJitFunding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJitFunding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


