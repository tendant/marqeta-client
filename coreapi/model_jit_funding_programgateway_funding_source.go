/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the JitFundingProgramgatewayFundingSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JitFundingProgramgatewayFundingSource{}

// JitFundingProgramgatewayFundingSource struct for JitFundingProgramgatewayFundingSource
type JitFundingProgramgatewayFundingSource struct {
	// If set to `true`, this card product is always funded from this program gateway funding source.
	AlwaysFund *bool `json:"always_fund,omitempty"`
	// Specifies whether JIT Funding is enabled or disabled for the program gateway funding source. A value of `true` indicates that the program gateway funding source is enabled and will be debited when swipes occur.
	Enabled *bool `json:"enabled,omitempty"`
	// Unique identifier of the already existing funding source. Required if JIT Funding is enabled.
	FundingSourceToken *string `json:"funding_source_token,omitempty"`
	// Specifies the return destination for refunds in the case of a transaction reversal. In most cases, you should set the value to `GATEWAY`, which returns funds to the program gateway funding source. Setting to `GPA` returns the funds to the user's GPA, which creates a positive account balance and introduces the potential of a transaction being authorized without a JIT Funding request being sent to the gateway.
	RefundsDestination *string `json:"refunds_destination,omitempty"`
}

// NewJitFundingProgramgatewayFundingSource instantiates a new JitFundingProgramgatewayFundingSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJitFundingProgramgatewayFundingSource() *JitFundingProgramgatewayFundingSource {
	this := JitFundingProgramgatewayFundingSource{}
	var alwaysFund bool = false
	this.AlwaysFund = &alwaysFund
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// NewJitFundingProgramgatewayFundingSourceWithDefaults instantiates a new JitFundingProgramgatewayFundingSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJitFundingProgramgatewayFundingSourceWithDefaults() *JitFundingProgramgatewayFundingSource {
	this := JitFundingProgramgatewayFundingSource{}
	var alwaysFund bool = false
	this.AlwaysFund = &alwaysFund
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetAlwaysFund returns the AlwaysFund field value if set, zero value otherwise.
func (o *JitFundingProgramgatewayFundingSource) GetAlwaysFund() bool {
	if o == nil || IsNil(o.AlwaysFund) {
		var ret bool
		return ret
	}
	return *o.AlwaysFund
}

// GetAlwaysFundOk returns a tuple with the AlwaysFund field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingProgramgatewayFundingSource) GetAlwaysFundOk() (*bool, bool) {
	if o == nil || IsNil(o.AlwaysFund) {
		return nil, false
	}
	return o.AlwaysFund, true
}

// HasAlwaysFund returns a boolean if a field has been set.
func (o *JitFundingProgramgatewayFundingSource) HasAlwaysFund() bool {
	if o != nil && !IsNil(o.AlwaysFund) {
		return true
	}

	return false
}

// SetAlwaysFund gets a reference to the given bool and assigns it to the AlwaysFund field.
func (o *JitFundingProgramgatewayFundingSource) SetAlwaysFund(v bool) {
	o.AlwaysFund = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *JitFundingProgramgatewayFundingSource) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingProgramgatewayFundingSource) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *JitFundingProgramgatewayFundingSource) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *JitFundingProgramgatewayFundingSource) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFundingSourceToken returns the FundingSourceToken field value if set, zero value otherwise.
func (o *JitFundingProgramgatewayFundingSource) GetFundingSourceToken() string {
	if o == nil || IsNil(o.FundingSourceToken) {
		var ret string
		return ret
	}
	return *o.FundingSourceToken
}

// GetFundingSourceTokenOk returns a tuple with the FundingSourceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingProgramgatewayFundingSource) GetFundingSourceTokenOk() (*string, bool) {
	if o == nil || IsNil(o.FundingSourceToken) {
		return nil, false
	}
	return o.FundingSourceToken, true
}

// HasFundingSourceToken returns a boolean if a field has been set.
func (o *JitFundingProgramgatewayFundingSource) HasFundingSourceToken() bool {
	if o != nil && !IsNil(o.FundingSourceToken) {
		return true
	}

	return false
}

// SetFundingSourceToken gets a reference to the given string and assigns it to the FundingSourceToken field.
func (o *JitFundingProgramgatewayFundingSource) SetFundingSourceToken(v string) {
	o.FundingSourceToken = &v
}

// GetRefundsDestination returns the RefundsDestination field value if set, zero value otherwise.
func (o *JitFundingProgramgatewayFundingSource) GetRefundsDestination() string {
	if o == nil || IsNil(o.RefundsDestination) {
		var ret string
		return ret
	}
	return *o.RefundsDestination
}

// GetRefundsDestinationOk returns a tuple with the RefundsDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingProgramgatewayFundingSource) GetRefundsDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.RefundsDestination) {
		return nil, false
	}
	return o.RefundsDestination, true
}

// HasRefundsDestination returns a boolean if a field has been set.
func (o *JitFundingProgramgatewayFundingSource) HasRefundsDestination() bool {
	if o != nil && !IsNil(o.RefundsDestination) {
		return true
	}

	return false
}

// SetRefundsDestination gets a reference to the given string and assigns it to the RefundsDestination field.
func (o *JitFundingProgramgatewayFundingSource) SetRefundsDestination(v string) {
	o.RefundsDestination = &v
}

func (o JitFundingProgramgatewayFundingSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JitFundingProgramgatewayFundingSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlwaysFund) {
		toSerialize["always_fund"] = o.AlwaysFund
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.FundingSourceToken) {
		toSerialize["funding_source_token"] = o.FundingSourceToken
	}
	if !IsNil(o.RefundsDestination) {
		toSerialize["refunds_destination"] = o.RefundsDestination
	}
	return toSerialize, nil
}

type NullableJitFundingProgramgatewayFundingSource struct {
	value *JitFundingProgramgatewayFundingSource
	isSet bool
}

func (v NullableJitFundingProgramgatewayFundingSource) Get() *JitFundingProgramgatewayFundingSource {
	return v.value
}

func (v *NullableJitFundingProgramgatewayFundingSource) Set(val *JitFundingProgramgatewayFundingSource) {
	v.value = val
	v.isSet = true
}

func (v NullableJitFundingProgramgatewayFundingSource) IsSet() bool {
	return v.isSet
}

func (v *NullableJitFundingProgramgatewayFundingSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJitFundingProgramgatewayFundingSource(val *JitFundingProgramgatewayFundingSource) *NullableJitFundingProgramgatewayFundingSource {
	return &NullableJitFundingProgramgatewayFundingSource{value: val, isSet: true}
}

func (v NullableJitFundingProgramgatewayFundingSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJitFundingProgramgatewayFundingSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


