/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the KycResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KycResponse{}

// KycResponse struct for KycResponse
type KycResponse struct {
	// The business account holder on which the identity check was performed.
	BusinessToken *string `json:"business_token,omitempty"`
	// Time when the KYC verification was performed.
	CreatedTime time.Time `json:"created_time"`
	// Time when the KYC verification was last updated.
	LastModifiedTime time.Time `json:"last_modified_time"`
	// If `true`, the user account holder is designated as having passed a verification check without Marqeta performing the check.  This override is used when verification is performed through another mechanism, such as with an alternative KYC provider or directly with the account holder.
	ManualOverride *bool `json:"manual_override,omitempty"`
	// Notes pertaining to a manual override. This field is included in the response only when the `manual_override` field is set to `true`.
	Notes *string `json:"notes,omitempty"`
	// If you verified the account holder's identity by performing a KYC verification outside of the Marqeta platform, you can use the `reference_id` field to store the reference number returned by that KYC provider. This field is included in the response only when the `manual_override` field is set to `true`.  *NOTE:* When you submit a KYC verification request with `manual_override=false`, the Marqeta platform performs the verification through one of its KYC providers. If the KYC provider responds with a reference identifier, that identifier is passed to you by way of this field in the response.
	ReferenceId *string `json:"reference_id,omitempty"`
	Result *Result `json:"result,omitempty"`
	// The unique identifier of the identity check.
	Token *string `json:"token,omitempty"`
	// The user account holder on which the identity check was performed.
	UserToken *string `json:"user_token,omitempty"`
}

// NewKycResponse instantiates a new KycResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKycResponse(createdTime time.Time, lastModifiedTime time.Time) *KycResponse {
	this := KycResponse{}
	this.CreatedTime = createdTime
	this.LastModifiedTime = lastModifiedTime
	return &this
}

// NewKycResponseWithDefaults instantiates a new KycResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKycResponseWithDefaults() *KycResponse {
	this := KycResponse{}
	return &this
}

// GetBusinessToken returns the BusinessToken field value if set, zero value otherwise.
func (o *KycResponse) GetBusinessToken() string {
	if o == nil || IsNil(o.BusinessToken) {
		var ret string
		return ret
	}
	return *o.BusinessToken
}

// GetBusinessTokenOk returns a tuple with the BusinessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KycResponse) GetBusinessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessToken) {
		return nil, false
	}
	return o.BusinessToken, true
}

// HasBusinessToken returns a boolean if a field has been set.
func (o *KycResponse) HasBusinessToken() bool {
	if o != nil && !IsNil(o.BusinessToken) {
		return true
	}

	return false
}

// SetBusinessToken gets a reference to the given string and assigns it to the BusinessToken field.
func (o *KycResponse) SetBusinessToken(v string) {
	o.BusinessToken = &v
}

// GetCreatedTime returns the CreatedTime field value
func (o *KycResponse) GetCreatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *KycResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *KycResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = v
}

// GetLastModifiedTime returns the LastModifiedTime field value
func (o *KycResponse) GetLastModifiedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value
// and a boolean to check if the value has been set.
func (o *KycResponse) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifiedTime, true
}

// SetLastModifiedTime sets field value
func (o *KycResponse) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = v
}

// GetManualOverride returns the ManualOverride field value if set, zero value otherwise.
func (o *KycResponse) GetManualOverride() bool {
	if o == nil || IsNil(o.ManualOverride) {
		var ret bool
		return ret
	}
	return *o.ManualOverride
}

// GetManualOverrideOk returns a tuple with the ManualOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KycResponse) GetManualOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.ManualOverride) {
		return nil, false
	}
	return o.ManualOverride, true
}

// HasManualOverride returns a boolean if a field has been set.
func (o *KycResponse) HasManualOverride() bool {
	if o != nil && !IsNil(o.ManualOverride) {
		return true
	}

	return false
}

// SetManualOverride gets a reference to the given bool and assigns it to the ManualOverride field.
func (o *KycResponse) SetManualOverride(v bool) {
	o.ManualOverride = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *KycResponse) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KycResponse) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *KycResponse) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *KycResponse) SetNotes(v string) {
	o.Notes = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *KycResponse) GetReferenceId() string {
	if o == nil || IsNil(o.ReferenceId) {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KycResponse) GetReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceId) {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *KycResponse) HasReferenceId() bool {
	if o != nil && !IsNil(o.ReferenceId) {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *KycResponse) SetReferenceId(v string) {
	o.ReferenceId = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *KycResponse) GetResult() Result {
	if o == nil || IsNil(o.Result) {
		var ret Result
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KycResponse) GetResultOk() (*Result, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *KycResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given Result and assigns it to the Result field.
func (o *KycResponse) SetResult(v Result) {
	o.Result = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *KycResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KycResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *KycResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *KycResponse) SetToken(v string) {
	o.Token = &v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *KycResponse) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KycResponse) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *KycResponse) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *KycResponse) SetUserToken(v string) {
	o.UserToken = &v
}

func (o KycResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KycResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessToken) {
		toSerialize["business_token"] = o.BusinessToken
	}
	toSerialize["created_time"] = o.CreatedTime
	toSerialize["last_modified_time"] = o.LastModifiedTime
	if !IsNil(o.ManualOverride) {
		toSerialize["manual_override"] = o.ManualOverride
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.ReferenceId) {
		toSerialize["reference_id"] = o.ReferenceId
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	return toSerialize, nil
}

type NullableKycResponse struct {
	value *KycResponse
	isSet bool
}

func (v NullableKycResponse) Get() *KycResponse {
	return v.value
}

func (v *NullableKycResponse) Set(val *KycResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKycResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKycResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKycResponse(val *KycResponse) *NullableKycResponse {
	return &NullableKycResponse{value: val, isSet: true}
}

func (v NullableKycResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKycResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


