/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the LoginRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginRequestModel{}

// LoginRequestModel struct for LoginRequestModel
type LoginRequestModel struct {
	// Cardholder email address.
	Email *string `json:"email,omitempty"`
	// Password to the cardholder's user account on the Marqeta platform.
	Password *string `json:"password,omitempty"`
	// Identifies the cardholder to log in.  Send a `GET` request to `/users` to retrieve user tokens.
	UserToken *string `json:"user_token,omitempty"`
}

// NewLoginRequestModel instantiates a new LoginRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginRequestModel() *LoginRequestModel {
	this := LoginRequestModel{}
	return &this
}

// NewLoginRequestModelWithDefaults instantiates a new LoginRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginRequestModelWithDefaults() *LoginRequestModel {
	this := LoginRequestModel{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *LoginRequestModel) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginRequestModel) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *LoginRequestModel) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *LoginRequestModel) SetEmail(v string) {
	o.Email = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *LoginRequestModel) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginRequestModel) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *LoginRequestModel) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *LoginRequestModel) SetPassword(v string) {
	o.Password = &v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *LoginRequestModel) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginRequestModel) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *LoginRequestModel) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *LoginRequestModel) SetUserToken(v string) {
	o.UserToken = &v
}

func (o LoginRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	return toSerialize, nil
}

type NullableLoginRequestModel struct {
	value *LoginRequestModel
	isSet bool
}

func (v NullableLoginRequestModel) Get() *LoginRequestModel {
	return v.value
}

func (v *NullableLoginRequestModel) Set(val *LoginRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginRequestModel(val *LoginRequestModel) *NullableLoginRequestModel {
	return &NullableLoginRequestModel{value: val, isSet: true}
}

func (v NullableLoginRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


