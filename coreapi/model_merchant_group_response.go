/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the MerchantGroupResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantGroupResponse{}

// MerchantGroupResponse struct for MerchantGroupResponse
type MerchantGroupResponse struct {
	// Indicates if the merchant group is active or not.
	Active *bool `json:"active,omitempty"`
	// Date and time when the resource was created, in UTC.
	CreatedTime *time.Time `json:"created_time,omitempty"`
	// Date and time when the resource was last modified, in UTC.
	LastModifiedTime *time.Time `json:"last_modified_time,omitempty"`
	// Comma-separated list of alphanumeric merchant identifiers.
	Mids []string `json:"mids,omitempty"`
	// Name of the merchant group.
	Name *string `json:"name,omitempty"`
	// Unique identifier of the merchant group.
	Token *string `json:"token,omitempty"`
}

// NewMerchantGroupResponse instantiates a new MerchantGroupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantGroupResponse() *MerchantGroupResponse {
	this := MerchantGroupResponse{}
	var active bool = false
	this.Active = &active
	return &this
}

// NewMerchantGroupResponseWithDefaults instantiates a new MerchantGroupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantGroupResponseWithDefaults() *MerchantGroupResponse {
	this := MerchantGroupResponse{}
	var active bool = false
	this.Active = &active
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *MerchantGroupResponse) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGroupResponse) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *MerchantGroupResponse) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *MerchantGroupResponse) SetActive(v bool) {
	o.Active = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *MerchantGroupResponse) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGroupResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *MerchantGroupResponse) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *MerchantGroupResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *MerchantGroupResponse) GetLastModifiedTime() time.Time {
	if o == nil || IsNil(o.LastModifiedTime) {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGroupResponse) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedTime) {
		return nil, false
	}
	return o.LastModifiedTime, true
}

// HasLastModifiedTime returns a boolean if a field has been set.
func (o *MerchantGroupResponse) HasLastModifiedTime() bool {
	if o != nil && !IsNil(o.LastModifiedTime) {
		return true
	}

	return false
}

// SetLastModifiedTime gets a reference to the given time.Time and assigns it to the LastModifiedTime field.
func (o *MerchantGroupResponse) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = &v
}

// GetMids returns the Mids field value if set, zero value otherwise.
func (o *MerchantGroupResponse) GetMids() []string {
	if o == nil || IsNil(o.Mids) {
		var ret []string
		return ret
	}
	return o.Mids
}

// GetMidsOk returns a tuple with the Mids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGroupResponse) GetMidsOk() ([]string, bool) {
	if o == nil || IsNil(o.Mids) {
		return nil, false
	}
	return o.Mids, true
}

// HasMids returns a boolean if a field has been set.
func (o *MerchantGroupResponse) HasMids() bool {
	if o != nil && !IsNil(o.Mids) {
		return true
	}

	return false
}

// SetMids gets a reference to the given []string and assigns it to the Mids field.
func (o *MerchantGroupResponse) SetMids(v []string) {
	o.Mids = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MerchantGroupResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGroupResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MerchantGroupResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MerchantGroupResponse) SetName(v string) {
	o.Name = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *MerchantGroupResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGroupResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *MerchantGroupResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *MerchantGroupResponse) SetToken(v string) {
	o.Token = &v
}

func (o MerchantGroupResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantGroupResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.LastModifiedTime) {
		toSerialize["last_modified_time"] = o.LastModifiedTime
	}
	if !IsNil(o.Mids) {
		toSerialize["mids"] = o.Mids
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableMerchantGroupResponse struct {
	value *MerchantGroupResponse
	isSet bool
}

func (v NullableMerchantGroupResponse) Get() *MerchantGroupResponse {
	return v.value
}

func (v *NullableMerchantGroupResponse) Set(val *MerchantGroupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantGroupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantGroupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantGroupResponse(val *MerchantGroupResponse) *NullableMerchantGroupResponse {
	return &NullableMerchantGroupResponse{value: val, isSet: true}
}

func (v NullableMerchantGroupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantGroupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


