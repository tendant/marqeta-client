/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the MerchantGroupUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MerchantGroupUpdateRequest{}

// MerchantGroupUpdateRequest struct for MerchantGroupUpdateRequest
type MerchantGroupUpdateRequest struct {
	// Indicates if the merchant group is active or not.
	Active *bool `json:"active,omitempty"`
	// Comma-separated list of alphanumeric merchant identifiers. You can include merchant identifiers in multiple merchant groups.
	Mids []string `json:"mids,omitempty"`
	// Name of the merchant group.
	Name *string `json:"name,omitempty"`
}

// NewMerchantGroupUpdateRequest instantiates a new MerchantGroupUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantGroupUpdateRequest() *MerchantGroupUpdateRequest {
	this := MerchantGroupUpdateRequest{}
	var active bool = false
	this.Active = &active
	return &this
}

// NewMerchantGroupUpdateRequestWithDefaults instantiates a new MerchantGroupUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantGroupUpdateRequestWithDefaults() *MerchantGroupUpdateRequest {
	this := MerchantGroupUpdateRequest{}
	var active bool = false
	this.Active = &active
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *MerchantGroupUpdateRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGroupUpdateRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *MerchantGroupUpdateRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *MerchantGroupUpdateRequest) SetActive(v bool) {
	o.Active = &v
}

// GetMids returns the Mids field value if set, zero value otherwise.
func (o *MerchantGroupUpdateRequest) GetMids() []string {
	if o == nil || IsNil(o.Mids) {
		var ret []string
		return ret
	}
	return o.Mids
}

// GetMidsOk returns a tuple with the Mids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGroupUpdateRequest) GetMidsOk() ([]string, bool) {
	if o == nil || IsNil(o.Mids) {
		return nil, false
	}
	return o.Mids, true
}

// HasMids returns a boolean if a field has been set.
func (o *MerchantGroupUpdateRequest) HasMids() bool {
	if o != nil && !IsNil(o.Mids) {
		return true
	}

	return false
}

// SetMids gets a reference to the given []string and assigns it to the Mids field.
func (o *MerchantGroupUpdateRequest) SetMids(v []string) {
	o.Mids = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MerchantGroupUpdateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantGroupUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MerchantGroupUpdateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MerchantGroupUpdateRequest) SetName(v string) {
	o.Name = &v
}

func (o MerchantGroupUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MerchantGroupUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Mids) {
		toSerialize["mids"] = o.Mids
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableMerchantGroupUpdateRequest struct {
	value *MerchantGroupUpdateRequest
	isSet bool
}

func (v NullableMerchantGroupUpdateRequest) Get() *MerchantGroupUpdateRequest {
	return v.value
}

func (v *NullableMerchantGroupUpdateRequest) Set(val *MerchantGroupUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantGroupUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantGroupUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantGroupUpdateRequest(val *MerchantGroupUpdateRequest) *NullableMerchantGroupUpdateRequest {
	return &NullableMerchantGroupUpdateRequest{value: val, isSet: true}
}

func (v NullableMerchantGroupUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantGroupUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


