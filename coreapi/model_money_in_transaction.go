/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the MoneyInTransaction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MoneyInTransaction{}

// MoneyInTransaction Defines the original credit transaction (OCT) types that are subject to velocity control.
type MoneyInTransaction struct {
	// Specifies the types of credits to include in the original credit transaction (OCT).
	IncludeCreditsTypes []string `json:"include_credits_types,omitempty"`
	// Indicates whether or not cash and check network load transactions will be subject to velocity control.
	IncludeNetworkLoadTypes []string `json:"include_network_load_types,omitempty"`
}

// NewMoneyInTransaction instantiates a new MoneyInTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoneyInTransaction() *MoneyInTransaction {
	this := MoneyInTransaction{}
	return &this
}

// NewMoneyInTransactionWithDefaults instantiates a new MoneyInTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoneyInTransactionWithDefaults() *MoneyInTransaction {
	this := MoneyInTransaction{}
	return &this
}

// GetIncludeCreditsTypes returns the IncludeCreditsTypes field value if set, zero value otherwise.
func (o *MoneyInTransaction) GetIncludeCreditsTypes() []string {
	if o == nil || IsNil(o.IncludeCreditsTypes) {
		var ret []string
		return ret
	}
	return o.IncludeCreditsTypes
}

// GetIncludeCreditsTypesOk returns a tuple with the IncludeCreditsTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInTransaction) GetIncludeCreditsTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeCreditsTypes) {
		return nil, false
	}
	return o.IncludeCreditsTypes, true
}

// HasIncludeCreditsTypes returns a boolean if a field has been set.
func (o *MoneyInTransaction) HasIncludeCreditsTypes() bool {
	if o != nil && !IsNil(o.IncludeCreditsTypes) {
		return true
	}

	return false
}

// SetIncludeCreditsTypes gets a reference to the given []string and assigns it to the IncludeCreditsTypes field.
func (o *MoneyInTransaction) SetIncludeCreditsTypes(v []string) {
	o.IncludeCreditsTypes = v
}

// GetIncludeNetworkLoadTypes returns the IncludeNetworkLoadTypes field value if set, zero value otherwise.
func (o *MoneyInTransaction) GetIncludeNetworkLoadTypes() []string {
	if o == nil || IsNil(o.IncludeNetworkLoadTypes) {
		var ret []string
		return ret
	}
	return o.IncludeNetworkLoadTypes
}

// GetIncludeNetworkLoadTypesOk returns a tuple with the IncludeNetworkLoadTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoneyInTransaction) GetIncludeNetworkLoadTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeNetworkLoadTypes) {
		return nil, false
	}
	return o.IncludeNetworkLoadTypes, true
}

// HasIncludeNetworkLoadTypes returns a boolean if a field has been set.
func (o *MoneyInTransaction) HasIncludeNetworkLoadTypes() bool {
	if o != nil && !IsNil(o.IncludeNetworkLoadTypes) {
		return true
	}

	return false
}

// SetIncludeNetworkLoadTypes gets a reference to the given []string and assigns it to the IncludeNetworkLoadTypes field.
func (o *MoneyInTransaction) SetIncludeNetworkLoadTypes(v []string) {
	o.IncludeNetworkLoadTypes = v
}

func (o MoneyInTransaction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MoneyInTransaction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IncludeCreditsTypes) {
		toSerialize["include_credits_types"] = o.IncludeCreditsTypes
	}
	if !IsNil(o.IncludeNetworkLoadTypes) {
		toSerialize["include_network_load_types"] = o.IncludeNetworkLoadTypes
	}
	return toSerialize, nil
}

type NullableMoneyInTransaction struct {
	value *MoneyInTransaction
	isSet bool
}

func (v NullableMoneyInTransaction) Get() *MoneyInTransaction {
	return v.value
}

func (v *NullableMoneyInTransaction) Set(val *MoneyInTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableMoneyInTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableMoneyInTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoneyInTransaction(val *MoneyInTransaction) *NullableMoneyInTransaction {
	return &NullableMoneyInTransaction{value: val, isSet: true}
}

func (v NullableMoneyInTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoneyInTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


