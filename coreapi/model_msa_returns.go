/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
	"time"
)

// checks if the MsaReturns type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MsaReturns{}

// MsaReturns struct for MsaReturns
type MsaReturns struct {
	Active bool `json:"active"`
	AggregatedBalances MsaAggregatedBalances `json:"aggregated_balances"`
	Amount float32 `json:"amount"`
	BusinessToken *string `json:"business_token,omitempty"`
	CampaignToken string `json:"campaign_token"`
	// yyyy-MM-ddTHH:mm:ssZ
	CreatedTime time.Time `json:"created_time"`
	CurrencyCode string `json:"currency_code"`
	// yyyy-MM-ddThh:mm:ssZ
	EndDate *time.Time `json:"end_date,omitempty"`
	Funding Funding `json:"funding"`
	// yyyy-MM-ddTHH:mm:ssZ
	LastModifiedTime time.Time `json:"last_modified_time"`
	// yyyy-MM-ddThh:mm:ssZ
	LastTransactionDate time.Time `json:"last_transaction_date"`
	OrderBalances MsaBalances `json:"order_balances"`
	OriginalOrderToken string `json:"original_order_token"`
	RewardAmount float32 `json:"reward_amount"`
	RewardTriggerAmount float32 `json:"reward_trigger_amount"`
	// yyyy-MM-ddThh:mm:ssZ
	StartDate *time.Time `json:"start_date,omitempty"`
	Token *string `json:"token,omitempty"`
	TransactionToken string `json:"transaction_token"`
	UnloadedAmount *float32 `json:"unloaded_amount,omitempty"`
	UserToken *string `json:"user_token,omitempty"`
}

// NewMsaReturns instantiates a new MsaReturns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMsaReturns(active bool, aggregatedBalances MsaAggregatedBalances, amount float32, campaignToken string, createdTime time.Time, currencyCode string, funding Funding, lastModifiedTime time.Time, lastTransactionDate time.Time, orderBalances MsaBalances, originalOrderToken string, rewardAmount float32, rewardTriggerAmount float32, transactionToken string) *MsaReturns {
	this := MsaReturns{}
	this.Active = active
	this.AggregatedBalances = aggregatedBalances
	this.Amount = amount
	this.CampaignToken = campaignToken
	this.CreatedTime = createdTime
	this.CurrencyCode = currencyCode
	this.Funding = funding
	this.LastModifiedTime = lastModifiedTime
	this.LastTransactionDate = lastTransactionDate
	this.OrderBalances = orderBalances
	this.OriginalOrderToken = originalOrderToken
	this.RewardAmount = rewardAmount
	this.RewardTriggerAmount = rewardTriggerAmount
	this.TransactionToken = transactionToken
	return &this
}

// NewMsaReturnsWithDefaults instantiates a new MsaReturns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMsaReturnsWithDefaults() *MsaReturns {
	this := MsaReturns{}
	var active bool = false
	this.Active = active
	return &this
}

// GetActive returns the Active field value
func (o *MsaReturns) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *MsaReturns) SetActive(v bool) {
	o.Active = v
}

// GetAggregatedBalances returns the AggregatedBalances field value
func (o *MsaReturns) GetAggregatedBalances() MsaAggregatedBalances {
	if o == nil {
		var ret MsaAggregatedBalances
		return ret
	}

	return o.AggregatedBalances
}

// GetAggregatedBalancesOk returns a tuple with the AggregatedBalances field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetAggregatedBalancesOk() (*MsaAggregatedBalances, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregatedBalances, true
}

// SetAggregatedBalances sets field value
func (o *MsaReturns) SetAggregatedBalances(v MsaAggregatedBalances) {
	o.AggregatedBalances = v
}

// GetAmount returns the Amount field value
func (o *MsaReturns) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *MsaReturns) SetAmount(v float32) {
	o.Amount = v
}

// GetBusinessToken returns the BusinessToken field value if set, zero value otherwise.
func (o *MsaReturns) GetBusinessToken() string {
	if o == nil || IsNil(o.BusinessToken) {
		var ret string
		return ret
	}
	return *o.BusinessToken
}

// GetBusinessTokenOk returns a tuple with the BusinessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetBusinessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessToken) {
		return nil, false
	}
	return o.BusinessToken, true
}

// HasBusinessToken returns a boolean if a field has been set.
func (o *MsaReturns) HasBusinessToken() bool {
	if o != nil && !IsNil(o.BusinessToken) {
		return true
	}

	return false
}

// SetBusinessToken gets a reference to the given string and assigns it to the BusinessToken field.
func (o *MsaReturns) SetBusinessToken(v string) {
	o.BusinessToken = &v
}

// GetCampaignToken returns the CampaignToken field value
func (o *MsaReturns) GetCampaignToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CampaignToken
}

// GetCampaignTokenOk returns a tuple with the CampaignToken field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetCampaignTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CampaignToken, true
}

// SetCampaignToken sets field value
func (o *MsaReturns) SetCampaignToken(v string) {
	o.CampaignToken = v
}

// GetCreatedTime returns the CreatedTime field value
func (o *MsaReturns) GetCreatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *MsaReturns) SetCreatedTime(v time.Time) {
	o.CreatedTime = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *MsaReturns) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *MsaReturns) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *MsaReturns) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *MsaReturns) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *MsaReturns) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetFunding returns the Funding field value
func (o *MsaReturns) GetFunding() Funding {
	if o == nil {
		var ret Funding
		return ret
	}

	return o.Funding
}

// GetFundingOk returns a tuple with the Funding field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetFundingOk() (*Funding, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Funding, true
}

// SetFunding sets field value
func (o *MsaReturns) SetFunding(v Funding) {
	o.Funding = v
}

// GetLastModifiedTime returns the LastModifiedTime field value
func (o *MsaReturns) GetLastModifiedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifiedTime, true
}

// SetLastModifiedTime sets field value
func (o *MsaReturns) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = v
}

// GetLastTransactionDate returns the LastTransactionDate field value
func (o *MsaReturns) GetLastTransactionDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastTransactionDate
}

// GetLastTransactionDateOk returns a tuple with the LastTransactionDate field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetLastTransactionDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastTransactionDate, true
}

// SetLastTransactionDate sets field value
func (o *MsaReturns) SetLastTransactionDate(v time.Time) {
	o.LastTransactionDate = v
}

// GetOrderBalances returns the OrderBalances field value
func (o *MsaReturns) GetOrderBalances() MsaBalances {
	if o == nil {
		var ret MsaBalances
		return ret
	}

	return o.OrderBalances
}

// GetOrderBalancesOk returns a tuple with the OrderBalances field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetOrderBalancesOk() (*MsaBalances, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderBalances, true
}

// SetOrderBalances sets field value
func (o *MsaReturns) SetOrderBalances(v MsaBalances) {
	o.OrderBalances = v
}

// GetOriginalOrderToken returns the OriginalOrderToken field value
func (o *MsaReturns) GetOriginalOrderToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalOrderToken
}

// GetOriginalOrderTokenOk returns a tuple with the OriginalOrderToken field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetOriginalOrderTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalOrderToken, true
}

// SetOriginalOrderToken sets field value
func (o *MsaReturns) SetOriginalOrderToken(v string) {
	o.OriginalOrderToken = v
}

// GetRewardAmount returns the RewardAmount field value
func (o *MsaReturns) GetRewardAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RewardAmount
}

// GetRewardAmountOk returns a tuple with the RewardAmount field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetRewardAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RewardAmount, true
}

// SetRewardAmount sets field value
func (o *MsaReturns) SetRewardAmount(v float32) {
	o.RewardAmount = v
}

// GetRewardTriggerAmount returns the RewardTriggerAmount field value
func (o *MsaReturns) GetRewardTriggerAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RewardTriggerAmount
}

// GetRewardTriggerAmountOk returns a tuple with the RewardTriggerAmount field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetRewardTriggerAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RewardTriggerAmount, true
}

// SetRewardTriggerAmount sets field value
func (o *MsaReturns) SetRewardTriggerAmount(v float32) {
	o.RewardTriggerAmount = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *MsaReturns) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *MsaReturns) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *MsaReturns) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *MsaReturns) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *MsaReturns) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *MsaReturns) SetToken(v string) {
	o.Token = &v
}

// GetTransactionToken returns the TransactionToken field value
func (o *MsaReturns) GetTransactionToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionToken
}

// GetTransactionTokenOk returns a tuple with the TransactionToken field value
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetTransactionTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionToken, true
}

// SetTransactionToken sets field value
func (o *MsaReturns) SetTransactionToken(v string) {
	o.TransactionToken = v
}

// GetUnloadedAmount returns the UnloadedAmount field value if set, zero value otherwise.
func (o *MsaReturns) GetUnloadedAmount() float32 {
	if o == nil || IsNil(o.UnloadedAmount) {
		var ret float32
		return ret
	}
	return *o.UnloadedAmount
}

// GetUnloadedAmountOk returns a tuple with the UnloadedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetUnloadedAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.UnloadedAmount) {
		return nil, false
	}
	return o.UnloadedAmount, true
}

// HasUnloadedAmount returns a boolean if a field has been set.
func (o *MsaReturns) HasUnloadedAmount() bool {
	if o != nil && !IsNil(o.UnloadedAmount) {
		return true
	}

	return false
}

// SetUnloadedAmount gets a reference to the given float32 and assigns it to the UnloadedAmount field.
func (o *MsaReturns) SetUnloadedAmount(v float32) {
	o.UnloadedAmount = &v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *MsaReturns) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaReturns) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *MsaReturns) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *MsaReturns) SetUserToken(v string) {
	o.UserToken = &v
}

func (o MsaReturns) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MsaReturns) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active"] = o.Active
	toSerialize["aggregated_balances"] = o.AggregatedBalances
	toSerialize["amount"] = o.Amount
	if !IsNil(o.BusinessToken) {
		toSerialize["business_token"] = o.BusinessToken
	}
	toSerialize["campaign_token"] = o.CampaignToken
	toSerialize["created_time"] = o.CreatedTime
	toSerialize["currency_code"] = o.CurrencyCode
	if !IsNil(o.EndDate) {
		toSerialize["end_date"] = o.EndDate
	}
	toSerialize["funding"] = o.Funding
	toSerialize["last_modified_time"] = o.LastModifiedTime
	toSerialize["last_transaction_date"] = o.LastTransactionDate
	toSerialize["order_balances"] = o.OrderBalances
	toSerialize["original_order_token"] = o.OriginalOrderToken
	toSerialize["reward_amount"] = o.RewardAmount
	toSerialize["reward_trigger_amount"] = o.RewardTriggerAmount
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	toSerialize["transaction_token"] = o.TransactionToken
	if !IsNil(o.UnloadedAmount) {
		toSerialize["unloaded_amount"] = o.UnloadedAmount
	}
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	return toSerialize, nil
}

type NullableMsaReturns struct {
	value *MsaReturns
	isSet bool
}

func (v NullableMsaReturns) Get() *MsaReturns {
	return v.value
}

func (v *NullableMsaReturns) Set(val *MsaReturns) {
	v.value = val
	v.isSet = true
}

func (v NullableMsaReturns) IsSet() bool {
	return v.isSet
}

func (v *NullableMsaReturns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMsaReturns(val *MsaReturns) *NullableMsaReturns {
	return &NullableMsaReturns{value: val, isSet: true}
}

func (v NullableMsaReturns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMsaReturns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


