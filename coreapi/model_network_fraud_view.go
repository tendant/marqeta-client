/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the NetworkFraudView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkFraudView{}

// NetworkFraudView Contains network-provided information about fraud determinations.
type NetworkFraudView struct {
	// Network-provided risk score for the transaction. A higher score indicates higher risk. Useful for making authorization decisions.
	TransactionRiskScore *int32 `json:"transaction_risk_score,omitempty"`
	// _(Mastercard only)_ Unique code that describes the main driver of the `transaction_risk_score`.
	TransactionRiskScoreReasonCode *string `json:"transaction_risk_score_reason_code,omitempty"`
	// _(Mastercard only)_ Description of the `transaction_risk_score_reason_code`.
	TransactionRiskScoreReasonDescription *string `json:"transaction_risk_score_reason_description,omitempty"`
	// _(Visa only)_ Account holder risk condition code evaluated by the card network. A higher score indicates a greater likelihood that the card number is compromised.
	AccountRiskScore *string `json:"account_risk_score,omitempty"`
	// _(Visa only)_ Unique code that describes the main driver of the `account_risk_score`.
	AccountRiskScoreReasonCode *string `json:"account_risk_score_reason_code,omitempty"`
}

// NewNetworkFraudView instantiates a new NetworkFraudView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkFraudView() *NetworkFraudView {
	this := NetworkFraudView{}
	return &this
}

// NewNetworkFraudViewWithDefaults instantiates a new NetworkFraudView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkFraudViewWithDefaults() *NetworkFraudView {
	this := NetworkFraudView{}
	return &this
}

// GetTransactionRiskScore returns the TransactionRiskScore field value if set, zero value otherwise.
func (o *NetworkFraudView) GetTransactionRiskScore() int32 {
	if o == nil || IsNil(o.TransactionRiskScore) {
		var ret int32
		return ret
	}
	return *o.TransactionRiskScore
}

// GetTransactionRiskScoreOk returns a tuple with the TransactionRiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkFraudView) GetTransactionRiskScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.TransactionRiskScore) {
		return nil, false
	}
	return o.TransactionRiskScore, true
}

// HasTransactionRiskScore returns a boolean if a field has been set.
func (o *NetworkFraudView) HasTransactionRiskScore() bool {
	if o != nil && !IsNil(o.TransactionRiskScore) {
		return true
	}

	return false
}

// SetTransactionRiskScore gets a reference to the given int32 and assigns it to the TransactionRiskScore field.
func (o *NetworkFraudView) SetTransactionRiskScore(v int32) {
	o.TransactionRiskScore = &v
}

// GetTransactionRiskScoreReasonCode returns the TransactionRiskScoreReasonCode field value if set, zero value otherwise.
func (o *NetworkFraudView) GetTransactionRiskScoreReasonCode() string {
	if o == nil || IsNil(o.TransactionRiskScoreReasonCode) {
		var ret string
		return ret
	}
	return *o.TransactionRiskScoreReasonCode
}

// GetTransactionRiskScoreReasonCodeOk returns a tuple with the TransactionRiskScoreReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkFraudView) GetTransactionRiskScoreReasonCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionRiskScoreReasonCode) {
		return nil, false
	}
	return o.TransactionRiskScoreReasonCode, true
}

// HasTransactionRiskScoreReasonCode returns a boolean if a field has been set.
func (o *NetworkFraudView) HasTransactionRiskScoreReasonCode() bool {
	if o != nil && !IsNil(o.TransactionRiskScoreReasonCode) {
		return true
	}

	return false
}

// SetTransactionRiskScoreReasonCode gets a reference to the given string and assigns it to the TransactionRiskScoreReasonCode field.
func (o *NetworkFraudView) SetTransactionRiskScoreReasonCode(v string) {
	o.TransactionRiskScoreReasonCode = &v
}

// GetTransactionRiskScoreReasonDescription returns the TransactionRiskScoreReasonDescription field value if set, zero value otherwise.
func (o *NetworkFraudView) GetTransactionRiskScoreReasonDescription() string {
	if o == nil || IsNil(o.TransactionRiskScoreReasonDescription) {
		var ret string
		return ret
	}
	return *o.TransactionRiskScoreReasonDescription
}

// GetTransactionRiskScoreReasonDescriptionOk returns a tuple with the TransactionRiskScoreReasonDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkFraudView) GetTransactionRiskScoreReasonDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionRiskScoreReasonDescription) {
		return nil, false
	}
	return o.TransactionRiskScoreReasonDescription, true
}

// HasTransactionRiskScoreReasonDescription returns a boolean if a field has been set.
func (o *NetworkFraudView) HasTransactionRiskScoreReasonDescription() bool {
	if o != nil && !IsNil(o.TransactionRiskScoreReasonDescription) {
		return true
	}

	return false
}

// SetTransactionRiskScoreReasonDescription gets a reference to the given string and assigns it to the TransactionRiskScoreReasonDescription field.
func (o *NetworkFraudView) SetTransactionRiskScoreReasonDescription(v string) {
	o.TransactionRiskScoreReasonDescription = &v
}

// GetAccountRiskScore returns the AccountRiskScore field value if set, zero value otherwise.
func (o *NetworkFraudView) GetAccountRiskScore() string {
	if o == nil || IsNil(o.AccountRiskScore) {
		var ret string
		return ret
	}
	return *o.AccountRiskScore
}

// GetAccountRiskScoreOk returns a tuple with the AccountRiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkFraudView) GetAccountRiskScoreOk() (*string, bool) {
	if o == nil || IsNil(o.AccountRiskScore) {
		return nil, false
	}
	return o.AccountRiskScore, true
}

// HasAccountRiskScore returns a boolean if a field has been set.
func (o *NetworkFraudView) HasAccountRiskScore() bool {
	if o != nil && !IsNil(o.AccountRiskScore) {
		return true
	}

	return false
}

// SetAccountRiskScore gets a reference to the given string and assigns it to the AccountRiskScore field.
func (o *NetworkFraudView) SetAccountRiskScore(v string) {
	o.AccountRiskScore = &v
}

// GetAccountRiskScoreReasonCode returns the AccountRiskScoreReasonCode field value if set, zero value otherwise.
func (o *NetworkFraudView) GetAccountRiskScoreReasonCode() string {
	if o == nil || IsNil(o.AccountRiskScoreReasonCode) {
		var ret string
		return ret
	}
	return *o.AccountRiskScoreReasonCode
}

// GetAccountRiskScoreReasonCodeOk returns a tuple with the AccountRiskScoreReasonCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkFraudView) GetAccountRiskScoreReasonCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountRiskScoreReasonCode) {
		return nil, false
	}
	return o.AccountRiskScoreReasonCode, true
}

// HasAccountRiskScoreReasonCode returns a boolean if a field has been set.
func (o *NetworkFraudView) HasAccountRiskScoreReasonCode() bool {
	if o != nil && !IsNil(o.AccountRiskScoreReasonCode) {
		return true
	}

	return false
}

// SetAccountRiskScoreReasonCode gets a reference to the given string and assigns it to the AccountRiskScoreReasonCode field.
func (o *NetworkFraudView) SetAccountRiskScoreReasonCode(v string) {
	o.AccountRiskScoreReasonCode = &v
}

func (o NetworkFraudView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkFraudView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransactionRiskScore) {
		toSerialize["transaction_risk_score"] = o.TransactionRiskScore
	}
	if !IsNil(o.TransactionRiskScoreReasonCode) {
		toSerialize["transaction_risk_score_reason_code"] = o.TransactionRiskScoreReasonCode
	}
	if !IsNil(o.TransactionRiskScoreReasonDescription) {
		toSerialize["transaction_risk_score_reason_description"] = o.TransactionRiskScoreReasonDescription
	}
	if !IsNil(o.AccountRiskScore) {
		toSerialize["account_risk_score"] = o.AccountRiskScore
	}
	if !IsNil(o.AccountRiskScoreReasonCode) {
		toSerialize["account_risk_score_reason_code"] = o.AccountRiskScoreReasonCode
	}
	return toSerialize, nil
}

type NullableNetworkFraudView struct {
	value *NetworkFraudView
	isSet bool
}

func (v NullableNetworkFraudView) Get() *NetworkFraudView {
	return v.value
}

func (v *NullableNetworkFraudView) Set(val *NetworkFraudView) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkFraudView) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkFraudView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkFraudView(val *NetworkFraudView) *NullableNetworkFraudView {
	return &NullableNetworkFraudView{value: val, isSet: true}
}

func (v NullableNetworkFraudView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkFraudView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


