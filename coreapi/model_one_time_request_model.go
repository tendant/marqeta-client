/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the OneTimeRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OneTimeRequestModel{}

// OneTimeRequestModel struct for OneTimeRequestModel
type OneTimeRequestModel struct {
	// Cardholder email address.  Required when neither the user token nor the admin access token is provided as the Basic Authentication password (case #3).
	Email *string `json:"email,omitempty"`
	// Password to the cardholder's user account on the Marqeta platform.  Required when neither the user token nor the admin access token is provided as the Basic Authentication password (case #3).
	Password *string `json:"password,omitempty"`
	// Identifies the cardholder whose data is accessed. Send a `GET` request to `/users` to retrieve cardholder tokens.  Required when the Basic Authentication password is set to an admin access token (case #2).
	UserToken *string `json:"user_token,omitempty"`
}

// NewOneTimeRequestModel instantiates a new OneTimeRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOneTimeRequestModel() *OneTimeRequestModel {
	this := OneTimeRequestModel{}
	return &this
}

// NewOneTimeRequestModelWithDefaults instantiates a new OneTimeRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOneTimeRequestModelWithDefaults() *OneTimeRequestModel {
	this := OneTimeRequestModel{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OneTimeRequestModel) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OneTimeRequestModel) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OneTimeRequestModel) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OneTimeRequestModel) SetEmail(v string) {
	o.Email = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *OneTimeRequestModel) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OneTimeRequestModel) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *OneTimeRequestModel) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *OneTimeRequestModel) SetPassword(v string) {
	o.Password = &v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *OneTimeRequestModel) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OneTimeRequestModel) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *OneTimeRequestModel) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *OneTimeRequestModel) SetUserToken(v string) {
	o.UserToken = &v
}

func (o OneTimeRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OneTimeRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	return toSerialize, nil
}

type NullableOneTimeRequestModel struct {
	value *OneTimeRequestModel
	isSet bool
}

func (v NullableOneTimeRequestModel) Get() *OneTimeRequestModel {
	return v.value
}

func (v *NullableOneTimeRequestModel) Set(val *OneTimeRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableOneTimeRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableOneTimeRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOneTimeRequestModel(val *OneTimeRequestModel) *NullableOneTimeRequestModel {
	return &NullableOneTimeRequestModel{value: val, isSet: true}
}

func (v NullableOneTimeRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOneTimeRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


