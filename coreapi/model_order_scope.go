/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the OrderScope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderScope{}

// OrderScope Defines the balance threshold and reload amounts.
type OrderScope struct {
	Gpa *Gpa `json:"gpa,omitempty"`
	Msa *Msa `json:"msa,omitempty"`
}

// NewOrderScope instantiates a new OrderScope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderScope() *OrderScope {
	this := OrderScope{}
	return &this
}

// NewOrderScopeWithDefaults instantiates a new OrderScope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderScopeWithDefaults() *OrderScope {
	this := OrderScope{}
	return &this
}

// GetGpa returns the Gpa field value if set, zero value otherwise.
func (o *OrderScope) GetGpa() Gpa {
	if o == nil || IsNil(o.Gpa) {
		var ret Gpa
		return ret
	}
	return *o.Gpa
}

// GetGpaOk returns a tuple with the Gpa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderScope) GetGpaOk() (*Gpa, bool) {
	if o == nil || IsNil(o.Gpa) {
		return nil, false
	}
	return o.Gpa, true
}

// HasGpa returns a boolean if a field has been set.
func (o *OrderScope) HasGpa() bool {
	if o != nil && !IsNil(o.Gpa) {
		return true
	}

	return false
}

// SetGpa gets a reference to the given Gpa and assigns it to the Gpa field.
func (o *OrderScope) SetGpa(v Gpa) {
	o.Gpa = &v
}

// GetMsa returns the Msa field value if set, zero value otherwise.
func (o *OrderScope) GetMsa() Msa {
	if o == nil || IsNil(o.Msa) {
		var ret Msa
		return ret
	}
	return *o.Msa
}

// GetMsaOk returns a tuple with the Msa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderScope) GetMsaOk() (*Msa, bool) {
	if o == nil || IsNil(o.Msa) {
		return nil, false
	}
	return o.Msa, true
}

// HasMsa returns a boolean if a field has been set.
func (o *OrderScope) HasMsa() bool {
	if o != nil && !IsNil(o.Msa) {
		return true
	}

	return false
}

// SetMsa gets a reference to the given Msa and assigns it to the Msa field.
func (o *OrderScope) SetMsa(v Msa) {
	o.Msa = &v
}

func (o OrderScope) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderScope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Gpa) {
		toSerialize["gpa"] = o.Gpa
	}
	if !IsNil(o.Msa) {
		toSerialize["msa"] = o.Msa
	}
	return toSerialize, nil
}

type NullableOrderScope struct {
	value *OrderScope
	isSet bool
}

func (v NullableOrderScope) Get() *OrderScope {
	return v.value
}

func (v *NullableOrderScope) Set(val *OrderScope) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderScope) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderScope(val *OrderScope) *NullableOrderScope {
	return &NullableOrderScope{value: val, isSet: true}
}

func (v NullableOrderScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


