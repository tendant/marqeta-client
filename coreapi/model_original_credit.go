/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the OriginalCredit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginalCredit{}

// OriginalCredit Contains information about an original credit transaction (OCT), which enables the cardholder to receive funds on the specified card from an external source via the card network.
type OriginalCredit struct {
	DeferredHoldBy *string `json:"deferred_hold_by,omitempty"`
	// Indicates that Fast Funds are enabled for dual-message original credit transactions. If the value of this field is `true`, you must make the funds available to your cardholder within 30 minutes of the transaction.
	FastFundsEnabled *bool `json:"fast_funds_enabled,omitempty"`
	// Sender's account from which the OCT draws funds.
	FundingSource *string `json:"funding_source,omitempty"`
	// Sanctions screening score to assist with meeting Anti-Money Laundering (AML) obligations.  Higher scores indicate that the sender's data more closely resembles an entry on the regulatory watchlist.  A value of 999 means that no screening score is available.
	ScreeningScore *string `json:"screening_score,omitempty"`
	// The type of account from which the OCT draws funds.
	SenderAccountType *string `json:"sender_account_type,omitempty"`
	// Sender's street address.
	SenderAddress *string `json:"sender_address,omitempty"`
	// Sender's city.
	SenderCity *string `json:"sender_city,omitempty"`
	// Sender's country.
	SenderCountry *string `json:"sender_country,omitempty"`
	// Full name of the sender.
	SenderName *string `json:"sender_name,omitempty"`
	// Sender's state.
	SenderState *string `json:"sender_state,omitempty"`
	// The purpose of the original credit transaction.
	TransactionPurpose *string `json:"transaction_purpose,omitempty"`
	// Type of original credit transaction.
	TransactionType *string `json:"transaction_type,omitempty"`
}

// NewOriginalCredit instantiates a new OriginalCredit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginalCredit() *OriginalCredit {
	this := OriginalCredit{}
	return &this
}

// NewOriginalCreditWithDefaults instantiates a new OriginalCredit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginalCreditWithDefaults() *OriginalCredit {
	this := OriginalCredit{}
	return &this
}

// GetDeferredHoldBy returns the DeferredHoldBy field value if set, zero value otherwise.
func (o *OriginalCredit) GetDeferredHoldBy() string {
	if o == nil || IsNil(o.DeferredHoldBy) {
		var ret string
		return ret
	}
	return *o.DeferredHoldBy
}

// GetDeferredHoldByOk returns a tuple with the DeferredHoldBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetDeferredHoldByOk() (*string, bool) {
	if o == nil || IsNil(o.DeferredHoldBy) {
		return nil, false
	}
	return o.DeferredHoldBy, true
}

// HasDeferredHoldBy returns a boolean if a field has been set.
func (o *OriginalCredit) HasDeferredHoldBy() bool {
	if o != nil && !IsNil(o.DeferredHoldBy) {
		return true
	}

	return false
}

// SetDeferredHoldBy gets a reference to the given string and assigns it to the DeferredHoldBy field.
func (o *OriginalCredit) SetDeferredHoldBy(v string) {
	o.DeferredHoldBy = &v
}

// GetFastFundsEnabled returns the FastFundsEnabled field value if set, zero value otherwise.
func (o *OriginalCredit) GetFastFundsEnabled() bool {
	if o == nil || IsNil(o.FastFundsEnabled) {
		var ret bool
		return ret
	}
	return *o.FastFundsEnabled
}

// GetFastFundsEnabledOk returns a tuple with the FastFundsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetFastFundsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FastFundsEnabled) {
		return nil, false
	}
	return o.FastFundsEnabled, true
}

// HasFastFundsEnabled returns a boolean if a field has been set.
func (o *OriginalCredit) HasFastFundsEnabled() bool {
	if o != nil && !IsNil(o.FastFundsEnabled) {
		return true
	}

	return false
}

// SetFastFundsEnabled gets a reference to the given bool and assigns it to the FastFundsEnabled field.
func (o *OriginalCredit) SetFastFundsEnabled(v bool) {
	o.FastFundsEnabled = &v
}

// GetFundingSource returns the FundingSource field value if set, zero value otherwise.
func (o *OriginalCredit) GetFundingSource() string {
	if o == nil || IsNil(o.FundingSource) {
		var ret string
		return ret
	}
	return *o.FundingSource
}

// GetFundingSourceOk returns a tuple with the FundingSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetFundingSourceOk() (*string, bool) {
	if o == nil || IsNil(o.FundingSource) {
		return nil, false
	}
	return o.FundingSource, true
}

// HasFundingSource returns a boolean if a field has been set.
func (o *OriginalCredit) HasFundingSource() bool {
	if o != nil && !IsNil(o.FundingSource) {
		return true
	}

	return false
}

// SetFundingSource gets a reference to the given string and assigns it to the FundingSource field.
func (o *OriginalCredit) SetFundingSource(v string) {
	o.FundingSource = &v
}

// GetScreeningScore returns the ScreeningScore field value if set, zero value otherwise.
func (o *OriginalCredit) GetScreeningScore() string {
	if o == nil || IsNil(o.ScreeningScore) {
		var ret string
		return ret
	}
	return *o.ScreeningScore
}

// GetScreeningScoreOk returns a tuple with the ScreeningScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetScreeningScoreOk() (*string, bool) {
	if o == nil || IsNil(o.ScreeningScore) {
		return nil, false
	}
	return o.ScreeningScore, true
}

// HasScreeningScore returns a boolean if a field has been set.
func (o *OriginalCredit) HasScreeningScore() bool {
	if o != nil && !IsNil(o.ScreeningScore) {
		return true
	}

	return false
}

// SetScreeningScore gets a reference to the given string and assigns it to the ScreeningScore field.
func (o *OriginalCredit) SetScreeningScore(v string) {
	o.ScreeningScore = &v
}

// GetSenderAccountType returns the SenderAccountType field value if set, zero value otherwise.
func (o *OriginalCredit) GetSenderAccountType() string {
	if o == nil || IsNil(o.SenderAccountType) {
		var ret string
		return ret
	}
	return *o.SenderAccountType
}

// GetSenderAccountTypeOk returns a tuple with the SenderAccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetSenderAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SenderAccountType) {
		return nil, false
	}
	return o.SenderAccountType, true
}

// HasSenderAccountType returns a boolean if a field has been set.
func (o *OriginalCredit) HasSenderAccountType() bool {
	if o != nil && !IsNil(o.SenderAccountType) {
		return true
	}

	return false
}

// SetSenderAccountType gets a reference to the given string and assigns it to the SenderAccountType field.
func (o *OriginalCredit) SetSenderAccountType(v string) {
	o.SenderAccountType = &v
}

// GetSenderAddress returns the SenderAddress field value if set, zero value otherwise.
func (o *OriginalCredit) GetSenderAddress() string {
	if o == nil || IsNil(o.SenderAddress) {
		var ret string
		return ret
	}
	return *o.SenderAddress
}

// GetSenderAddressOk returns a tuple with the SenderAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetSenderAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SenderAddress) {
		return nil, false
	}
	return o.SenderAddress, true
}

// HasSenderAddress returns a boolean if a field has been set.
func (o *OriginalCredit) HasSenderAddress() bool {
	if o != nil && !IsNil(o.SenderAddress) {
		return true
	}

	return false
}

// SetSenderAddress gets a reference to the given string and assigns it to the SenderAddress field.
func (o *OriginalCredit) SetSenderAddress(v string) {
	o.SenderAddress = &v
}

// GetSenderCity returns the SenderCity field value if set, zero value otherwise.
func (o *OriginalCredit) GetSenderCity() string {
	if o == nil || IsNil(o.SenderCity) {
		var ret string
		return ret
	}
	return *o.SenderCity
}

// GetSenderCityOk returns a tuple with the SenderCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetSenderCityOk() (*string, bool) {
	if o == nil || IsNil(o.SenderCity) {
		return nil, false
	}
	return o.SenderCity, true
}

// HasSenderCity returns a boolean if a field has been set.
func (o *OriginalCredit) HasSenderCity() bool {
	if o != nil && !IsNil(o.SenderCity) {
		return true
	}

	return false
}

// SetSenderCity gets a reference to the given string and assigns it to the SenderCity field.
func (o *OriginalCredit) SetSenderCity(v string) {
	o.SenderCity = &v
}

// GetSenderCountry returns the SenderCountry field value if set, zero value otherwise.
func (o *OriginalCredit) GetSenderCountry() string {
	if o == nil || IsNil(o.SenderCountry) {
		var ret string
		return ret
	}
	return *o.SenderCountry
}

// GetSenderCountryOk returns a tuple with the SenderCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetSenderCountryOk() (*string, bool) {
	if o == nil || IsNil(o.SenderCountry) {
		return nil, false
	}
	return o.SenderCountry, true
}

// HasSenderCountry returns a boolean if a field has been set.
func (o *OriginalCredit) HasSenderCountry() bool {
	if o != nil && !IsNil(o.SenderCountry) {
		return true
	}

	return false
}

// SetSenderCountry gets a reference to the given string and assigns it to the SenderCountry field.
func (o *OriginalCredit) SetSenderCountry(v string) {
	o.SenderCountry = &v
}

// GetSenderName returns the SenderName field value if set, zero value otherwise.
func (o *OriginalCredit) GetSenderName() string {
	if o == nil || IsNil(o.SenderName) {
		var ret string
		return ret
	}
	return *o.SenderName
}

// GetSenderNameOk returns a tuple with the SenderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetSenderNameOk() (*string, bool) {
	if o == nil || IsNil(o.SenderName) {
		return nil, false
	}
	return o.SenderName, true
}

// HasSenderName returns a boolean if a field has been set.
func (o *OriginalCredit) HasSenderName() bool {
	if o != nil && !IsNil(o.SenderName) {
		return true
	}

	return false
}

// SetSenderName gets a reference to the given string and assigns it to the SenderName field.
func (o *OriginalCredit) SetSenderName(v string) {
	o.SenderName = &v
}

// GetSenderState returns the SenderState field value if set, zero value otherwise.
func (o *OriginalCredit) GetSenderState() string {
	if o == nil || IsNil(o.SenderState) {
		var ret string
		return ret
	}
	return *o.SenderState
}

// GetSenderStateOk returns a tuple with the SenderState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetSenderStateOk() (*string, bool) {
	if o == nil || IsNil(o.SenderState) {
		return nil, false
	}
	return o.SenderState, true
}

// HasSenderState returns a boolean if a field has been set.
func (o *OriginalCredit) HasSenderState() bool {
	if o != nil && !IsNil(o.SenderState) {
		return true
	}

	return false
}

// SetSenderState gets a reference to the given string and assigns it to the SenderState field.
func (o *OriginalCredit) SetSenderState(v string) {
	o.SenderState = &v
}

// GetTransactionPurpose returns the TransactionPurpose field value if set, zero value otherwise.
func (o *OriginalCredit) GetTransactionPurpose() string {
	if o == nil || IsNil(o.TransactionPurpose) {
		var ret string
		return ret
	}
	return *o.TransactionPurpose
}

// GetTransactionPurposeOk returns a tuple with the TransactionPurpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetTransactionPurposeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionPurpose) {
		return nil, false
	}
	return o.TransactionPurpose, true
}

// HasTransactionPurpose returns a boolean if a field has been set.
func (o *OriginalCredit) HasTransactionPurpose() bool {
	if o != nil && !IsNil(o.TransactionPurpose) {
		return true
	}

	return false
}

// SetTransactionPurpose gets a reference to the given string and assigns it to the TransactionPurpose field.
func (o *OriginalCredit) SetTransactionPurpose(v string) {
	o.TransactionPurpose = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *OriginalCredit) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalCredit) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *OriginalCredit) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *OriginalCredit) SetTransactionType(v string) {
	o.TransactionType = &v
}

func (o OriginalCredit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginalCredit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeferredHoldBy) {
		toSerialize["deferred_hold_by"] = o.DeferredHoldBy
	}
	if !IsNil(o.FastFundsEnabled) {
		toSerialize["fast_funds_enabled"] = o.FastFundsEnabled
	}
	if !IsNil(o.FundingSource) {
		toSerialize["funding_source"] = o.FundingSource
	}
	if !IsNil(o.ScreeningScore) {
		toSerialize["screening_score"] = o.ScreeningScore
	}
	if !IsNil(o.SenderAccountType) {
		toSerialize["sender_account_type"] = o.SenderAccountType
	}
	if !IsNil(o.SenderAddress) {
		toSerialize["sender_address"] = o.SenderAddress
	}
	if !IsNil(o.SenderCity) {
		toSerialize["sender_city"] = o.SenderCity
	}
	if !IsNil(o.SenderCountry) {
		toSerialize["sender_country"] = o.SenderCountry
	}
	if !IsNil(o.SenderName) {
		toSerialize["sender_name"] = o.SenderName
	}
	if !IsNil(o.SenderState) {
		toSerialize["sender_state"] = o.SenderState
	}
	if !IsNil(o.TransactionPurpose) {
		toSerialize["transaction_purpose"] = o.TransactionPurpose
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transaction_type"] = o.TransactionType
	}
	return toSerialize, nil
}

type NullableOriginalCredit struct {
	value *OriginalCredit
	isSet bool
}

func (v NullableOriginalCredit) Get() *OriginalCredit {
	return v.value
}

func (v *NullableOriginalCredit) Set(val *OriginalCredit) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginalCredit) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginalCredit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginalCredit(val *OriginalCredit) *NullableOriginalCredit {
	return &NullableOriginalCredit{value: val, isSet: true}
}

func (v NullableOriginalCredit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginalCredit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


