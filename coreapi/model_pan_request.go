/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the PanRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PanRequest{}

// PanRequest struct for PanRequest
type PanRequest struct {
	// Three-digit card verification value (CVV2) included on the back of the card.  This value cannot be updated.
	CvvNumber *string `json:"cvv_number,omitempty"`
	// Card expiration date.
	Expiration *string `json:"expiration,omitempty"`
	// Primary account number (PAN) of the card whose information you want to retrieve.  Send a `GET` request to `/cards/{token}/showpan` to retrieve the PAN for a specific card.
	Pan string `json:"pan"`
}

// NewPanRequest instantiates a new PanRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPanRequest(pan string) *PanRequest {
	this := PanRequest{}
	this.Pan = pan
	return &this
}

// NewPanRequestWithDefaults instantiates a new PanRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPanRequestWithDefaults() *PanRequest {
	this := PanRequest{}
	return &this
}

// GetCvvNumber returns the CvvNumber field value if set, zero value otherwise.
func (o *PanRequest) GetCvvNumber() string {
	if o == nil || IsNil(o.CvvNumber) {
		var ret string
		return ret
	}
	return *o.CvvNumber
}

// GetCvvNumberOk returns a tuple with the CvvNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PanRequest) GetCvvNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CvvNumber) {
		return nil, false
	}
	return o.CvvNumber, true
}

// HasCvvNumber returns a boolean if a field has been set.
func (o *PanRequest) HasCvvNumber() bool {
	if o != nil && !IsNil(o.CvvNumber) {
		return true
	}

	return false
}

// SetCvvNumber gets a reference to the given string and assigns it to the CvvNumber field.
func (o *PanRequest) SetCvvNumber(v string) {
	o.CvvNumber = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *PanRequest) GetExpiration() string {
	if o == nil || IsNil(o.Expiration) {
		var ret string
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PanRequest) GetExpirationOk() (*string, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *PanRequest) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given string and assigns it to the Expiration field.
func (o *PanRequest) SetExpiration(v string) {
	o.Expiration = &v
}

// GetPan returns the Pan field value
func (o *PanRequest) GetPan() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pan
}

// GetPanOk returns a tuple with the Pan field value
// and a boolean to check if the value has been set.
func (o *PanRequest) GetPanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pan, true
}

// SetPan sets field value
func (o *PanRequest) SetPan(v string) {
	o.Pan = v
}

func (o PanRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PanRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CvvNumber) {
		toSerialize["cvv_number"] = o.CvvNumber
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	toSerialize["pan"] = o.Pan
	return toSerialize, nil
}

type NullablePanRequest struct {
	value *PanRequest
	isSet bool
}

func (v NullablePanRequest) Get() *PanRequest {
	return v.value
}

func (v *NullablePanRequest) Set(val *PanRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePanRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePanRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePanRequest(val *PanRequest) *NullablePanRequest {
	return &NullablePanRequest{value: val, isSet: true}
}

func (v NullablePanRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePanRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


