/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the PasswordUpdateModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PasswordUpdateModel{}

// PasswordUpdateModel struct for PasswordUpdateModel
type PasswordUpdateModel struct {
	// Current password to the cardholder's user account on the Marqeta platform.
	CurrentPassword string `json:"current_password"`
	// New password to the cardholder's user account on the Marqeta platform.  * Must contain at least one numeral + * Must contain at least one lowercase letter + * Must contain at least one uppercase letter + * Must contain at least one of these symbols: `@ # $ % ! ^ & * ( ) \\ _ + ~ ` - = [ ] { } , ; : ' \" , . / < > ?`
	NewPassword string `json:"new_password"`
}

// NewPasswordUpdateModel instantiates a new PasswordUpdateModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPasswordUpdateModel(currentPassword string, newPassword string) *PasswordUpdateModel {
	this := PasswordUpdateModel{}
	this.CurrentPassword = currentPassword
	this.NewPassword = newPassword
	return &this
}

// NewPasswordUpdateModelWithDefaults instantiates a new PasswordUpdateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPasswordUpdateModelWithDefaults() *PasswordUpdateModel {
	this := PasswordUpdateModel{}
	return &this
}

// GetCurrentPassword returns the CurrentPassword field value
func (o *PasswordUpdateModel) GetCurrentPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrentPassword
}

// GetCurrentPasswordOk returns a tuple with the CurrentPassword field value
// and a boolean to check if the value has been set.
func (o *PasswordUpdateModel) GetCurrentPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentPassword, true
}

// SetCurrentPassword sets field value
func (o *PasswordUpdateModel) SetCurrentPassword(v string) {
	o.CurrentPassword = v
}

// GetNewPassword returns the NewPassword field value
func (o *PasswordUpdateModel) GetNewPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value
// and a boolean to check if the value has been set.
func (o *PasswordUpdateModel) GetNewPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewPassword, true
}

// SetNewPassword sets field value
func (o *PasswordUpdateModel) SetNewPassword(v string) {
	o.NewPassword = v
}

func (o PasswordUpdateModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PasswordUpdateModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["current_password"] = o.CurrentPassword
	toSerialize["new_password"] = o.NewPassword
	return toSerialize, nil
}

type NullablePasswordUpdateModel struct {
	value *PasswordUpdateModel
	isSet bool
}

func (v NullablePasswordUpdateModel) Get() *PasswordUpdateModel {
	return v.value
}

func (v *NullablePasswordUpdateModel) Set(val *PasswordUpdateModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePasswordUpdateModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePasswordUpdateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePasswordUpdateModel(val *PasswordUpdateModel) *NullablePasswordUpdateModel {
	return &NullablePasswordUpdateModel{value: val, isSet: true}
}

func (v NullablePasswordUpdateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePasswordUpdateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


