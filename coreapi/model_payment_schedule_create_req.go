/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the PaymentScheduleCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentScheduleCreateReq{}

// PaymentScheduleCreateReq Information to create a payment schedule.
type PaymentScheduleCreateReq struct {
	// Amount of the payment.  Required if `amount_category` is `FIXED`.
	Amount *float32 `json:"amount,omitempty"`
	AmountCategory PaymentScheduleAmountCategory `json:"amount_category"`
	CurrencyCode CurrencyCode `json:"currency_code"`
	// Description of the payment schedule.
	Description *string `json:"description,omitempty"`
	Frequency PaymentScheduleFrequency `json:"frequency"`
	// The date to make a one-time payment.  Required if frequency is `ONCE`.
	NextPaymentImpactDate *string `json:"next_payment_impact_date,omitempty"`
	// Day on which monthly payments are made.  Required if `frequency` is `MONTHLY`.
	PaymentDay *string `json:"payment_day,omitempty"`
	// Unique identifier of the payment source.
	PaymentSourceToken string `json:"payment_source_token"`
	// Unique identifier of the payment schedule.
	Token *string `json:"token,omitempty"`
}

// NewPaymentScheduleCreateReq instantiates a new PaymentScheduleCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentScheduleCreateReq(amountCategory PaymentScheduleAmountCategory, currencyCode CurrencyCode, frequency PaymentScheduleFrequency, paymentSourceToken string) *PaymentScheduleCreateReq {
	this := PaymentScheduleCreateReq{}
	this.AmountCategory = amountCategory
	this.CurrencyCode = currencyCode
	this.Frequency = frequency
	this.PaymentSourceToken = paymentSourceToken
	return &this
}

// NewPaymentScheduleCreateReqWithDefaults instantiates a new PaymentScheduleCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentScheduleCreateReqWithDefaults() *PaymentScheduleCreateReq {
	this := PaymentScheduleCreateReq{}
	var currencyCode CurrencyCode = CURRENCYCODE_USD
	this.CurrencyCode = currencyCode
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PaymentScheduleCreateReq) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentScheduleCreateReq) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PaymentScheduleCreateReq) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *PaymentScheduleCreateReq) SetAmount(v float32) {
	o.Amount = &v
}

// GetAmountCategory returns the AmountCategory field value
func (o *PaymentScheduleCreateReq) GetAmountCategory() PaymentScheduleAmountCategory {
	if o == nil {
		var ret PaymentScheduleAmountCategory
		return ret
	}

	return o.AmountCategory
}

// GetAmountCategoryOk returns a tuple with the AmountCategory field value
// and a boolean to check if the value has been set.
func (o *PaymentScheduleCreateReq) GetAmountCategoryOk() (*PaymentScheduleAmountCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountCategory, true
}

// SetAmountCategory sets field value
func (o *PaymentScheduleCreateReq) SetAmountCategory(v PaymentScheduleAmountCategory) {
	o.AmountCategory = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *PaymentScheduleCreateReq) GetCurrencyCode() CurrencyCode {
	if o == nil {
		var ret CurrencyCode
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *PaymentScheduleCreateReq) GetCurrencyCodeOk() (*CurrencyCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *PaymentScheduleCreateReq) SetCurrencyCode(v CurrencyCode) {
	o.CurrencyCode = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PaymentScheduleCreateReq) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentScheduleCreateReq) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PaymentScheduleCreateReq) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PaymentScheduleCreateReq) SetDescription(v string) {
	o.Description = &v
}

// GetFrequency returns the Frequency field value
func (o *PaymentScheduleCreateReq) GetFrequency() PaymentScheduleFrequency {
	if o == nil {
		var ret PaymentScheduleFrequency
		return ret
	}

	return o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value
// and a boolean to check if the value has been set.
func (o *PaymentScheduleCreateReq) GetFrequencyOk() (*PaymentScheduleFrequency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Frequency, true
}

// SetFrequency sets field value
func (o *PaymentScheduleCreateReq) SetFrequency(v PaymentScheduleFrequency) {
	o.Frequency = v
}

// GetNextPaymentImpactDate returns the NextPaymentImpactDate field value if set, zero value otherwise.
func (o *PaymentScheduleCreateReq) GetNextPaymentImpactDate() string {
	if o == nil || IsNil(o.NextPaymentImpactDate) {
		var ret string
		return ret
	}
	return *o.NextPaymentImpactDate
}

// GetNextPaymentImpactDateOk returns a tuple with the NextPaymentImpactDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentScheduleCreateReq) GetNextPaymentImpactDateOk() (*string, bool) {
	if o == nil || IsNil(o.NextPaymentImpactDate) {
		return nil, false
	}
	return o.NextPaymentImpactDate, true
}

// HasNextPaymentImpactDate returns a boolean if a field has been set.
func (o *PaymentScheduleCreateReq) HasNextPaymentImpactDate() bool {
	if o != nil && !IsNil(o.NextPaymentImpactDate) {
		return true
	}

	return false
}

// SetNextPaymentImpactDate gets a reference to the given string and assigns it to the NextPaymentImpactDate field.
func (o *PaymentScheduleCreateReq) SetNextPaymentImpactDate(v string) {
	o.NextPaymentImpactDate = &v
}

// GetPaymentDay returns the PaymentDay field value if set, zero value otherwise.
func (o *PaymentScheduleCreateReq) GetPaymentDay() string {
	if o == nil || IsNil(o.PaymentDay) {
		var ret string
		return ret
	}
	return *o.PaymentDay
}

// GetPaymentDayOk returns a tuple with the PaymentDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentScheduleCreateReq) GetPaymentDayOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentDay) {
		return nil, false
	}
	return o.PaymentDay, true
}

// HasPaymentDay returns a boolean if a field has been set.
func (o *PaymentScheduleCreateReq) HasPaymentDay() bool {
	if o != nil && !IsNil(o.PaymentDay) {
		return true
	}

	return false
}

// SetPaymentDay gets a reference to the given string and assigns it to the PaymentDay field.
func (o *PaymentScheduleCreateReq) SetPaymentDay(v string) {
	o.PaymentDay = &v
}

// GetPaymentSourceToken returns the PaymentSourceToken field value
func (o *PaymentScheduleCreateReq) GetPaymentSourceToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentSourceToken
}

// GetPaymentSourceTokenOk returns a tuple with the PaymentSourceToken field value
// and a boolean to check if the value has been set.
func (o *PaymentScheduleCreateReq) GetPaymentSourceTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentSourceToken, true
}

// SetPaymentSourceToken sets field value
func (o *PaymentScheduleCreateReq) SetPaymentSourceToken(v string) {
	o.PaymentSourceToken = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PaymentScheduleCreateReq) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentScheduleCreateReq) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PaymentScheduleCreateReq) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PaymentScheduleCreateReq) SetToken(v string) {
	o.Token = &v
}

func (o PaymentScheduleCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentScheduleCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	toSerialize["amount_category"] = o.AmountCategory
	toSerialize["currency_code"] = o.CurrencyCode
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["frequency"] = o.Frequency
	if !IsNil(o.NextPaymentImpactDate) {
		toSerialize["next_payment_impact_date"] = o.NextPaymentImpactDate
	}
	if !IsNil(o.PaymentDay) {
		toSerialize["payment_day"] = o.PaymentDay
	}
	toSerialize["payment_source_token"] = o.PaymentSourceToken
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullablePaymentScheduleCreateReq struct {
	value *PaymentScheduleCreateReq
	isSet bool
}

func (v NullablePaymentScheduleCreateReq) Get() *PaymentScheduleCreateReq {
	return v.value
}

func (v *NullablePaymentScheduleCreateReq) Set(val *PaymentScheduleCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentScheduleCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentScheduleCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentScheduleCreateReq(val *PaymentScheduleCreateReq) *NullablePaymentScheduleCreateReq {
	return &NullablePaymentScheduleCreateReq{value: val, isSet: true}
}

func (v NullablePaymentScheduleCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentScheduleCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


