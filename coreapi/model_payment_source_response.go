/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
	"time"
)

// checks if the PaymentSourceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentSourceResponse{}

// PaymentSourceResponse Contains information about a payment source.
type PaymentSourceResponse struct {
	// Last four digits of the payment source account number.
	AccountSuffix *string `json:"account_suffix,omitempty"`
	// Unique identifier of the credit account receiving the payment.
	AccountToken *string `json:"account_token,omitempty"`
	// Date and time when the payment source was created on Marqeta's credit platform, in UTC.
	CreatedTime *time.Time `json:"created_time,omitempty"`
	// Date and time when the payment source was last updated on Marqeta's credit platform, in UTC.
	LastModifiedTime *time.Time `json:"last_modified_time,omitempty"`
	// Name of the individual or business who owns the payment source.
	Name *string `json:"name,omitempty"`
	// Type of payment source owner.
	Owner *string `json:"owner,omitempty"`
	// Routing number of the payment source.
	RoutingNumber *string `json:"routing_number,omitempty"`
	// Type of payment source.
	SourceType *string `json:"source_type,omitempty"`
	Status *PaymentSourceStatusEnum `json:"status,omitempty"`
	// Unique identifier of the payment source.
	Token *string `json:"token,omitempty"`
	// Unique identifier of the user making the payment.
	UserToken *string `json:"user_token,omitempty"`
	// Additional information on the verification (for example, an external verification identifier that's outside Marqeta's credit platform).
	VerificationNotes *string `json:"verification_notes,omitempty"`
	// Status of the verification for the payment source.
	VerificationStatus *string `json:"verification_status,omitempty"`
}

// NewPaymentSourceResponse instantiates a new PaymentSourceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentSourceResponse() *PaymentSourceResponse {
	this := PaymentSourceResponse{}
	return &this
}

// NewPaymentSourceResponseWithDefaults instantiates a new PaymentSourceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentSourceResponseWithDefaults() *PaymentSourceResponse {
	this := PaymentSourceResponse{}
	return &this
}

// GetAccountSuffix returns the AccountSuffix field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetAccountSuffix() string {
	if o == nil || IsNil(o.AccountSuffix) {
		var ret string
		return ret
	}
	return *o.AccountSuffix
}

// GetAccountSuffixOk returns a tuple with the AccountSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetAccountSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.AccountSuffix) {
		return nil, false
	}
	return o.AccountSuffix, true
}

// HasAccountSuffix returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasAccountSuffix() bool {
	if o != nil && !IsNil(o.AccountSuffix) {
		return true
	}

	return false
}

// SetAccountSuffix gets a reference to the given string and assigns it to the AccountSuffix field.
func (o *PaymentSourceResponse) SetAccountSuffix(v string) {
	o.AccountSuffix = &v
}

// GetAccountToken returns the AccountToken field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetAccountToken() string {
	if o == nil || IsNil(o.AccountToken) {
		var ret string
		return ret
	}
	return *o.AccountToken
}

// GetAccountTokenOk returns a tuple with the AccountToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetAccountTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccountToken) {
		return nil, false
	}
	return o.AccountToken, true
}

// HasAccountToken returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasAccountToken() bool {
	if o != nil && !IsNil(o.AccountToken) {
		return true
	}

	return false
}

// SetAccountToken gets a reference to the given string and assigns it to the AccountToken field.
func (o *PaymentSourceResponse) SetAccountToken(v string) {
	o.AccountToken = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *PaymentSourceResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetLastModifiedTime() time.Time {
	if o == nil || IsNil(o.LastModifiedTime) {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedTime) {
		return nil, false
	}
	return o.LastModifiedTime, true
}

// HasLastModifiedTime returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasLastModifiedTime() bool {
	if o != nil && !IsNil(o.LastModifiedTime) {
		return true
	}

	return false
}

// SetLastModifiedTime gets a reference to the given time.Time and assigns it to the LastModifiedTime field.
func (o *PaymentSourceResponse) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PaymentSourceResponse) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *PaymentSourceResponse) SetOwner(v string) {
	o.Owner = &v
}

// GetRoutingNumber returns the RoutingNumber field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetRoutingNumber() string {
	if o == nil || IsNil(o.RoutingNumber) {
		var ret string
		return ret
	}
	return *o.RoutingNumber
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetRoutingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingNumber) {
		return nil, false
	}
	return o.RoutingNumber, true
}

// HasRoutingNumber returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasRoutingNumber() bool {
	if o != nil && !IsNil(o.RoutingNumber) {
		return true
	}

	return false
}

// SetRoutingNumber gets a reference to the given string and assigns it to the RoutingNumber field.
func (o *PaymentSourceResponse) SetRoutingNumber(v string) {
	o.RoutingNumber = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetSourceType() string {
	if o == nil || IsNil(o.SourceType) {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetSourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceType) {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasSourceType() bool {
	if o != nil && !IsNil(o.SourceType) {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *PaymentSourceResponse) SetSourceType(v string) {
	o.SourceType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetStatus() PaymentSourceStatusEnum {
	if o == nil || IsNil(o.Status) {
		var ret PaymentSourceStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetStatusOk() (*PaymentSourceStatusEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given PaymentSourceStatusEnum and assigns it to the Status field.
func (o *PaymentSourceResponse) SetStatus(v PaymentSourceStatusEnum) {
	o.Status = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PaymentSourceResponse) SetToken(v string) {
	o.Token = &v
}

// GetUserToken returns the UserToken field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetUserToken() string {
	if o == nil || IsNil(o.UserToken) {
		var ret string
		return ret
	}
	return *o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.UserToken) {
		return nil, false
	}
	return o.UserToken, true
}

// HasUserToken returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasUserToken() bool {
	if o != nil && !IsNil(o.UserToken) {
		return true
	}

	return false
}

// SetUserToken gets a reference to the given string and assigns it to the UserToken field.
func (o *PaymentSourceResponse) SetUserToken(v string) {
	o.UserToken = &v
}

// GetVerificationNotes returns the VerificationNotes field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetVerificationNotes() string {
	if o == nil || IsNil(o.VerificationNotes) {
		var ret string
		return ret
	}
	return *o.VerificationNotes
}

// GetVerificationNotesOk returns a tuple with the VerificationNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetVerificationNotesOk() (*string, bool) {
	if o == nil || IsNil(o.VerificationNotes) {
		return nil, false
	}
	return o.VerificationNotes, true
}

// HasVerificationNotes returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasVerificationNotes() bool {
	if o != nil && !IsNil(o.VerificationNotes) {
		return true
	}

	return false
}

// SetVerificationNotes gets a reference to the given string and assigns it to the VerificationNotes field.
func (o *PaymentSourceResponse) SetVerificationNotes(v string) {
	o.VerificationNotes = &v
}

// GetVerificationStatus returns the VerificationStatus field value if set, zero value otherwise.
func (o *PaymentSourceResponse) GetVerificationStatus() string {
	if o == nil || IsNil(o.VerificationStatus) {
		var ret string
		return ret
	}
	return *o.VerificationStatus
}

// GetVerificationStatusOk returns a tuple with the VerificationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentSourceResponse) GetVerificationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.VerificationStatus) {
		return nil, false
	}
	return o.VerificationStatus, true
}

// HasVerificationStatus returns a boolean if a field has been set.
func (o *PaymentSourceResponse) HasVerificationStatus() bool {
	if o != nil && !IsNil(o.VerificationStatus) {
		return true
	}

	return false
}

// SetVerificationStatus gets a reference to the given string and assigns it to the VerificationStatus field.
func (o *PaymentSourceResponse) SetVerificationStatus(v string) {
	o.VerificationStatus = &v
}

func (o PaymentSourceResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentSourceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountSuffix) {
		toSerialize["account_suffix"] = o.AccountSuffix
	}
	if !IsNil(o.AccountToken) {
		toSerialize["account_token"] = o.AccountToken
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.LastModifiedTime) {
		toSerialize["last_modified_time"] = o.LastModifiedTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.RoutingNumber) {
		toSerialize["routing_number"] = o.RoutingNumber
	}
	if !IsNil(o.SourceType) {
		toSerialize["source_type"] = o.SourceType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.UserToken) {
		toSerialize["user_token"] = o.UserToken
	}
	if !IsNil(o.VerificationNotes) {
		toSerialize["verification_notes"] = o.VerificationNotes
	}
	if !IsNil(o.VerificationStatus) {
		toSerialize["verification_status"] = o.VerificationStatus
	}
	return toSerialize, nil
}

type NullablePaymentSourceResponse struct {
	value *PaymentSourceResponse
	isSet bool
}

func (v NullablePaymentSourceResponse) Get() *PaymentSourceResponse {
	return v.value
}

func (v *NullablePaymentSourceResponse) Set(val *PaymentSourceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentSourceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentSourceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentSourceResponse(val *PaymentSourceResponse) *NullablePaymentSourceResponse {
	return &NullablePaymentSourceResponse{value: val, isSet: true}
}

func (v NullablePaymentSourceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentSourceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


