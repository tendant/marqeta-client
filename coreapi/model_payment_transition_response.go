/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the PaymentTransitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentTransitionResponse{}

// PaymentTransitionResponse Response containing payment transition information.
type PaymentTransitionResponse struct {
	// Unique identifier of the credit account on which you want to transition a payment status.
	AccountToken string `json:"account_token"`
	// Date and time when the payment transition was created on Marqeta's credit platform, in UTC.
	CreatedTime *time.Time `json:"created_time,omitempty"`
	// Unique identifier of the payment whose status you want to transition.
	PaymentToken string `json:"payment_token"`
	Status PaymentStatus `json:"status"`
	// Unique identifier of the payment status transition.
	Token string `json:"token"`
}

// NewPaymentTransitionResponse instantiates a new PaymentTransitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentTransitionResponse(accountToken string, paymentToken string, status PaymentStatus, token string) *PaymentTransitionResponse {
	this := PaymentTransitionResponse{}
	this.AccountToken = accountToken
	this.PaymentToken = paymentToken
	this.Status = status
	this.Token = token
	return &this
}

// NewPaymentTransitionResponseWithDefaults instantiates a new PaymentTransitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentTransitionResponseWithDefaults() *PaymentTransitionResponse {
	this := PaymentTransitionResponse{}
	return &this
}

// GetAccountToken returns the AccountToken field value
func (o *PaymentTransitionResponse) GetAccountToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountToken
}

// GetAccountTokenOk returns a tuple with the AccountToken field value
// and a boolean to check if the value has been set.
func (o *PaymentTransitionResponse) GetAccountTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountToken, true
}

// SetAccountToken sets field value
func (o *PaymentTransitionResponse) SetAccountToken(v string) {
	o.AccountToken = v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *PaymentTransitionResponse) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentTransitionResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *PaymentTransitionResponse) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *PaymentTransitionResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetPaymentToken returns the PaymentToken field value
func (o *PaymentTransitionResponse) GetPaymentToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentToken
}

// GetPaymentTokenOk returns a tuple with the PaymentToken field value
// and a boolean to check if the value has been set.
func (o *PaymentTransitionResponse) GetPaymentTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentToken, true
}

// SetPaymentToken sets field value
func (o *PaymentTransitionResponse) SetPaymentToken(v string) {
	o.PaymentToken = v
}

// GetStatus returns the Status field value
func (o *PaymentTransitionResponse) GetStatus() PaymentStatus {
	if o == nil {
		var ret PaymentStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PaymentTransitionResponse) GetStatusOk() (*PaymentStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PaymentTransitionResponse) SetStatus(v PaymentStatus) {
	o.Status = v
}

// GetToken returns the Token field value
func (o *PaymentTransitionResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *PaymentTransitionResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *PaymentTransitionResponse) SetToken(v string) {
	o.Token = v
}

func (o PaymentTransitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentTransitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account_token"] = o.AccountToken
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	toSerialize["payment_token"] = o.PaymentToken
	toSerialize["status"] = o.Status
	toSerialize["token"] = o.Token
	return toSerialize, nil
}

type NullablePaymentTransitionResponse struct {
	value *PaymentTransitionResponse
	isSet bool
}

func (v NullablePaymentTransitionResponse) Get() *PaymentTransitionResponse {
	return v.value
}

func (v *NullablePaymentTransitionResponse) Set(val *PaymentTransitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentTransitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentTransitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentTransitionResponse(val *PaymentTransitionResponse) *NullablePaymentTransitionResponse {
	return &NullablePaymentTransitionResponse{value: val, isSet: true}
}

func (v NullablePaymentTransitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentTransitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


