/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the PeerTransferRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PeerTransferRequest{}

// PeerTransferRequest struct for PeerTransferRequest
type PeerTransferRequest struct {
	// Amount of the transfer.
	Amount float32 `json:"amount"`
	// Three-digit ISO 4217 currency code.
	CurrencyCode string `json:"currency_code"`
	// Additional descriptive text about the transfer.
	Memo *string `json:"memo,omitempty"`
	// Specifies the business account holder that receives funds.  Send a `GET` request to `/businesses` to retrieve business tokens.
	RecipientBusinessToken *string `json:"recipient_business_token,omitempty"`
	// Specifies the user account holder that receives funds.  Send a `GET` request to `/users` to retrieve user tokens.
	RecipientUserToken *string `json:"recipient_user_token,omitempty"`
	// Specifies the business account holder that sends funds.  Send a `GET` request to `/businesses` to retrieve business tokens.
	SenderBusinessToken *string `json:"sender_business_token,omitempty"`
	// Specifies the user account holder that sends funds.  Send a `GET` request to `/users` to retrieve user tokens.
	SenderUserToken *string `json:"sender_user_token,omitempty"`
	// Metadata about the peer transfer.
	Tags *string `json:"tags,omitempty"`
	// Unique identifier of the peer transfer request.  If you do not include a token, the system will generate one automatically. This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember. This value cannot be updated.
	Token *string `json:"token,omitempty"`
}

// NewPeerTransferRequest instantiates a new PeerTransferRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPeerTransferRequest(amount float32, currencyCode string) *PeerTransferRequest {
	this := PeerTransferRequest{}
	this.Amount = amount
	this.CurrencyCode = currencyCode
	return &this
}

// NewPeerTransferRequestWithDefaults instantiates a new PeerTransferRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPeerTransferRequestWithDefaults() *PeerTransferRequest {
	this := PeerTransferRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *PeerTransferRequest) GetAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *PeerTransferRequest) GetAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *PeerTransferRequest) SetAmount(v float32) {
	o.Amount = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *PeerTransferRequest) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *PeerTransferRequest) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *PeerTransferRequest) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *PeerTransferRequest) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeerTransferRequest) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *PeerTransferRequest) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *PeerTransferRequest) SetMemo(v string) {
	o.Memo = &v
}

// GetRecipientBusinessToken returns the RecipientBusinessToken field value if set, zero value otherwise.
func (o *PeerTransferRequest) GetRecipientBusinessToken() string {
	if o == nil || IsNil(o.RecipientBusinessToken) {
		var ret string
		return ret
	}
	return *o.RecipientBusinessToken
}

// GetRecipientBusinessTokenOk returns a tuple with the RecipientBusinessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeerTransferRequest) GetRecipientBusinessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientBusinessToken) {
		return nil, false
	}
	return o.RecipientBusinessToken, true
}

// HasRecipientBusinessToken returns a boolean if a field has been set.
func (o *PeerTransferRequest) HasRecipientBusinessToken() bool {
	if o != nil && !IsNil(o.RecipientBusinessToken) {
		return true
	}

	return false
}

// SetRecipientBusinessToken gets a reference to the given string and assigns it to the RecipientBusinessToken field.
func (o *PeerTransferRequest) SetRecipientBusinessToken(v string) {
	o.RecipientBusinessToken = &v
}

// GetRecipientUserToken returns the RecipientUserToken field value if set, zero value otherwise.
func (o *PeerTransferRequest) GetRecipientUserToken() string {
	if o == nil || IsNil(o.RecipientUserToken) {
		var ret string
		return ret
	}
	return *o.RecipientUserToken
}

// GetRecipientUserTokenOk returns a tuple with the RecipientUserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeerTransferRequest) GetRecipientUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RecipientUserToken) {
		return nil, false
	}
	return o.RecipientUserToken, true
}

// HasRecipientUserToken returns a boolean if a field has been set.
func (o *PeerTransferRequest) HasRecipientUserToken() bool {
	if o != nil && !IsNil(o.RecipientUserToken) {
		return true
	}

	return false
}

// SetRecipientUserToken gets a reference to the given string and assigns it to the RecipientUserToken field.
func (o *PeerTransferRequest) SetRecipientUserToken(v string) {
	o.RecipientUserToken = &v
}

// GetSenderBusinessToken returns the SenderBusinessToken field value if set, zero value otherwise.
func (o *PeerTransferRequest) GetSenderBusinessToken() string {
	if o == nil || IsNil(o.SenderBusinessToken) {
		var ret string
		return ret
	}
	return *o.SenderBusinessToken
}

// GetSenderBusinessTokenOk returns a tuple with the SenderBusinessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeerTransferRequest) GetSenderBusinessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.SenderBusinessToken) {
		return nil, false
	}
	return o.SenderBusinessToken, true
}

// HasSenderBusinessToken returns a boolean if a field has been set.
func (o *PeerTransferRequest) HasSenderBusinessToken() bool {
	if o != nil && !IsNil(o.SenderBusinessToken) {
		return true
	}

	return false
}

// SetSenderBusinessToken gets a reference to the given string and assigns it to the SenderBusinessToken field.
func (o *PeerTransferRequest) SetSenderBusinessToken(v string) {
	o.SenderBusinessToken = &v
}

// GetSenderUserToken returns the SenderUserToken field value if set, zero value otherwise.
func (o *PeerTransferRequest) GetSenderUserToken() string {
	if o == nil || IsNil(o.SenderUserToken) {
		var ret string
		return ret
	}
	return *o.SenderUserToken
}

// GetSenderUserTokenOk returns a tuple with the SenderUserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeerTransferRequest) GetSenderUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.SenderUserToken) {
		return nil, false
	}
	return o.SenderUserToken, true
}

// HasSenderUserToken returns a boolean if a field has been set.
func (o *PeerTransferRequest) HasSenderUserToken() bool {
	if o != nil && !IsNil(o.SenderUserToken) {
		return true
	}

	return false
}

// SetSenderUserToken gets a reference to the given string and assigns it to the SenderUserToken field.
func (o *PeerTransferRequest) SetSenderUserToken(v string) {
	o.SenderUserToken = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PeerTransferRequest) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeerTransferRequest) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PeerTransferRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *PeerTransferRequest) SetTags(v string) {
	o.Tags = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PeerTransferRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PeerTransferRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PeerTransferRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PeerTransferRequest) SetToken(v string) {
	o.Token = &v
}

func (o PeerTransferRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PeerTransferRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["currency_code"] = o.CurrencyCode
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.RecipientBusinessToken) {
		toSerialize["recipient_business_token"] = o.RecipientBusinessToken
	}
	if !IsNil(o.RecipientUserToken) {
		toSerialize["recipient_user_token"] = o.RecipientUserToken
	}
	if !IsNil(o.SenderBusinessToken) {
		toSerialize["sender_business_token"] = o.SenderBusinessToken
	}
	if !IsNil(o.SenderUserToken) {
		toSerialize["sender_user_token"] = o.SenderUserToken
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullablePeerTransferRequest struct {
	value *PeerTransferRequest
	isSet bool
}

func (v NullablePeerTransferRequest) Get() *PeerTransferRequest {
	return v.value
}

func (v *NullablePeerTransferRequest) Set(val *PeerTransferRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePeerTransferRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePeerTransferRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePeerTransferRequest(val *PeerTransferRequest) *NullablePeerTransferRequest {
	return &NullablePeerTransferRequest{value: val, isSet: true}
}

func (v NullablePeerTransferRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePeerTransferRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


