/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the PinRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PinRequest{}

// PinRequest struct for PinRequest
type PinRequest struct {
	// Unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint. This value cannot be updated.
	ControlToken string `json:"control_token"`
	// Four-digit number to associate with the card.
	Pin string `json:"pin"`
}

// NewPinRequest instantiates a new PinRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPinRequest(controlToken string, pin string) *PinRequest {
	this := PinRequest{}
	this.ControlToken = controlToken
	this.Pin = pin
	return &this
}

// NewPinRequestWithDefaults instantiates a new PinRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPinRequestWithDefaults() *PinRequest {
	this := PinRequest{}
	return &this
}

// GetControlToken returns the ControlToken field value
func (o *PinRequest) GetControlToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ControlToken
}

// GetControlTokenOk returns a tuple with the ControlToken field value
// and a boolean to check if the value has been set.
func (o *PinRequest) GetControlTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ControlToken, true
}

// SetControlToken sets field value
func (o *PinRequest) SetControlToken(v string) {
	o.ControlToken = v
}

// GetPin returns the Pin field value
func (o *PinRequest) GetPin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pin
}

// GetPinOk returns a tuple with the Pin field value
// and a boolean to check if the value has been set.
func (o *PinRequest) GetPinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pin, true
}

// SetPin sets field value
func (o *PinRequest) SetPin(v string) {
	o.Pin = v
}

func (o PinRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PinRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["control_token"] = o.ControlToken
	toSerialize["pin"] = o.Pin
	return toSerialize, nil
}

type NullablePinRequest struct {
	value *PinRequest
	isSet bool
}

func (v NullablePinRequest) Get() *PinRequest {
	return v.value
}

func (v *NullablePinRequest) Set(val *PinRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePinRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePinRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePinRequest(val *PinRequest) *NullablePinRequest {
	return &NullablePinRequest{value: val, isSet: true}
}

func (v NullablePinRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePinRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


