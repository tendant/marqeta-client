/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the PolicyAprPurchaseReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyAprPurchaseReq{}

// PolicyAprPurchaseReq Contains information on the pricing strategy for purchases.
type PolicyAprPurchaseReq struct {
	// Unique identifier of the external pricing strategy for the credit program.
	ExternalToken *string `json:"external_token,omitempty"`
	// Name of the pricing strategy.
	Name *string `json:"name,omitempty"`
	// One or more risk tiers for a pricing strategy.
	Tiers []PolicyAprTierReq `json:"tiers"`
}

// NewPolicyAprPurchaseReq instantiates a new PolicyAprPurchaseReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyAprPurchaseReq(tiers []PolicyAprTierReq) *PolicyAprPurchaseReq {
	this := PolicyAprPurchaseReq{}
	this.Tiers = tiers
	return &this
}

// NewPolicyAprPurchaseReqWithDefaults instantiates a new PolicyAprPurchaseReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyAprPurchaseReqWithDefaults() *PolicyAprPurchaseReq {
	this := PolicyAprPurchaseReq{}
	return &this
}

// GetExternalToken returns the ExternalToken field value if set, zero value otherwise.
func (o *PolicyAprPurchaseReq) GetExternalToken() string {
	if o == nil || IsNil(o.ExternalToken) {
		var ret string
		return ret
	}
	return *o.ExternalToken
}

// GetExternalTokenOk returns a tuple with the ExternalToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyAprPurchaseReq) GetExternalTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalToken) {
		return nil, false
	}
	return o.ExternalToken, true
}

// HasExternalToken returns a boolean if a field has been set.
func (o *PolicyAprPurchaseReq) HasExternalToken() bool {
	if o != nil && !IsNil(o.ExternalToken) {
		return true
	}

	return false
}

// SetExternalToken gets a reference to the given string and assigns it to the ExternalToken field.
func (o *PolicyAprPurchaseReq) SetExternalToken(v string) {
	o.ExternalToken = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PolicyAprPurchaseReq) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyAprPurchaseReq) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PolicyAprPurchaseReq) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PolicyAprPurchaseReq) SetName(v string) {
	o.Name = &v
}

// GetTiers returns the Tiers field value
func (o *PolicyAprPurchaseReq) GetTiers() []PolicyAprTierReq {
	if o == nil {
		var ret []PolicyAprTierReq
		return ret
	}

	return o.Tiers
}

// GetTiersOk returns a tuple with the Tiers field value
// and a boolean to check if the value has been set.
func (o *PolicyAprPurchaseReq) GetTiersOk() ([]PolicyAprTierReq, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tiers, true
}

// SetTiers sets field value
func (o *PolicyAprPurchaseReq) SetTiers(v []PolicyAprTierReq) {
	o.Tiers = v
}

func (o PolicyAprPurchaseReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyAprPurchaseReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalToken) {
		toSerialize["external_token"] = o.ExternalToken
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["tiers"] = o.Tiers
	return toSerialize, nil
}

type NullablePolicyAprPurchaseReq struct {
	value *PolicyAprPurchaseReq
	isSet bool
}

func (v NullablePolicyAprPurchaseReq) Get() *PolicyAprPurchaseReq {
	return v.value
}

func (v *NullablePolicyAprPurchaseReq) Set(val *PolicyAprPurchaseReq) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyAprPurchaseReq) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyAprPurchaseReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyAprPurchaseReq(val *PolicyAprPurchaseReq) *NullablePolicyAprPurchaseReq {
	return &NullablePolicyAprPurchaseReq{value: val, isSet: true}
}

func (v NullablePolicyAprPurchaseReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyAprPurchaseReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


