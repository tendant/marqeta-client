/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the PolicyAprResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyAprResponse{}

// PolicyAprResponse Contains information on an APR policy.
type PolicyAprResponse struct {
	// Date and time when the APR policy was created on Marqeta's credit platform, in UTC.
	CreatedTime *time.Time `json:"created_time,omitempty"`
	// Description of the APR policy.
	Description *string `json:"description,omitempty"`
	// Date the APR goes into effect, in UTC.
	EffectiveDate *string `json:"effective_date,omitempty"`
	// Name of the APR policy.
	Name *string `json:"name,omitempty"`
	Purchases *PolicyAprPurchaseResponse `json:"purchases,omitempty"`
	// Unique identifier of the APR policy.
	Token *string `json:"token,omitempty"`
	// Date and time when the APR policy was last updated on Marqeta's credit platform, in UTC.
	UpdatedTime *time.Time `json:"updated_time,omitempty"`
}

// NewPolicyAprResponse instantiates a new PolicyAprResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyAprResponse() *PolicyAprResponse {
	this := PolicyAprResponse{}
	return &this
}

// NewPolicyAprResponseWithDefaults instantiates a new PolicyAprResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyAprResponseWithDefaults() *PolicyAprResponse {
	this := PolicyAprResponse{}
	return &this
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *PolicyAprResponse) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyAprResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *PolicyAprResponse) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *PolicyAprResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PolicyAprResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyAprResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PolicyAprResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PolicyAprResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *PolicyAprResponse) GetEffectiveDate() string {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret string
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyAprResponse) GetEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *PolicyAprResponse) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given string and assigns it to the EffectiveDate field.
func (o *PolicyAprResponse) SetEffectiveDate(v string) {
	o.EffectiveDate = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PolicyAprResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyAprResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PolicyAprResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PolicyAprResponse) SetName(v string) {
	o.Name = &v
}

// GetPurchases returns the Purchases field value if set, zero value otherwise.
func (o *PolicyAprResponse) GetPurchases() PolicyAprPurchaseResponse {
	if o == nil || IsNil(o.Purchases) {
		var ret PolicyAprPurchaseResponse
		return ret
	}
	return *o.Purchases
}

// GetPurchasesOk returns a tuple with the Purchases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyAprResponse) GetPurchasesOk() (*PolicyAprPurchaseResponse, bool) {
	if o == nil || IsNil(o.Purchases) {
		return nil, false
	}
	return o.Purchases, true
}

// HasPurchases returns a boolean if a field has been set.
func (o *PolicyAprResponse) HasPurchases() bool {
	if o != nil && !IsNil(o.Purchases) {
		return true
	}

	return false
}

// SetPurchases gets a reference to the given PolicyAprPurchaseResponse and assigns it to the Purchases field.
func (o *PolicyAprResponse) SetPurchases(v PolicyAprPurchaseResponse) {
	o.Purchases = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PolicyAprResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyAprResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PolicyAprResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PolicyAprResponse) SetToken(v string) {
	o.Token = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *PolicyAprResponse) GetUpdatedTime() time.Time {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyAprResponse) GetUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *PolicyAprResponse) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given time.Time and assigns it to the UpdatedTime field.
func (o *PolicyAprResponse) SetUpdatedTime(v time.Time) {
	o.UpdatedTime = &v
}

func (o PolicyAprResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyAprResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EffectiveDate) {
		toSerialize["effective_date"] = o.EffectiveDate
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Purchases) {
		toSerialize["purchases"] = o.Purchases
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updated_time"] = o.UpdatedTime
	}
	return toSerialize, nil
}

type NullablePolicyAprResponse struct {
	value *PolicyAprResponse
	isSet bool
}

func (v NullablePolicyAprResponse) Get() *PolicyAprResponse {
	return v.value
}

func (v *NullablePolicyAprResponse) Set(val *PolicyAprResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyAprResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyAprResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyAprResponse(val *PolicyAprResponse) *NullablePolicyAprResponse {
	return &NullablePolicyAprResponse{value: val, isSet: true}
}

func (v NullablePolicyAprResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyAprResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


