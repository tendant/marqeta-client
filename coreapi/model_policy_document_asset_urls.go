/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the PolicyDocumentAssetURLs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyDocumentAssetURLs{}

// PolicyDocumentAssetURLs Contains one or more URLs for an asset.
type PolicyDocumentAssetURLs struct {
	// URL to the HTML version of the asset.
	Html string `json:"html"`
	// URL to the PDF version of the asset.
	Pdf string `json:"pdf"`
	// URL to the PNG version of the asset.
	Png string `json:"png"`
}

// NewPolicyDocumentAssetURLs instantiates a new PolicyDocumentAssetURLs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyDocumentAssetURLs(html string, pdf string, png string) *PolicyDocumentAssetURLs {
	this := PolicyDocumentAssetURLs{}
	this.Html = html
	this.Pdf = pdf
	this.Png = png
	return &this
}

// NewPolicyDocumentAssetURLsWithDefaults instantiates a new PolicyDocumentAssetURLs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyDocumentAssetURLsWithDefaults() *PolicyDocumentAssetURLs {
	this := PolicyDocumentAssetURLs{}
	return &this
}

// GetHtml returns the Html field value
func (o *PolicyDocumentAssetURLs) GetHtml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Html
}

// GetHtmlOk returns a tuple with the Html field value
// and a boolean to check if the value has been set.
func (o *PolicyDocumentAssetURLs) GetHtmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Html, true
}

// SetHtml sets field value
func (o *PolicyDocumentAssetURLs) SetHtml(v string) {
	o.Html = v
}

// GetPdf returns the Pdf field value
func (o *PolicyDocumentAssetURLs) GetPdf() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pdf
}

// GetPdfOk returns a tuple with the Pdf field value
// and a boolean to check if the value has been set.
func (o *PolicyDocumentAssetURLs) GetPdfOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pdf, true
}

// SetPdf sets field value
func (o *PolicyDocumentAssetURLs) SetPdf(v string) {
	o.Pdf = v
}

// GetPng returns the Png field value
func (o *PolicyDocumentAssetURLs) GetPng() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Png
}

// GetPngOk returns a tuple with the Png field value
// and a boolean to check if the value has been set.
func (o *PolicyDocumentAssetURLs) GetPngOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Png, true
}

// SetPng sets field value
func (o *PolicyDocumentAssetURLs) SetPng(v string) {
	o.Png = v
}

func (o PolicyDocumentAssetURLs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyDocumentAssetURLs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["html"] = o.Html
	toSerialize["pdf"] = o.Pdf
	toSerialize["png"] = o.Png
	return toSerialize, nil
}

type NullablePolicyDocumentAssetURLs struct {
	value *PolicyDocumentAssetURLs
	isSet bool
}

func (v NullablePolicyDocumentAssetURLs) Get() *PolicyDocumentAssetURLs {
	return v.value
}

func (v *NullablePolicyDocumentAssetURLs) Set(val *PolicyDocumentAssetURLs) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyDocumentAssetURLs) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyDocumentAssetURLs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyDocumentAssetURLs(val *PolicyDocumentAssetURLs) *NullablePolicyDocumentAssetURLs {
	return &NullablePolicyDocumentAssetURLs{value: val, isSet: true}
}

func (v NullablePolicyDocumentAssetURLs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyDocumentAssetURLs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


