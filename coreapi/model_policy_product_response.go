/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the PolicyProductResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyProductResponse{}

// PolicyProductResponse Contains information on the credit product policy.
type PolicyProductResponse struct {
	// One or more card products associated with the credit product policy.
	CardProducts []PolicyProductCardProductResponse `json:"card_products,omitempty"`
	Classification *ProductClassification `json:"classification,omitempty"`
	// Date and time when the credit product policy was created on Marqeta's credit platform, in UTC.
	CreatedTime *time.Time `json:"created_time,omitempty"`
	CreditLine *ProductCreditLine `json:"credit_line,omitempty"`
	CurrencyCode *CurrencyCode `json:"currency_code,omitempty"`
	// Description of the credit product policy.
	Description *string `json:"description,omitempty"`
	InterestCalculation *InterestCalculation `json:"interest_calculation,omitempty"`
	// Name of the credit product policy.
	Name *string `json:"name,omitempty"`
	Payments *PolicyProductPaymentConfiguration `json:"payments,omitempty"`
	ProductSubType *ProductSubType `json:"product_sub_type,omitempty"`
	ProductType *ProductType `json:"product_type,omitempty"`
	// Unique identifier of the credit product policy.
	Token *string `json:"token,omitempty"`
	// Date and time when the credit product policy was last updated on Marqeta's credit platform, in UTC.
	UpdatedTime *time.Time `json:"updated_time,omitempty"`
	// One or more usage types for the credit product policy.
	Usage []BalanceType `json:"usage,omitempty"`
}

// NewPolicyProductResponse instantiates a new PolicyProductResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyProductResponse() *PolicyProductResponse {
	this := PolicyProductResponse{}
	var classification ProductClassification = PRODUCTCLASSIFICATION_CONSUMER
	this.Classification = &classification
	var currencyCode CurrencyCode = CURRENCYCODE_USD
	this.CurrencyCode = &currencyCode
	var productSubType ProductSubType = PRODUCTSUBTYPE_CREDIT_CARD
	this.ProductSubType = &productSubType
	var productType ProductType = PRODUCTTYPE_REVOLVING
	this.ProductType = &productType
	return &this
}

// NewPolicyProductResponseWithDefaults instantiates a new PolicyProductResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyProductResponseWithDefaults() *PolicyProductResponse {
	this := PolicyProductResponse{}
	var classification ProductClassification = PRODUCTCLASSIFICATION_CONSUMER
	this.Classification = &classification
	var currencyCode CurrencyCode = CURRENCYCODE_USD
	this.CurrencyCode = &currencyCode
	var productSubType ProductSubType = PRODUCTSUBTYPE_CREDIT_CARD
	this.ProductSubType = &productSubType
	var productType ProductType = PRODUCTTYPE_REVOLVING
	this.ProductType = &productType
	return &this
}

// GetCardProducts returns the CardProducts field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetCardProducts() []PolicyProductCardProductResponse {
	if o == nil || IsNil(o.CardProducts) {
		var ret []PolicyProductCardProductResponse
		return ret
	}
	return o.CardProducts
}

// GetCardProductsOk returns a tuple with the CardProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetCardProductsOk() ([]PolicyProductCardProductResponse, bool) {
	if o == nil || IsNil(o.CardProducts) {
		return nil, false
	}
	return o.CardProducts, true
}

// HasCardProducts returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasCardProducts() bool {
	if o != nil && !IsNil(o.CardProducts) {
		return true
	}

	return false
}

// SetCardProducts gets a reference to the given []PolicyProductCardProductResponse and assigns it to the CardProducts field.
func (o *PolicyProductResponse) SetCardProducts(v []PolicyProductCardProductResponse) {
	o.CardProducts = v
}

// GetClassification returns the Classification field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetClassification() ProductClassification {
	if o == nil || IsNil(o.Classification) {
		var ret ProductClassification
		return ret
	}
	return *o.Classification
}

// GetClassificationOk returns a tuple with the Classification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetClassificationOk() (*ProductClassification, bool) {
	if o == nil || IsNil(o.Classification) {
		return nil, false
	}
	return o.Classification, true
}

// HasClassification returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasClassification() bool {
	if o != nil && !IsNil(o.Classification) {
		return true
	}

	return false
}

// SetClassification gets a reference to the given ProductClassification and assigns it to the Classification field.
func (o *PolicyProductResponse) SetClassification(v ProductClassification) {
	o.Classification = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *PolicyProductResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetCreditLine returns the CreditLine field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetCreditLine() ProductCreditLine {
	if o == nil || IsNil(o.CreditLine) {
		var ret ProductCreditLine
		return ret
	}
	return *o.CreditLine
}

// GetCreditLineOk returns a tuple with the CreditLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetCreditLineOk() (*ProductCreditLine, bool) {
	if o == nil || IsNil(o.CreditLine) {
		return nil, false
	}
	return o.CreditLine, true
}

// HasCreditLine returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasCreditLine() bool {
	if o != nil && !IsNil(o.CreditLine) {
		return true
	}

	return false
}

// SetCreditLine gets a reference to the given ProductCreditLine and assigns it to the CreditLine field.
func (o *PolicyProductResponse) SetCreditLine(v ProductCreditLine) {
	o.CreditLine = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetCurrencyCode() CurrencyCode {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret CurrencyCode
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetCurrencyCodeOk() (*CurrencyCode, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given CurrencyCode and assigns it to the CurrencyCode field.
func (o *PolicyProductResponse) SetCurrencyCode(v CurrencyCode) {
	o.CurrencyCode = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PolicyProductResponse) SetDescription(v string) {
	o.Description = &v
}

// GetInterestCalculation returns the InterestCalculation field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetInterestCalculation() InterestCalculation {
	if o == nil || IsNil(o.InterestCalculation) {
		var ret InterestCalculation
		return ret
	}
	return *o.InterestCalculation
}

// GetInterestCalculationOk returns a tuple with the InterestCalculation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetInterestCalculationOk() (*InterestCalculation, bool) {
	if o == nil || IsNil(o.InterestCalculation) {
		return nil, false
	}
	return o.InterestCalculation, true
}

// HasInterestCalculation returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasInterestCalculation() bool {
	if o != nil && !IsNil(o.InterestCalculation) {
		return true
	}

	return false
}

// SetInterestCalculation gets a reference to the given InterestCalculation and assigns it to the InterestCalculation field.
func (o *PolicyProductResponse) SetInterestCalculation(v InterestCalculation) {
	o.InterestCalculation = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PolicyProductResponse) SetName(v string) {
	o.Name = &v
}

// GetPayments returns the Payments field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetPayments() PolicyProductPaymentConfiguration {
	if o == nil || IsNil(o.Payments) {
		var ret PolicyProductPaymentConfiguration
		return ret
	}
	return *o.Payments
}

// GetPaymentsOk returns a tuple with the Payments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetPaymentsOk() (*PolicyProductPaymentConfiguration, bool) {
	if o == nil || IsNil(o.Payments) {
		return nil, false
	}
	return o.Payments, true
}

// HasPayments returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasPayments() bool {
	if o != nil && !IsNil(o.Payments) {
		return true
	}

	return false
}

// SetPayments gets a reference to the given PolicyProductPaymentConfiguration and assigns it to the Payments field.
func (o *PolicyProductResponse) SetPayments(v PolicyProductPaymentConfiguration) {
	o.Payments = &v
}

// GetProductSubType returns the ProductSubType field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetProductSubType() ProductSubType {
	if o == nil || IsNil(o.ProductSubType) {
		var ret ProductSubType
		return ret
	}
	return *o.ProductSubType
}

// GetProductSubTypeOk returns a tuple with the ProductSubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetProductSubTypeOk() (*ProductSubType, bool) {
	if o == nil || IsNil(o.ProductSubType) {
		return nil, false
	}
	return o.ProductSubType, true
}

// HasProductSubType returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasProductSubType() bool {
	if o != nil && !IsNil(o.ProductSubType) {
		return true
	}

	return false
}

// SetProductSubType gets a reference to the given ProductSubType and assigns it to the ProductSubType field.
func (o *PolicyProductResponse) SetProductSubType(v ProductSubType) {
	o.ProductSubType = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetProductType() ProductType {
	if o == nil || IsNil(o.ProductType) {
		var ret ProductType
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetProductTypeOk() (*ProductType, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given ProductType and assigns it to the ProductType field.
func (o *PolicyProductResponse) SetProductType(v ProductType) {
	o.ProductType = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PolicyProductResponse) SetToken(v string) {
	o.Token = &v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetUpdatedTime() time.Time {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given time.Time and assigns it to the UpdatedTime field.
func (o *PolicyProductResponse) SetUpdatedTime(v time.Time) {
	o.UpdatedTime = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *PolicyProductResponse) GetUsage() []BalanceType {
	if o == nil || IsNil(o.Usage) {
		var ret []BalanceType
		return ret
	}
	return o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyProductResponse) GetUsageOk() ([]BalanceType, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *PolicyProductResponse) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given []BalanceType and assigns it to the Usage field.
func (o *PolicyProductResponse) SetUsage(v []BalanceType) {
	o.Usage = v
}

func (o PolicyProductResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyProductResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CardProducts) {
		toSerialize["card_products"] = o.CardProducts
	}
	if !IsNil(o.Classification) {
		toSerialize["classification"] = o.Classification
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.CreditLine) {
		toSerialize["credit_line"] = o.CreditLine
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.InterestCalculation) {
		toSerialize["interest_calculation"] = o.InterestCalculation
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Payments) {
		toSerialize["payments"] = o.Payments
	}
	if !IsNil(o.ProductSubType) {
		toSerialize["product_sub_type"] = o.ProductSubType
	}
	if !IsNil(o.ProductType) {
		toSerialize["product_type"] = o.ProductType
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.UpdatedTime) {
		toSerialize["updated_time"] = o.UpdatedTime
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	return toSerialize, nil
}

type NullablePolicyProductResponse struct {
	value *PolicyProductResponse
	isSet bool
}

func (v NullablePolicyProductResponse) Get() *PolicyProductResponse {
	return v.value
}

func (v *NullablePolicyProductResponse) Set(val *PolicyProductResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyProductResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyProductResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyProductResponse(val *PolicyProductResponse) *NullablePolicyProductResponse {
	return &NullablePolicyProductResponse{value: val, isSet: true}
}

func (v NullablePolicyProductResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyProductResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


