/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the PolicyRewardReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyRewardReq{}

// PolicyRewardReq Request details for a reward policy.
type PolicyRewardReq struct {
	// Description of the reward policy.
	Description *string `json:"description,omitempty"`
	// Name of the reward policy.
	Name string `json:"name"`
	// One or more reward rules.
	Rules []PolicyRewardRule `json:"rules"`
	// Unique identifier of the reward policy.
	Token *string `json:"token,omitempty"`
}

// NewPolicyRewardReq instantiates a new PolicyRewardReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyRewardReq(name string, rules []PolicyRewardRule) *PolicyRewardReq {
	this := PolicyRewardReq{}
	this.Name = name
	this.Rules = rules
	return &this
}

// NewPolicyRewardReqWithDefaults instantiates a new PolicyRewardReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyRewardReqWithDefaults() *PolicyRewardReq {
	this := PolicyRewardReq{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PolicyRewardReq) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRewardReq) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PolicyRewardReq) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PolicyRewardReq) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *PolicyRewardReq) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PolicyRewardReq) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PolicyRewardReq) SetName(v string) {
	o.Name = v
}

// GetRules returns the Rules field value
func (o *PolicyRewardReq) GetRules() []PolicyRewardRule {
	if o == nil {
		var ret []PolicyRewardRule
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *PolicyRewardReq) GetRulesOk() ([]PolicyRewardRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *PolicyRewardReq) SetRules(v []PolicyRewardRule) {
	o.Rules = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PolicyRewardReq) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRewardReq) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PolicyRewardReq) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PolicyRewardReq) SetToken(v string) {
	o.Token = &v
}

func (o PolicyRewardReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyRewardReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["name"] = o.Name
	toSerialize["rules"] = o.Rules
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullablePolicyRewardReq struct {
	value *PolicyRewardReq
	isSet bool
}

func (v NullablePolicyRewardReq) Get() *PolicyRewardReq {
	return v.value
}

func (v *NullablePolicyRewardReq) Set(val *PolicyRewardReq) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyRewardReq) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyRewardReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyRewardReq(val *PolicyRewardReq) *NullablePolicyRewardReq {
	return &NullablePolicyRewardReq{value: val, isSet: true}
}

func (v NullablePolicyRewardReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyRewardReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


