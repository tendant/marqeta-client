/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the PostDecisionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostDecisionsResponse{}

// PostDecisionsResponse struct for PostDecisionsResponse
type PostDecisionsResponse struct {
	// Unique identifier of the application.
	ApplicationToken string `json:"application_token"`
	// Unique identifier of the decision made based on the decision model.  See `decision_model.status` for the current state of the application.
	DecisionId string `json:"decision_id"`
	// Status of the decision on the application.
	Status string `json:"status"`
	// Date and time when the decision was submitted, in UTC.
	SubmittedDateTime time.Time `json:"submitted_date_time"`
	// Unique identifier of the decision model.  See `decision_model.status` for the current state of the application.
	Token string `json:"token"`
	// Unique identifier of the applicant, the user applying for a credit account.
	UserToken string `json:"user_token"`
}

// NewPostDecisionsResponse instantiates a new PostDecisionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostDecisionsResponse(applicationToken string, decisionId string, status string, submittedDateTime time.Time, token string, userToken string) *PostDecisionsResponse {
	this := PostDecisionsResponse{}
	this.ApplicationToken = applicationToken
	this.DecisionId = decisionId
	this.Status = status
	this.SubmittedDateTime = submittedDateTime
	this.Token = token
	this.UserToken = userToken
	return &this
}

// NewPostDecisionsResponseWithDefaults instantiates a new PostDecisionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostDecisionsResponseWithDefaults() *PostDecisionsResponse {
	this := PostDecisionsResponse{}
	return &this
}

// GetApplicationToken returns the ApplicationToken field value
func (o *PostDecisionsResponse) GetApplicationToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationToken
}

// GetApplicationTokenOk returns a tuple with the ApplicationToken field value
// and a boolean to check if the value has been set.
func (o *PostDecisionsResponse) GetApplicationTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationToken, true
}

// SetApplicationToken sets field value
func (o *PostDecisionsResponse) SetApplicationToken(v string) {
	o.ApplicationToken = v
}

// GetDecisionId returns the DecisionId field value
func (o *PostDecisionsResponse) GetDecisionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DecisionId
}

// GetDecisionIdOk returns a tuple with the DecisionId field value
// and a boolean to check if the value has been set.
func (o *PostDecisionsResponse) GetDecisionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DecisionId, true
}

// SetDecisionId sets field value
func (o *PostDecisionsResponse) SetDecisionId(v string) {
	o.DecisionId = v
}

// GetStatus returns the Status field value
func (o *PostDecisionsResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PostDecisionsResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PostDecisionsResponse) SetStatus(v string) {
	o.Status = v
}

// GetSubmittedDateTime returns the SubmittedDateTime field value
func (o *PostDecisionsResponse) GetSubmittedDateTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.SubmittedDateTime
}

// GetSubmittedDateTimeOk returns a tuple with the SubmittedDateTime field value
// and a boolean to check if the value has been set.
func (o *PostDecisionsResponse) GetSubmittedDateTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubmittedDateTime, true
}

// SetSubmittedDateTime sets field value
func (o *PostDecisionsResponse) SetSubmittedDateTime(v time.Time) {
	o.SubmittedDateTime = v
}

// GetToken returns the Token field value
func (o *PostDecisionsResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *PostDecisionsResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *PostDecisionsResponse) SetToken(v string) {
	o.Token = v
}

// GetUserToken returns the UserToken field value
func (o *PostDecisionsResponse) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *PostDecisionsResponse) GetUserTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *PostDecisionsResponse) SetUserToken(v string) {
	o.UserToken = v
}

func (o PostDecisionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostDecisionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["application_token"] = o.ApplicationToken
	toSerialize["decision_id"] = o.DecisionId
	toSerialize["status"] = o.Status
	toSerialize["submitted_date_time"] = o.SubmittedDateTime
	toSerialize["token"] = o.Token
	toSerialize["user_token"] = o.UserToken
	return toSerialize, nil
}

type NullablePostDecisionsResponse struct {
	value *PostDecisionsResponse
	isSet bool
}

func (v NullablePostDecisionsResponse) Get() *PostDecisionsResponse {
	return v.value
}

func (v *NullablePostDecisionsResponse) Set(val *PostDecisionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePostDecisionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePostDecisionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostDecisionsResponse(val *PostDecisionsResponse) *NullablePostDecisionsResponse {
	return &NullablePostDecisionsResponse{value: val, isSet: true}
}

func (v NullablePostDecisionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostDecisionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


