/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the ProductConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductConfig{}

// ProductConfig Contains information on configurations for billing cycle day, payment due day, and fees.
type ProductConfig struct {
	// Day of month the billing cycle starts.
	BillingCycleDay int32 `json:"billing_cycle_day"`
	// One or more fee types.
	Fees []ProductFeeType `json:"fees,omitempty"`
	// Day of month the payment for the previous billing cycle is due.
	PaymentDueDay int32 `json:"payment_due_day"`
	// Contains one or more periodic fees.
	PeriodicFees []ProductConfigPeriodicFeesInner `json:"periodic_fees,omitempty"`
}

// NewProductConfig instantiates a new ProductConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductConfig(billingCycleDay int32, paymentDueDay int32) *ProductConfig {
	this := ProductConfig{}
	this.BillingCycleDay = billingCycleDay
	this.PaymentDueDay = paymentDueDay
	return &this
}

// NewProductConfigWithDefaults instantiates a new ProductConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductConfigWithDefaults() *ProductConfig {
	this := ProductConfig{}
	return &this
}

// GetBillingCycleDay returns the BillingCycleDay field value
func (o *ProductConfig) GetBillingCycleDay() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BillingCycleDay
}

// GetBillingCycleDayOk returns a tuple with the BillingCycleDay field value
// and a boolean to check if the value has been set.
func (o *ProductConfig) GetBillingCycleDayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingCycleDay, true
}

// SetBillingCycleDay sets field value
func (o *ProductConfig) SetBillingCycleDay(v int32) {
	o.BillingCycleDay = v
}

// GetFees returns the Fees field value if set, zero value otherwise.
func (o *ProductConfig) GetFees() []ProductFeeType {
	if o == nil || IsNil(o.Fees) {
		var ret []ProductFeeType
		return ret
	}
	return o.Fees
}

// GetFeesOk returns a tuple with the Fees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductConfig) GetFeesOk() ([]ProductFeeType, bool) {
	if o == nil || IsNil(o.Fees) {
		return nil, false
	}
	return o.Fees, true
}

// HasFees returns a boolean if a field has been set.
func (o *ProductConfig) HasFees() bool {
	if o != nil && !IsNil(o.Fees) {
		return true
	}

	return false
}

// SetFees gets a reference to the given []ProductFeeType and assigns it to the Fees field.
func (o *ProductConfig) SetFees(v []ProductFeeType) {
	o.Fees = v
}

// GetPaymentDueDay returns the PaymentDueDay field value
func (o *ProductConfig) GetPaymentDueDay() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PaymentDueDay
}

// GetPaymentDueDayOk returns a tuple with the PaymentDueDay field value
// and a boolean to check if the value has been set.
func (o *ProductConfig) GetPaymentDueDayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentDueDay, true
}

// SetPaymentDueDay sets field value
func (o *ProductConfig) SetPaymentDueDay(v int32) {
	o.PaymentDueDay = v
}

// GetPeriodicFees returns the PeriodicFees field value if set, zero value otherwise.
func (o *ProductConfig) GetPeriodicFees() []ProductConfigPeriodicFeesInner {
	if o == nil || IsNil(o.PeriodicFees) {
		var ret []ProductConfigPeriodicFeesInner
		return ret
	}
	return o.PeriodicFees
}

// GetPeriodicFeesOk returns a tuple with the PeriodicFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductConfig) GetPeriodicFeesOk() ([]ProductConfigPeriodicFeesInner, bool) {
	if o == nil || IsNil(o.PeriodicFees) {
		return nil, false
	}
	return o.PeriodicFees, true
}

// HasPeriodicFees returns a boolean if a field has been set.
func (o *ProductConfig) HasPeriodicFees() bool {
	if o != nil && !IsNil(o.PeriodicFees) {
		return true
	}

	return false
}

// SetPeriodicFees gets a reference to the given []ProductConfigPeriodicFeesInner and assigns it to the PeriodicFees field.
func (o *ProductConfig) SetPeriodicFees(v []ProductConfigPeriodicFeesInner) {
	o.PeriodicFees = v
}

func (o ProductConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["billing_cycle_day"] = o.BillingCycleDay
	if !IsNil(o.Fees) {
		toSerialize["fees"] = o.Fees
	}
	toSerialize["payment_due_day"] = o.PaymentDueDay
	if !IsNil(o.PeriodicFees) {
		toSerialize["periodic_fees"] = o.PeriodicFees
	}
	return toSerialize, nil
}

type NullableProductConfig struct {
	value *ProductConfig
	isSet bool
}

func (v NullableProductConfig) Get() *ProductConfig {
	return v.value
}

func (v *NullableProductConfig) Set(val *ProductConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableProductConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableProductConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductConfig(val *ProductConfig) *NullableProductConfig {
	return &NullableProductConfig{value: val, isSet: true}
}

func (v NullableProductConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


