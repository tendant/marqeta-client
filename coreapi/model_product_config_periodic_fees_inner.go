/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the ProductConfigPeriodicFeesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductConfigPeriodicFeesInner{}

// ProductConfigPeriodicFeesInner Contains information on a periodic fee.
type ProductConfigPeriodicFeesInner struct {
	// How frequently the fee is charged.
	Frequency string `json:"frequency"`
	// The number of days after an account is activated that the initial fee is charged. For example, if the value in this field is `30`, then the initial fee is charged 30 days after an account is activated.
	NumberOfDaysPostActivation int32 `json:"number_of_days_post_activation"`
}

// NewProductConfigPeriodicFeesInner instantiates a new ProductConfigPeriodicFeesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductConfigPeriodicFeesInner(frequency string, numberOfDaysPostActivation int32) *ProductConfigPeriodicFeesInner {
	this := ProductConfigPeriodicFeesInner{}
	this.Frequency = frequency
	this.NumberOfDaysPostActivation = numberOfDaysPostActivation
	return &this
}

// NewProductConfigPeriodicFeesInnerWithDefaults instantiates a new ProductConfigPeriodicFeesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductConfigPeriodicFeesInnerWithDefaults() *ProductConfigPeriodicFeesInner {
	this := ProductConfigPeriodicFeesInner{}
	return &this
}

// GetFrequency returns the Frequency field value
func (o *ProductConfigPeriodicFeesInner) GetFrequency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value
// and a boolean to check if the value has been set.
func (o *ProductConfigPeriodicFeesInner) GetFrequencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Frequency, true
}

// SetFrequency sets field value
func (o *ProductConfigPeriodicFeesInner) SetFrequency(v string) {
	o.Frequency = v
}

// GetNumberOfDaysPostActivation returns the NumberOfDaysPostActivation field value
func (o *ProductConfigPeriodicFeesInner) GetNumberOfDaysPostActivation() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumberOfDaysPostActivation
}

// GetNumberOfDaysPostActivationOk returns a tuple with the NumberOfDaysPostActivation field value
// and a boolean to check if the value has been set.
func (o *ProductConfigPeriodicFeesInner) GetNumberOfDaysPostActivationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberOfDaysPostActivation, true
}

// SetNumberOfDaysPostActivation sets field value
func (o *ProductConfigPeriodicFeesInner) SetNumberOfDaysPostActivation(v int32) {
	o.NumberOfDaysPostActivation = v
}

func (o ProductConfigPeriodicFeesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductConfigPeriodicFeesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["frequency"] = o.Frequency
	toSerialize["number_of_days_post_activation"] = o.NumberOfDaysPostActivation
	return toSerialize, nil
}

type NullableProductConfigPeriodicFeesInner struct {
	value *ProductConfigPeriodicFeesInner
	isSet bool
}

func (v NullableProductConfigPeriodicFeesInner) Get() *ProductConfigPeriodicFeesInner {
	return v.value
}

func (v *NullableProductConfigPeriodicFeesInner) Set(val *ProductConfigPeriodicFeesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProductConfigPeriodicFeesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProductConfigPeriodicFeesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductConfigPeriodicFeesInner(val *ProductConfigPeriodicFeesInner) *NullableProductConfigPeriodicFeesInner {
	return &NullableProductConfigPeriodicFeesInner{value: val, isSet: true}
}

func (v NullableProductConfigPeriodicFeesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductConfigPeriodicFeesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


