/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the ProductCreditLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductCreditLine{}

// ProductCreditLine Contains information on the credit line range.
type ProductCreditLine struct {
	// Maximum credit limit.
	Max float32 `json:"max"`
	// Minimum credit limit.
	Min float32 `json:"min"`
}

// NewProductCreditLine instantiates a new ProductCreditLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductCreditLine(max float32, min float32) *ProductCreditLine {
	this := ProductCreditLine{}
	this.Max = max
	this.Min = min
	return &this
}

// NewProductCreditLineWithDefaults instantiates a new ProductCreditLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductCreditLineWithDefaults() *ProductCreditLine {
	this := ProductCreditLine{}
	return &this
}

// GetMax returns the Max field value
func (o *ProductCreditLine) GetMax() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Max
}

// GetMaxOk returns a tuple with the Max field value
// and a boolean to check if the value has been set.
func (o *ProductCreditLine) GetMaxOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Max, true
}

// SetMax sets field value
func (o *ProductCreditLine) SetMax(v float32) {
	o.Max = v
}

// GetMin returns the Min field value
func (o *ProductCreditLine) GetMin() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Min
}

// GetMinOk returns a tuple with the Min field value
// and a boolean to check if the value has been set.
func (o *ProductCreditLine) GetMinOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Min, true
}

// SetMin sets field value
func (o *ProductCreditLine) SetMin(v float32) {
	o.Min = v
}

func (o ProductCreditLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductCreditLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["max"] = o.Max
	toSerialize["min"] = o.Min
	return toSerialize, nil
}

type NullableProductCreditLine struct {
	value *ProductCreditLine
	isSet bool
}

func (v NullableProductCreditLine) Get() *ProductCreditLine {
	return v.value
}

func (v *NullableProductCreditLine) Set(val *ProductCreditLine) {
	v.value = val
	v.isSet = true
}

func (v NullableProductCreditLine) IsSet() bool {
	return v.isSet
}

func (v *NullableProductCreditLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductCreditLine(val *ProductCreditLine) *NullableProductCreditLine {
	return &NullableProductCreditLine{value: val, isSet: true}
}

func (v NullableProductCreditLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductCreditLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


