/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the ProgramTransferTypeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramTransferTypeRequest{}

// ProgramTransferTypeRequest struct for ProgramTransferTypeRequest
type ProgramTransferTypeRequest struct {
	// Memo or note describing the program transfer type.
	Memo string `json:"memo"`
	// Unique identifier of the program funding source to which program transfers will be credited.  Send a `GET` request to `/fundingsources/program` to retrieve program funding source tokens.
	ProgramFundingSourceToken string `json:"program_funding_source_token"`
	// Comma-delimited list of tags describing the program transfer type.
	Tags *string `json:"tags,omitempty"`
	// Unique identifier of the program transfer type.  If you do not include a token, the system will generate one automatically. This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember. This value cannot be updated.
	Token *string `json:"token,omitempty"`
}

// NewProgramTransferTypeRequest instantiates a new ProgramTransferTypeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramTransferTypeRequest(memo string, programFundingSourceToken string) *ProgramTransferTypeRequest {
	this := ProgramTransferTypeRequest{}
	this.Memo = memo
	this.ProgramFundingSourceToken = programFundingSourceToken
	return &this
}

// NewProgramTransferTypeRequestWithDefaults instantiates a new ProgramTransferTypeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramTransferTypeRequestWithDefaults() *ProgramTransferTypeRequest {
	this := ProgramTransferTypeRequest{}
	return &this
}

// GetMemo returns the Memo field value
func (o *ProgramTransferTypeRequest) GetMemo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Memo
}

// GetMemoOk returns a tuple with the Memo field value
// and a boolean to check if the value has been set.
func (o *ProgramTransferTypeRequest) GetMemoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memo, true
}

// SetMemo sets field value
func (o *ProgramTransferTypeRequest) SetMemo(v string) {
	o.Memo = v
}

// GetProgramFundingSourceToken returns the ProgramFundingSourceToken field value
func (o *ProgramTransferTypeRequest) GetProgramFundingSourceToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProgramFundingSourceToken
}

// GetProgramFundingSourceTokenOk returns a tuple with the ProgramFundingSourceToken field value
// and a boolean to check if the value has been set.
func (o *ProgramTransferTypeRequest) GetProgramFundingSourceTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProgramFundingSourceToken, true
}

// SetProgramFundingSourceToken sets field value
func (o *ProgramTransferTypeRequest) SetProgramFundingSourceToken(v string) {
	o.ProgramFundingSourceToken = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ProgramTransferTypeRequest) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTransferTypeRequest) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ProgramTransferTypeRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *ProgramTransferTypeRequest) SetTags(v string) {
	o.Tags = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ProgramTransferTypeRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTransferTypeRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ProgramTransferTypeRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ProgramTransferTypeRequest) SetToken(v string) {
	o.Token = &v
}

func (o ProgramTransferTypeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramTransferTypeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["memo"] = o.Memo
	toSerialize["program_funding_source_token"] = o.ProgramFundingSourceToken
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableProgramTransferTypeRequest struct {
	value *ProgramTransferTypeRequest
	isSet bool
}

func (v NullableProgramTransferTypeRequest) Get() *ProgramTransferTypeRequest {
	return v.value
}

func (v *NullableProgramTransferTypeRequest) Set(val *ProgramTransferTypeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramTransferTypeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramTransferTypeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramTransferTypeRequest(val *ProgramTransferTypeRequest) *NullableProgramTransferTypeRequest {
	return &NullableProgramTransferTypeRequest{value: val, isSet: true}
}

func (v NullableProgramTransferTypeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramTransferTypeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


