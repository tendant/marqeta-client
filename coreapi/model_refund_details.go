/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the RefundDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefundDetails{}

// RefundDetails Contains details for a refund.
type RefundDetails struct {
	// Description of the refund.
	Description string `json:"description"`
	Method RefundMethod `json:"method"`
}

// NewRefundDetails instantiates a new RefundDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefundDetails(description string, method RefundMethod) *RefundDetails {
	this := RefundDetails{}
	this.Description = description
	this.Method = method
	return &this
}

// NewRefundDetailsWithDefaults instantiates a new RefundDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefundDetailsWithDefaults() *RefundDetails {
	this := RefundDetails{}
	return &this
}

// GetDescription returns the Description field value
func (o *RefundDetails) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *RefundDetails) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *RefundDetails) SetDescription(v string) {
	o.Description = v
}

// GetMethod returns the Method field value
func (o *RefundDetails) GetMethod() RefundMethod {
	if o == nil {
		var ret RefundMethod
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *RefundDetails) GetMethodOk() (*RefundMethod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *RefundDetails) SetMethod(v RefundMethod) {
	o.Method = v
}

func (o RefundDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefundDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["method"] = o.Method
	return toSerialize, nil
}

type NullableRefundDetails struct {
	value *RefundDetails
	isSet bool
}

func (v NullableRefundDetails) Get() *RefundDetails {
	return v.value
}

func (v *NullableRefundDetails) Set(val *RefundDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableRefundDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableRefundDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefundDetails(val *RefundDetails) *NullableRefundDetails {
	return &NullableRefundDetails{value: val, isSet: true}
}

func (v NullableRefundDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefundDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


