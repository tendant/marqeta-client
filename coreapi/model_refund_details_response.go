/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the RefundDetailsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefundDetailsResponse{}

// RefundDetailsResponse Contains details for a refund.
type RefundDetailsResponse struct {
	// Description of the refund.
	Description string `json:"description"`
	Method RefundMethod `json:"method"`
	Status RefundStatus `json:"status"`
}

// NewRefundDetailsResponse instantiates a new RefundDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefundDetailsResponse(description string, method RefundMethod, status RefundStatus) *RefundDetailsResponse {
	this := RefundDetailsResponse{}
	this.Description = description
	this.Method = method
	this.Status = status
	return &this
}

// NewRefundDetailsResponseWithDefaults instantiates a new RefundDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefundDetailsResponseWithDefaults() *RefundDetailsResponse {
	this := RefundDetailsResponse{}
	return &this
}

// GetDescription returns the Description field value
func (o *RefundDetailsResponse) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *RefundDetailsResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *RefundDetailsResponse) SetDescription(v string) {
	o.Description = v
}

// GetMethod returns the Method field value
func (o *RefundDetailsResponse) GetMethod() RefundMethod {
	if o == nil {
		var ret RefundMethod
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *RefundDetailsResponse) GetMethodOk() (*RefundMethod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *RefundDetailsResponse) SetMethod(v RefundMethod) {
	o.Method = v
}

// GetStatus returns the Status field value
func (o *RefundDetailsResponse) GetStatus() RefundStatus {
	if o == nil {
		var ret RefundStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *RefundDetailsResponse) GetStatusOk() (*RefundStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *RefundDetailsResponse) SetStatus(v RefundStatus) {
	o.Status = v
}

func (o RefundDetailsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefundDetailsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["method"] = o.Method
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableRefundDetailsResponse struct {
	value *RefundDetailsResponse
	isSet bool
}

func (v NullableRefundDetailsResponse) Get() *RefundDetailsResponse {
	return v.value
}

func (v *NullableRefundDetailsResponse) Set(val *RefundDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRefundDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRefundDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefundDetailsResponse(val *RefundDetailsResponse) *NullableRefundDetailsResponse {
	return &NullableRefundDetailsResponse{value: val, isSet: true}
}

func (v NullableRefundDetailsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefundDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


