/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the RequestForApplePayWppJWT type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestForApplePayWppJWT{}

// RequestForApplePayWppJWT struct for RequestForApplePayWppJWT
type RequestForApplePayWppJWT struct {
	// Unique identifier of the card resource.
	CardToken string `json:"card_token"`
}

// NewRequestForApplePayWppJWT instantiates a new RequestForApplePayWppJWT object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestForApplePayWppJWT(cardToken string) *RequestForApplePayWppJWT {
	this := RequestForApplePayWppJWT{}
	this.CardToken = cardToken
	return &this
}

// NewRequestForApplePayWppJWTWithDefaults instantiates a new RequestForApplePayWppJWT object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestForApplePayWppJWTWithDefaults() *RequestForApplePayWppJWT {
	this := RequestForApplePayWppJWT{}
	return &this
}

// GetCardToken returns the CardToken field value
func (o *RequestForApplePayWppJWT) GetCardToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardToken
}

// GetCardTokenOk returns a tuple with the CardToken field value
// and a boolean to check if the value has been set.
func (o *RequestForApplePayWppJWT) GetCardTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardToken, true
}

// SetCardToken sets field value
func (o *RequestForApplePayWppJWT) SetCardToken(v string) {
	o.CardToken = v
}

func (o RequestForApplePayWppJWT) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestForApplePayWppJWT) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["card_token"] = o.CardToken
	return toSerialize, nil
}

type NullableRequestForApplePayWppJWT struct {
	value *RequestForApplePayWppJWT
	isSet bool
}

func (v NullableRequestForApplePayWppJWT) Get() *RequestForApplePayWppJWT {
	return v.value
}

func (v *NullableRequestForApplePayWppJWT) Set(val *RequestForApplePayWppJWT) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestForApplePayWppJWT) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestForApplePayWppJWT) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestForApplePayWppJWT(val *RequestForApplePayWppJWT) *NullableRequestForApplePayWppJWT {
	return &NullableRequestForApplePayWppJWT{value: val, isSet: true}
}

func (v NullableRequestForApplePayWppJWT) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestForApplePayWppJWT) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


