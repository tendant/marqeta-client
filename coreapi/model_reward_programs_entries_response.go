/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
	"time"
)

// checks if the RewardProgramsEntriesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RewardProgramsEntriesResponse{}

// RewardProgramsEntriesResponse struct for RewardProgramsEntriesResponse
type RewardProgramsEntriesResponse struct {
	// Date and time when the reward entry was created on the Marqeta platform, in UTC.
	CreatedTime time.Time `json:"created_time"`
	// Merchant category code (MCC) of the related journal entry.
	Mcc *string `json:"mcc,omitempty"`
	// Merchant identifier (MID) of the related journal entry.
	Mid *string `json:"mid,omitempty"`
	// A note providing information on the reward entry.
	Note string `json:"note"`
	// Unique identifier of the related journal entry to which the reward rule was applied to trigger the reward entry.
	RelatedJournalEntryToken string `json:"related_journal_entry_token"`
	// Unique identifier of the related redemption token that triggered the reward entry.
	RelatedRedemptionToken *string `json:"related_redemption_token,omitempty"`
	// Unique identifier of the reward program for which to return reward entries.
	RewardProgramToken string `json:"reward_program_token"`
	// Unique identifier of the reward rules config used to determine the value of the reward entry.
	RewardRulesConfigToken string `json:"reward_rules_config_token"`
	Status RewardEntryStatus `json:"status"`
	// Unique identifier of the reward entry.
	Token string `json:"token"`
	// The transaction amount to which the reward rule was applied. Used to determine the value of the reward entry.
	TransactionAmount float32 `json:"transaction_amount"`
	// Value of the reward entry.
	Value *float32 `json:"value,omitempty"`
}

// NewRewardProgramsEntriesResponse instantiates a new RewardProgramsEntriesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRewardProgramsEntriesResponse(createdTime time.Time, note string, relatedJournalEntryToken string, rewardProgramToken string, rewardRulesConfigToken string, status RewardEntryStatus, token string, transactionAmount float32) *RewardProgramsEntriesResponse {
	this := RewardProgramsEntriesResponse{}
	this.CreatedTime = createdTime
	this.Note = note
	this.RelatedJournalEntryToken = relatedJournalEntryToken
	this.RewardProgramToken = rewardProgramToken
	this.RewardRulesConfigToken = rewardRulesConfigToken
	this.Status = status
	this.Token = token
	this.TransactionAmount = transactionAmount
	return &this
}

// NewRewardProgramsEntriesResponseWithDefaults instantiates a new RewardProgramsEntriesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRewardProgramsEntriesResponseWithDefaults() *RewardProgramsEntriesResponse {
	this := RewardProgramsEntriesResponse{}
	return &this
}

// GetCreatedTime returns the CreatedTime field value
func (o *RewardProgramsEntriesResponse) GetCreatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *RewardProgramsEntriesResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = v
}

// GetMcc returns the Mcc field value if set, zero value otherwise.
func (o *RewardProgramsEntriesResponse) GetMcc() string {
	if o == nil || IsNil(o.Mcc) {
		var ret string
		return ret
	}
	return *o.Mcc
}

// GetMccOk returns a tuple with the Mcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetMccOk() (*string, bool) {
	if o == nil || IsNil(o.Mcc) {
		return nil, false
	}
	return o.Mcc, true
}

// HasMcc returns a boolean if a field has been set.
func (o *RewardProgramsEntriesResponse) HasMcc() bool {
	if o != nil && !IsNil(o.Mcc) {
		return true
	}

	return false
}

// SetMcc gets a reference to the given string and assigns it to the Mcc field.
func (o *RewardProgramsEntriesResponse) SetMcc(v string) {
	o.Mcc = &v
}

// GetMid returns the Mid field value if set, zero value otherwise.
func (o *RewardProgramsEntriesResponse) GetMid() string {
	if o == nil || IsNil(o.Mid) {
		var ret string
		return ret
	}
	return *o.Mid
}

// GetMidOk returns a tuple with the Mid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetMidOk() (*string, bool) {
	if o == nil || IsNil(o.Mid) {
		return nil, false
	}
	return o.Mid, true
}

// HasMid returns a boolean if a field has been set.
func (o *RewardProgramsEntriesResponse) HasMid() bool {
	if o != nil && !IsNil(o.Mid) {
		return true
	}

	return false
}

// SetMid gets a reference to the given string and assigns it to the Mid field.
func (o *RewardProgramsEntriesResponse) SetMid(v string) {
	o.Mid = &v
}

// GetNote returns the Note field value
func (o *RewardProgramsEntriesResponse) GetNote() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Note
}

// GetNoteOk returns a tuple with the Note field value
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Note, true
}

// SetNote sets field value
func (o *RewardProgramsEntriesResponse) SetNote(v string) {
	o.Note = v
}

// GetRelatedJournalEntryToken returns the RelatedJournalEntryToken field value
func (o *RewardProgramsEntriesResponse) GetRelatedJournalEntryToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelatedJournalEntryToken
}

// GetRelatedJournalEntryTokenOk returns a tuple with the RelatedJournalEntryToken field value
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetRelatedJournalEntryTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelatedJournalEntryToken, true
}

// SetRelatedJournalEntryToken sets field value
func (o *RewardProgramsEntriesResponse) SetRelatedJournalEntryToken(v string) {
	o.RelatedJournalEntryToken = v
}

// GetRelatedRedemptionToken returns the RelatedRedemptionToken field value if set, zero value otherwise.
func (o *RewardProgramsEntriesResponse) GetRelatedRedemptionToken() string {
	if o == nil || IsNil(o.RelatedRedemptionToken) {
		var ret string
		return ret
	}
	return *o.RelatedRedemptionToken
}

// GetRelatedRedemptionTokenOk returns a tuple with the RelatedRedemptionToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetRelatedRedemptionTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RelatedRedemptionToken) {
		return nil, false
	}
	return o.RelatedRedemptionToken, true
}

// HasRelatedRedemptionToken returns a boolean if a field has been set.
func (o *RewardProgramsEntriesResponse) HasRelatedRedemptionToken() bool {
	if o != nil && !IsNil(o.RelatedRedemptionToken) {
		return true
	}

	return false
}

// SetRelatedRedemptionToken gets a reference to the given string and assigns it to the RelatedRedemptionToken field.
func (o *RewardProgramsEntriesResponse) SetRelatedRedemptionToken(v string) {
	o.RelatedRedemptionToken = &v
}

// GetRewardProgramToken returns the RewardProgramToken field value
func (o *RewardProgramsEntriesResponse) GetRewardProgramToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RewardProgramToken
}

// GetRewardProgramTokenOk returns a tuple with the RewardProgramToken field value
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetRewardProgramTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RewardProgramToken, true
}

// SetRewardProgramToken sets field value
func (o *RewardProgramsEntriesResponse) SetRewardProgramToken(v string) {
	o.RewardProgramToken = v
}

// GetRewardRulesConfigToken returns the RewardRulesConfigToken field value
func (o *RewardProgramsEntriesResponse) GetRewardRulesConfigToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RewardRulesConfigToken
}

// GetRewardRulesConfigTokenOk returns a tuple with the RewardRulesConfigToken field value
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetRewardRulesConfigTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RewardRulesConfigToken, true
}

// SetRewardRulesConfigToken sets field value
func (o *RewardProgramsEntriesResponse) SetRewardRulesConfigToken(v string) {
	o.RewardRulesConfigToken = v
}

// GetStatus returns the Status field value
func (o *RewardProgramsEntriesResponse) GetStatus() RewardEntryStatus {
	if o == nil {
		var ret RewardEntryStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetStatusOk() (*RewardEntryStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *RewardProgramsEntriesResponse) SetStatus(v RewardEntryStatus) {
	o.Status = v
}

// GetToken returns the Token field value
func (o *RewardProgramsEntriesResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *RewardProgramsEntriesResponse) SetToken(v string) {
	o.Token = v
}

// GetTransactionAmount returns the TransactionAmount field value
func (o *RewardProgramsEntriesResponse) GetTransactionAmount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TransactionAmount
}

// GetTransactionAmountOk returns a tuple with the TransactionAmount field value
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetTransactionAmountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionAmount, true
}

// SetTransactionAmount sets field value
func (o *RewardProgramsEntriesResponse) SetTransactionAmount(v float32) {
	o.TransactionAmount = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *RewardProgramsEntriesResponse) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RewardProgramsEntriesResponse) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RewardProgramsEntriesResponse) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *RewardProgramsEntriesResponse) SetValue(v float32) {
	o.Value = &v
}

func (o RewardProgramsEntriesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RewardProgramsEntriesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_time"] = o.CreatedTime
	if !IsNil(o.Mcc) {
		toSerialize["mcc"] = o.Mcc
	}
	if !IsNil(o.Mid) {
		toSerialize["mid"] = o.Mid
	}
	toSerialize["note"] = o.Note
	toSerialize["related_journal_entry_token"] = o.RelatedJournalEntryToken
	if !IsNil(o.RelatedRedemptionToken) {
		toSerialize["related_redemption_token"] = o.RelatedRedemptionToken
	}
	toSerialize["reward_program_token"] = o.RewardProgramToken
	toSerialize["reward_rules_config_token"] = o.RewardRulesConfigToken
	toSerialize["status"] = o.Status
	toSerialize["token"] = o.Token
	toSerialize["transaction_amount"] = o.TransactionAmount
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableRewardProgramsEntriesResponse struct {
	value *RewardProgramsEntriesResponse
	isSet bool
}

func (v NullableRewardProgramsEntriesResponse) Get() *RewardProgramsEntriesResponse {
	return v.value
}

func (v *NullableRewardProgramsEntriesResponse) Set(val *RewardProgramsEntriesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRewardProgramsEntriesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRewardProgramsEntriesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRewardProgramsEntriesResponse(val *RewardProgramsEntriesResponse) *NullableRewardProgramsEntriesResponse {
	return &NullableRewardProgramsEntriesResponse{value: val, isSet: true}
}

func (v NullableRewardProgramsEntriesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRewardProgramsEntriesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


