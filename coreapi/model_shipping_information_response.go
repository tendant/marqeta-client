/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the ShippingInformationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShippingInformationResponse{}

// ShippingInformationResponse Specifies shipping details for the order.  This object is returned if it exists in the resource.
type ShippingInformationResponse struct {
	// Specifies the value of the care of (C/O) line on the mailing carrier.  This field is returned if it exists in the resource.
	CareOfLine *string `json:"care_of_line,omitempty"`
	// Specifies the shipping service.  This field is returned if it exists in the resource.
	Method *string `json:"method,omitempty"`
	RecipientAddress *FulfillmentAddressResponse `json:"recipient_address,omitempty"`
	ReturnAddress *FulfillmentAddressResponse `json:"return_address,omitempty"`
}

// NewShippingInformationResponse instantiates a new ShippingInformationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShippingInformationResponse() *ShippingInformationResponse {
	this := ShippingInformationResponse{}
	return &this
}

// NewShippingInformationResponseWithDefaults instantiates a new ShippingInformationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShippingInformationResponseWithDefaults() *ShippingInformationResponse {
	this := ShippingInformationResponse{}
	return &this
}

// GetCareOfLine returns the CareOfLine field value if set, zero value otherwise.
func (o *ShippingInformationResponse) GetCareOfLine() string {
	if o == nil || IsNil(o.CareOfLine) {
		var ret string
		return ret
	}
	return *o.CareOfLine
}

// GetCareOfLineOk returns a tuple with the CareOfLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShippingInformationResponse) GetCareOfLineOk() (*string, bool) {
	if o == nil || IsNil(o.CareOfLine) {
		return nil, false
	}
	return o.CareOfLine, true
}

// HasCareOfLine returns a boolean if a field has been set.
func (o *ShippingInformationResponse) HasCareOfLine() bool {
	if o != nil && !IsNil(o.CareOfLine) {
		return true
	}

	return false
}

// SetCareOfLine gets a reference to the given string and assigns it to the CareOfLine field.
func (o *ShippingInformationResponse) SetCareOfLine(v string) {
	o.CareOfLine = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *ShippingInformationResponse) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShippingInformationResponse) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *ShippingInformationResponse) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *ShippingInformationResponse) SetMethod(v string) {
	o.Method = &v
}

// GetRecipientAddress returns the RecipientAddress field value if set, zero value otherwise.
func (o *ShippingInformationResponse) GetRecipientAddress() FulfillmentAddressResponse {
	if o == nil || IsNil(o.RecipientAddress) {
		var ret FulfillmentAddressResponse
		return ret
	}
	return *o.RecipientAddress
}

// GetRecipientAddressOk returns a tuple with the RecipientAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShippingInformationResponse) GetRecipientAddressOk() (*FulfillmentAddressResponse, bool) {
	if o == nil || IsNil(o.RecipientAddress) {
		return nil, false
	}
	return o.RecipientAddress, true
}

// HasRecipientAddress returns a boolean if a field has been set.
func (o *ShippingInformationResponse) HasRecipientAddress() bool {
	if o != nil && !IsNil(o.RecipientAddress) {
		return true
	}

	return false
}

// SetRecipientAddress gets a reference to the given FulfillmentAddressResponse and assigns it to the RecipientAddress field.
func (o *ShippingInformationResponse) SetRecipientAddress(v FulfillmentAddressResponse) {
	o.RecipientAddress = &v
}

// GetReturnAddress returns the ReturnAddress field value if set, zero value otherwise.
func (o *ShippingInformationResponse) GetReturnAddress() FulfillmentAddressResponse {
	if o == nil || IsNil(o.ReturnAddress) {
		var ret FulfillmentAddressResponse
		return ret
	}
	return *o.ReturnAddress
}

// GetReturnAddressOk returns a tuple with the ReturnAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShippingInformationResponse) GetReturnAddressOk() (*FulfillmentAddressResponse, bool) {
	if o == nil || IsNil(o.ReturnAddress) {
		return nil, false
	}
	return o.ReturnAddress, true
}

// HasReturnAddress returns a boolean if a field has been set.
func (o *ShippingInformationResponse) HasReturnAddress() bool {
	if o != nil && !IsNil(o.ReturnAddress) {
		return true
	}

	return false
}

// SetReturnAddress gets a reference to the given FulfillmentAddressResponse and assigns it to the ReturnAddress field.
func (o *ShippingInformationResponse) SetReturnAddress(v FulfillmentAddressResponse) {
	o.ReturnAddress = &v
}

func (o ShippingInformationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShippingInformationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CareOfLine) {
		toSerialize["care_of_line"] = o.CareOfLine
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.RecipientAddress) {
		toSerialize["recipient_address"] = o.RecipientAddress
	}
	if !IsNil(o.ReturnAddress) {
		toSerialize["return_address"] = o.ReturnAddress
	}
	return toSerialize, nil
}

type NullableShippingInformationResponse struct {
	value *ShippingInformationResponse
	isSet bool
}

func (v NullableShippingInformationResponse) Get() *ShippingInformationResponse {
	return v.value
}

func (v *NullableShippingInformationResponse) Set(val *ShippingInformationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableShippingInformationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableShippingInformationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShippingInformationResponse(val *ShippingInformationResponse) *NullableShippingInformationResponse {
	return &NullableShippingInformationResponse{value: val, isSet: true}
}

func (v NullableShippingInformationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShippingInformationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


