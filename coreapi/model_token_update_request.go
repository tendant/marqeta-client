/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the TokenUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenUpdateRequest{}

// TokenUpdateRequest struct for TokenUpdateRequest
type TokenUpdateRequest struct {
	// Indicates whether the card funding source is active.
	Active *bool `json:"active,omitempty"`
	// Expiration date for the payment card.
	ExpDate string `json:"exp_date"`
	// If there are multiple funding sources, this field specifies which source is used by default in funding calls. If there is only one funding source, the system ignores this field and always uses that source.
	IsDefaultAccount *bool `json:"is_default_account,omitempty"`
}

// NewTokenUpdateRequest instantiates a new TokenUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenUpdateRequest(expDate string) *TokenUpdateRequest {
	this := TokenUpdateRequest{}
	var active bool = true
	this.Active = &active
	this.ExpDate = expDate
	var isDefaultAccount bool = false
	this.IsDefaultAccount = &isDefaultAccount
	return &this
}

// NewTokenUpdateRequestWithDefaults instantiates a new TokenUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenUpdateRequestWithDefaults() *TokenUpdateRequest {
	this := TokenUpdateRequest{}
	var active bool = true
	this.Active = &active
	var isDefaultAccount bool = false
	this.IsDefaultAccount = &isDefaultAccount
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *TokenUpdateRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenUpdateRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *TokenUpdateRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *TokenUpdateRequest) SetActive(v bool) {
	o.Active = &v
}

// GetExpDate returns the ExpDate field value
func (o *TokenUpdateRequest) GetExpDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpDate
}

// GetExpDateOk returns a tuple with the ExpDate field value
// and a boolean to check if the value has been set.
func (o *TokenUpdateRequest) GetExpDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpDate, true
}

// SetExpDate sets field value
func (o *TokenUpdateRequest) SetExpDate(v string) {
	o.ExpDate = v
}

// GetIsDefaultAccount returns the IsDefaultAccount field value if set, zero value otherwise.
func (o *TokenUpdateRequest) GetIsDefaultAccount() bool {
	if o == nil || IsNil(o.IsDefaultAccount) {
		var ret bool
		return ret
	}
	return *o.IsDefaultAccount
}

// GetIsDefaultAccountOk returns a tuple with the IsDefaultAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenUpdateRequest) GetIsDefaultAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefaultAccount) {
		return nil, false
	}
	return o.IsDefaultAccount, true
}

// HasIsDefaultAccount returns a boolean if a field has been set.
func (o *TokenUpdateRequest) HasIsDefaultAccount() bool {
	if o != nil && !IsNil(o.IsDefaultAccount) {
		return true
	}

	return false
}

// SetIsDefaultAccount gets a reference to the given bool and assigns it to the IsDefaultAccount field.
func (o *TokenUpdateRequest) SetIsDefaultAccount(v bool) {
	o.IsDefaultAccount = &v
}

func (o TokenUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	toSerialize["exp_date"] = o.ExpDate
	if !IsNil(o.IsDefaultAccount) {
		toSerialize["is_default_account"] = o.IsDefaultAccount
	}
	return toSerialize, nil
}

type NullableTokenUpdateRequest struct {
	value *TokenUpdateRequest
	isSet bool
}

func (v NullableTokenUpdateRequest) Get() *TokenUpdateRequest {
	return v.value
}

func (v *NullableTokenUpdateRequest) Set(val *TokenUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenUpdateRequest(val *TokenUpdateRequest) *NullableTokenUpdateRequest {
	return &NullableTokenUpdateRequest{value: val, isSet: true}
}

func (v NullableTokenUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


