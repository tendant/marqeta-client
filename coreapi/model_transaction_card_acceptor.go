/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the TransactionCardAcceptor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionCardAcceptor{}

// TransactionCardAcceptor Contains information about the merchant.
type TransactionCardAcceptor struct {
	// Card acceptor's address. May be returned if the request uses Transaction Model v1 of the Marqeta Core API. Not returned for Transaction Model v2 requests.
	Address *string `json:"address,omitempty"`
	// Card acceptor's city.
	City *string `json:"city,omitempty"`
	// Card acceptor's country code. May be returned if the request uses Transaction Model v2 of the Marqeta Core API. Not returned for Transaction Model v1 requests.
	CountryCode *string `json:"country_code,omitempty"`
	// The merchant's country of origin.  A merchant's country of origin can be different from the country in which the merchant is located. For example, embassies are physically located in countries that are not their country of origin: a Mexican embassy might be physically located in Singapore, but the country of origin is Mexico.  This field is included when the cardholder conducts a transaction with a government-controlled merchant using a Marqeta-issued card.
	CountryOfOrigin *string `json:"country_of_origin,omitempty"`
	CustomerServicePhone *string `json:"customer_service_phone,omitempty"`
	IndependentSalesOrganizationId *string `json:"independent_sales_organization_id,omitempty"`
	// Merchant category code (MCC).
	Mcc *string `json:"mcc,omitempty"`
	// An array of `mcc_groups`.
	MccGroups []string `json:"mcc_groups,omitempty"`
	MerchantTaxId *string `json:"merchant_tax_id,omitempty"`
	// The merchant identifier.
	Mid *string `json:"mid,omitempty"`
	// Card acceptor's name.
	Name *string `json:"name,omitempty"`
	NetworkAssignedId *string `json:"network_assigned_id,omitempty"`
	// The merchant identifier on the card network.
	NetworkMid *string `json:"network_mid,omitempty"`
	PaymentFacilitatorId *string `json:"payment_facilitator_id,omitempty"`
	// The name of the payment facilitator, including the sub-merchant identifier, of an original credit transaction. This field is returned when a payment facilitator participates in the transaction.
	PaymentFacilitatorName *string `json:"payment_facilitator_name,omitempty"`
	Phone *string `json:"phone,omitempty"`
	Poi *TerminalModel `json:"poi,omitempty"`
	// Card acceptor's postal code.
	PostalCode *string `json:"postal_code,omitempty"`
	SpecialMerchantId *string `json:"special_merchant_id,omitempty"`
	// Two-character state, province, or territorial abbreviation.  For a complete list of valid state and province abbreviations, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.  *Note*: Non-US merchants may return more than 2 char for this field.
	State *string `json:"state,omitempty"`
	SubMerchantId *string `json:"sub_merchant_id,omitempty"`
	// The name of the transfer service provider of a money transfer original credit transaction. This field is included when a transfer service provider participates in the transaction.
	TransferServiceProviderName *string `json:"transfer_service_provider_name,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewTransactionCardAcceptor instantiates a new TransactionCardAcceptor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionCardAcceptor() *TransactionCardAcceptor {
	this := TransactionCardAcceptor{}
	return &this
}

// NewTransactionCardAcceptorWithDefaults instantiates a new TransactionCardAcceptor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionCardAcceptorWithDefaults() *TransactionCardAcceptor {
	this := TransactionCardAcceptor{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *TransactionCardAcceptor) SetAddress(v string) {
	o.Address = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *TransactionCardAcceptor) SetCity(v string) {
	o.City = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *TransactionCardAcceptor) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCountryOfOrigin returns the CountryOfOrigin field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetCountryOfOrigin() string {
	if o == nil || IsNil(o.CountryOfOrigin) {
		var ret string
		return ret
	}
	return *o.CountryOfOrigin
}

// GetCountryOfOriginOk returns a tuple with the CountryOfOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetCountryOfOriginOk() (*string, bool) {
	if o == nil || IsNil(o.CountryOfOrigin) {
		return nil, false
	}
	return o.CountryOfOrigin, true
}

// HasCountryOfOrigin returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasCountryOfOrigin() bool {
	if o != nil && !IsNil(o.CountryOfOrigin) {
		return true
	}

	return false
}

// SetCountryOfOrigin gets a reference to the given string and assigns it to the CountryOfOrigin field.
func (o *TransactionCardAcceptor) SetCountryOfOrigin(v string) {
	o.CountryOfOrigin = &v
}

// GetCustomerServicePhone returns the CustomerServicePhone field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetCustomerServicePhone() string {
	if o == nil || IsNil(o.CustomerServicePhone) {
		var ret string
		return ret
	}
	return *o.CustomerServicePhone
}

// GetCustomerServicePhoneOk returns a tuple with the CustomerServicePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetCustomerServicePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerServicePhone) {
		return nil, false
	}
	return o.CustomerServicePhone, true
}

// HasCustomerServicePhone returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasCustomerServicePhone() bool {
	if o != nil && !IsNil(o.CustomerServicePhone) {
		return true
	}

	return false
}

// SetCustomerServicePhone gets a reference to the given string and assigns it to the CustomerServicePhone field.
func (o *TransactionCardAcceptor) SetCustomerServicePhone(v string) {
	o.CustomerServicePhone = &v
}

// GetIndependentSalesOrganizationId returns the IndependentSalesOrganizationId field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetIndependentSalesOrganizationId() string {
	if o == nil || IsNil(o.IndependentSalesOrganizationId) {
		var ret string
		return ret
	}
	return *o.IndependentSalesOrganizationId
}

// GetIndependentSalesOrganizationIdOk returns a tuple with the IndependentSalesOrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetIndependentSalesOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.IndependentSalesOrganizationId) {
		return nil, false
	}
	return o.IndependentSalesOrganizationId, true
}

// HasIndependentSalesOrganizationId returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasIndependentSalesOrganizationId() bool {
	if o != nil && !IsNil(o.IndependentSalesOrganizationId) {
		return true
	}

	return false
}

// SetIndependentSalesOrganizationId gets a reference to the given string and assigns it to the IndependentSalesOrganizationId field.
func (o *TransactionCardAcceptor) SetIndependentSalesOrganizationId(v string) {
	o.IndependentSalesOrganizationId = &v
}

// GetMcc returns the Mcc field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetMcc() string {
	if o == nil || IsNil(o.Mcc) {
		var ret string
		return ret
	}
	return *o.Mcc
}

// GetMccOk returns a tuple with the Mcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetMccOk() (*string, bool) {
	if o == nil || IsNil(o.Mcc) {
		return nil, false
	}
	return o.Mcc, true
}

// HasMcc returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasMcc() bool {
	if o != nil && !IsNil(o.Mcc) {
		return true
	}

	return false
}

// SetMcc gets a reference to the given string and assigns it to the Mcc field.
func (o *TransactionCardAcceptor) SetMcc(v string) {
	o.Mcc = &v
}

// GetMccGroups returns the MccGroups field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetMccGroups() []string {
	if o == nil || IsNil(o.MccGroups) {
		var ret []string
		return ret
	}
	return o.MccGroups
}

// GetMccGroupsOk returns a tuple with the MccGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetMccGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.MccGroups) {
		return nil, false
	}
	return o.MccGroups, true
}

// HasMccGroups returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasMccGroups() bool {
	if o != nil && !IsNil(o.MccGroups) {
		return true
	}

	return false
}

// SetMccGroups gets a reference to the given []string and assigns it to the MccGroups field.
func (o *TransactionCardAcceptor) SetMccGroups(v []string) {
	o.MccGroups = v
}

// GetMerchantTaxId returns the MerchantTaxId field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetMerchantTaxId() string {
	if o == nil || IsNil(o.MerchantTaxId) {
		var ret string
		return ret
	}
	return *o.MerchantTaxId
}

// GetMerchantTaxIdOk returns a tuple with the MerchantTaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetMerchantTaxIdOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantTaxId) {
		return nil, false
	}
	return o.MerchantTaxId, true
}

// HasMerchantTaxId returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasMerchantTaxId() bool {
	if o != nil && !IsNil(o.MerchantTaxId) {
		return true
	}

	return false
}

// SetMerchantTaxId gets a reference to the given string and assigns it to the MerchantTaxId field.
func (o *TransactionCardAcceptor) SetMerchantTaxId(v string) {
	o.MerchantTaxId = &v
}

// GetMid returns the Mid field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetMid() string {
	if o == nil || IsNil(o.Mid) {
		var ret string
		return ret
	}
	return *o.Mid
}

// GetMidOk returns a tuple with the Mid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetMidOk() (*string, bool) {
	if o == nil || IsNil(o.Mid) {
		return nil, false
	}
	return o.Mid, true
}

// HasMid returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasMid() bool {
	if o != nil && !IsNil(o.Mid) {
		return true
	}

	return false
}

// SetMid gets a reference to the given string and assigns it to the Mid field.
func (o *TransactionCardAcceptor) SetMid(v string) {
	o.Mid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TransactionCardAcceptor) SetName(v string) {
	o.Name = &v
}

// GetNetworkAssignedId returns the NetworkAssignedId field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetNetworkAssignedId() string {
	if o == nil || IsNil(o.NetworkAssignedId) {
		var ret string
		return ret
	}
	return *o.NetworkAssignedId
}

// GetNetworkAssignedIdOk returns a tuple with the NetworkAssignedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetNetworkAssignedIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkAssignedId) {
		return nil, false
	}
	return o.NetworkAssignedId, true
}

// HasNetworkAssignedId returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasNetworkAssignedId() bool {
	if o != nil && !IsNil(o.NetworkAssignedId) {
		return true
	}

	return false
}

// SetNetworkAssignedId gets a reference to the given string and assigns it to the NetworkAssignedId field.
func (o *TransactionCardAcceptor) SetNetworkAssignedId(v string) {
	o.NetworkAssignedId = &v
}

// GetNetworkMid returns the NetworkMid field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetNetworkMid() string {
	if o == nil || IsNil(o.NetworkMid) {
		var ret string
		return ret
	}
	return *o.NetworkMid
}

// GetNetworkMidOk returns a tuple with the NetworkMid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetNetworkMidOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkMid) {
		return nil, false
	}
	return o.NetworkMid, true
}

// HasNetworkMid returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasNetworkMid() bool {
	if o != nil && !IsNil(o.NetworkMid) {
		return true
	}

	return false
}

// SetNetworkMid gets a reference to the given string and assigns it to the NetworkMid field.
func (o *TransactionCardAcceptor) SetNetworkMid(v string) {
	o.NetworkMid = &v
}

// GetPaymentFacilitatorId returns the PaymentFacilitatorId field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetPaymentFacilitatorId() string {
	if o == nil || IsNil(o.PaymentFacilitatorId) {
		var ret string
		return ret
	}
	return *o.PaymentFacilitatorId
}

// GetPaymentFacilitatorIdOk returns a tuple with the PaymentFacilitatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetPaymentFacilitatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentFacilitatorId) {
		return nil, false
	}
	return o.PaymentFacilitatorId, true
}

// HasPaymentFacilitatorId returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasPaymentFacilitatorId() bool {
	if o != nil && !IsNil(o.PaymentFacilitatorId) {
		return true
	}

	return false
}

// SetPaymentFacilitatorId gets a reference to the given string and assigns it to the PaymentFacilitatorId field.
func (o *TransactionCardAcceptor) SetPaymentFacilitatorId(v string) {
	o.PaymentFacilitatorId = &v
}

// GetPaymentFacilitatorName returns the PaymentFacilitatorName field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetPaymentFacilitatorName() string {
	if o == nil || IsNil(o.PaymentFacilitatorName) {
		var ret string
		return ret
	}
	return *o.PaymentFacilitatorName
}

// GetPaymentFacilitatorNameOk returns a tuple with the PaymentFacilitatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetPaymentFacilitatorNameOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentFacilitatorName) {
		return nil, false
	}
	return o.PaymentFacilitatorName, true
}

// HasPaymentFacilitatorName returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasPaymentFacilitatorName() bool {
	if o != nil && !IsNil(o.PaymentFacilitatorName) {
		return true
	}

	return false
}

// SetPaymentFacilitatorName gets a reference to the given string and assigns it to the PaymentFacilitatorName field.
func (o *TransactionCardAcceptor) SetPaymentFacilitatorName(v string) {
	o.PaymentFacilitatorName = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *TransactionCardAcceptor) SetPhone(v string) {
	o.Phone = &v
}

// GetPoi returns the Poi field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetPoi() TerminalModel {
	if o == nil || IsNil(o.Poi) {
		var ret TerminalModel
		return ret
	}
	return *o.Poi
}

// GetPoiOk returns a tuple with the Poi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetPoiOk() (*TerminalModel, bool) {
	if o == nil || IsNil(o.Poi) {
		return nil, false
	}
	return o.Poi, true
}

// HasPoi returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasPoi() bool {
	if o != nil && !IsNil(o.Poi) {
		return true
	}

	return false
}

// SetPoi gets a reference to the given TerminalModel and assigns it to the Poi field.
func (o *TransactionCardAcceptor) SetPoi(v TerminalModel) {
	o.Poi = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *TransactionCardAcceptor) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetSpecialMerchantId returns the SpecialMerchantId field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetSpecialMerchantId() string {
	if o == nil || IsNil(o.SpecialMerchantId) {
		var ret string
		return ret
	}
	return *o.SpecialMerchantId
}

// GetSpecialMerchantIdOk returns a tuple with the SpecialMerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetSpecialMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpecialMerchantId) {
		return nil, false
	}
	return o.SpecialMerchantId, true
}

// HasSpecialMerchantId returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasSpecialMerchantId() bool {
	if o != nil && !IsNil(o.SpecialMerchantId) {
		return true
	}

	return false
}

// SetSpecialMerchantId gets a reference to the given string and assigns it to the SpecialMerchantId field.
func (o *TransactionCardAcceptor) SetSpecialMerchantId(v string) {
	o.SpecialMerchantId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *TransactionCardAcceptor) SetState(v string) {
	o.State = &v
}

// GetSubMerchantId returns the SubMerchantId field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetSubMerchantId() string {
	if o == nil || IsNil(o.SubMerchantId) {
		var ret string
		return ret
	}
	return *o.SubMerchantId
}

// GetSubMerchantIdOk returns a tuple with the SubMerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetSubMerchantIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubMerchantId) {
		return nil, false
	}
	return o.SubMerchantId, true
}

// HasSubMerchantId returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasSubMerchantId() bool {
	if o != nil && !IsNil(o.SubMerchantId) {
		return true
	}

	return false
}

// SetSubMerchantId gets a reference to the given string and assigns it to the SubMerchantId field.
func (o *TransactionCardAcceptor) SetSubMerchantId(v string) {
	o.SubMerchantId = &v
}

// GetTransferServiceProviderName returns the TransferServiceProviderName field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetTransferServiceProviderName() string {
	if o == nil || IsNil(o.TransferServiceProviderName) {
		var ret string
		return ret
	}
	return *o.TransferServiceProviderName
}

// GetTransferServiceProviderNameOk returns a tuple with the TransferServiceProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetTransferServiceProviderNameOk() (*string, bool) {
	if o == nil || IsNil(o.TransferServiceProviderName) {
		return nil, false
	}
	return o.TransferServiceProviderName, true
}

// HasTransferServiceProviderName returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasTransferServiceProviderName() bool {
	if o != nil && !IsNil(o.TransferServiceProviderName) {
		return true
	}

	return false
}

// SetTransferServiceProviderName gets a reference to the given string and assigns it to the TransferServiceProviderName field.
func (o *TransactionCardAcceptor) SetTransferServiceProviderName(v string) {
	o.TransferServiceProviderName = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TransactionCardAcceptor) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionCardAcceptor) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TransactionCardAcceptor) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TransactionCardAcceptor) SetUrl(v string) {
	o.Url = &v
}

func (o TransactionCardAcceptor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionCardAcceptor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.CountryOfOrigin) {
		toSerialize["country_of_origin"] = o.CountryOfOrigin
	}
	if !IsNil(o.CustomerServicePhone) {
		toSerialize["customer_service_phone"] = o.CustomerServicePhone
	}
	if !IsNil(o.IndependentSalesOrganizationId) {
		toSerialize["independent_sales_organization_id"] = o.IndependentSalesOrganizationId
	}
	if !IsNil(o.Mcc) {
		toSerialize["mcc"] = o.Mcc
	}
	if !IsNil(o.MccGroups) {
		toSerialize["mcc_groups"] = o.MccGroups
	}
	if !IsNil(o.MerchantTaxId) {
		toSerialize["merchant_tax_id"] = o.MerchantTaxId
	}
	if !IsNil(o.Mid) {
		toSerialize["mid"] = o.Mid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NetworkAssignedId) {
		toSerialize["network_assigned_id"] = o.NetworkAssignedId
	}
	if !IsNil(o.NetworkMid) {
		toSerialize["network_mid"] = o.NetworkMid
	}
	if !IsNil(o.PaymentFacilitatorId) {
		toSerialize["payment_facilitator_id"] = o.PaymentFacilitatorId
	}
	if !IsNil(o.PaymentFacilitatorName) {
		toSerialize["payment_facilitator_name"] = o.PaymentFacilitatorName
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Poi) {
		toSerialize["poi"] = o.Poi
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postal_code"] = o.PostalCode
	}
	if !IsNil(o.SpecialMerchantId) {
		toSerialize["special_merchant_id"] = o.SpecialMerchantId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.SubMerchantId) {
		toSerialize["sub_merchant_id"] = o.SubMerchantId
	}
	if !IsNil(o.TransferServiceProviderName) {
		toSerialize["transfer_service_provider_name"] = o.TransferServiceProviderName
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableTransactionCardAcceptor struct {
	value *TransactionCardAcceptor
	isSet bool
}

func (v NullableTransactionCardAcceptor) Get() *TransactionCardAcceptor {
	return v.value
}

func (v *NullableTransactionCardAcceptor) Set(val *TransactionCardAcceptor) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionCardAcceptor) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionCardAcceptor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionCardAcceptor(val *TransactionCardAcceptor) *NullableTransactionCardAcceptor {
	return &NullableTransactionCardAcceptor{value: val, isSet: true}
}

func (v NullableTransactionCardAcceptor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionCardAcceptor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


