/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
	"time"
)

// checks if the TransactionMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionMetadata{}

// TransactionMetadata Contains merchant-provided metadata related to the transaction, including details about lodging- and transit-related purchases.  May be returned if the request uses Transaction Model v2 of the Marqeta Core API. Not returned for Transaction Model v1 requests.
type TransactionMetadata struct {
	Airline *Airline `json:"airline,omitempty"`
	// Number of days the pre-authorization is in effect.
	AuthorizationLifeCycle *int32 `json:"authorization_life_cycle,omitempty"`
	// Whether the transaction is cross-border, i.e., when the merchant and the cardholder are located in two different countries.
	CrossBorderTransaction *bool `json:"cross_border_transaction,omitempty"`
	IsDeferredAuthorization *bool `json:"is_deferred_authorization,omitempty"`
	// Whether the transaction is a lodging or vehicle rental.
	IsLodgingAutoRental *bool `json:"is_lodging_auto_rental,omitempty"`
	// Date and time when the lodging check-in or vehicle rental began.
	LodgingAutoRentalStartDate *time.Time `json:"lodging_auto_rental_start_date,omitempty"`
	// Indicates the type of mail or telephone order transaction.
	MotoIndicator *string `json:"moto_indicator,omitempty"`
	OneLegOut *bool `json:"one_leg_out,omitempty"`
	// Channel from which the transaction was originated.
	PaymentChannel *string `json:"payment_channel,omitempty"`
	SpecialPurchaseId *string `json:"special_purchase_id,omitempty"`
	// Industry for which the transaction was originated.
	TransactionCategory *string `json:"transaction_category,omitempty"`
	Transit *Transit `json:"transit,omitempty"`
}

// NewTransactionMetadata instantiates a new TransactionMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionMetadata() *TransactionMetadata {
	this := TransactionMetadata{}
	var crossBorderTransaction bool = false
	this.CrossBorderTransaction = &crossBorderTransaction
	var isLodgingAutoRental bool = false
	this.IsLodgingAutoRental = &isLodgingAutoRental
	return &this
}

// NewTransactionMetadataWithDefaults instantiates a new TransactionMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionMetadataWithDefaults() *TransactionMetadata {
	this := TransactionMetadata{}
	var crossBorderTransaction bool = false
	this.CrossBorderTransaction = &crossBorderTransaction
	var isLodgingAutoRental bool = false
	this.IsLodgingAutoRental = &isLodgingAutoRental
	return &this
}

// GetAirline returns the Airline field value if set, zero value otherwise.
func (o *TransactionMetadata) GetAirline() Airline {
	if o == nil || IsNil(o.Airline) {
		var ret Airline
		return ret
	}
	return *o.Airline
}

// GetAirlineOk returns a tuple with the Airline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetAirlineOk() (*Airline, bool) {
	if o == nil || IsNil(o.Airline) {
		return nil, false
	}
	return o.Airline, true
}

// HasAirline returns a boolean if a field has been set.
func (o *TransactionMetadata) HasAirline() bool {
	if o != nil && !IsNil(o.Airline) {
		return true
	}

	return false
}

// SetAirline gets a reference to the given Airline and assigns it to the Airline field.
func (o *TransactionMetadata) SetAirline(v Airline) {
	o.Airline = &v
}

// GetAuthorizationLifeCycle returns the AuthorizationLifeCycle field value if set, zero value otherwise.
func (o *TransactionMetadata) GetAuthorizationLifeCycle() int32 {
	if o == nil || IsNil(o.AuthorizationLifeCycle) {
		var ret int32
		return ret
	}
	return *o.AuthorizationLifeCycle
}

// GetAuthorizationLifeCycleOk returns a tuple with the AuthorizationLifeCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetAuthorizationLifeCycleOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthorizationLifeCycle) {
		return nil, false
	}
	return o.AuthorizationLifeCycle, true
}

// HasAuthorizationLifeCycle returns a boolean if a field has been set.
func (o *TransactionMetadata) HasAuthorizationLifeCycle() bool {
	if o != nil && !IsNil(o.AuthorizationLifeCycle) {
		return true
	}

	return false
}

// SetAuthorizationLifeCycle gets a reference to the given int32 and assigns it to the AuthorizationLifeCycle field.
func (o *TransactionMetadata) SetAuthorizationLifeCycle(v int32) {
	o.AuthorizationLifeCycle = &v
}

// GetCrossBorderTransaction returns the CrossBorderTransaction field value if set, zero value otherwise.
func (o *TransactionMetadata) GetCrossBorderTransaction() bool {
	if o == nil || IsNil(o.CrossBorderTransaction) {
		var ret bool
		return ret
	}
	return *o.CrossBorderTransaction
}

// GetCrossBorderTransactionOk returns a tuple with the CrossBorderTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetCrossBorderTransactionOk() (*bool, bool) {
	if o == nil || IsNil(o.CrossBorderTransaction) {
		return nil, false
	}
	return o.CrossBorderTransaction, true
}

// HasCrossBorderTransaction returns a boolean if a field has been set.
func (o *TransactionMetadata) HasCrossBorderTransaction() bool {
	if o != nil && !IsNil(o.CrossBorderTransaction) {
		return true
	}

	return false
}

// SetCrossBorderTransaction gets a reference to the given bool and assigns it to the CrossBorderTransaction field.
func (o *TransactionMetadata) SetCrossBorderTransaction(v bool) {
	o.CrossBorderTransaction = &v
}

// GetIsDeferredAuthorization returns the IsDeferredAuthorization field value if set, zero value otherwise.
func (o *TransactionMetadata) GetIsDeferredAuthorization() bool {
	if o == nil || IsNil(o.IsDeferredAuthorization) {
		var ret bool
		return ret
	}
	return *o.IsDeferredAuthorization
}

// GetIsDeferredAuthorizationOk returns a tuple with the IsDeferredAuthorization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetIsDeferredAuthorizationOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeferredAuthorization) {
		return nil, false
	}
	return o.IsDeferredAuthorization, true
}

// HasIsDeferredAuthorization returns a boolean if a field has been set.
func (o *TransactionMetadata) HasIsDeferredAuthorization() bool {
	if o != nil && !IsNil(o.IsDeferredAuthorization) {
		return true
	}

	return false
}

// SetIsDeferredAuthorization gets a reference to the given bool and assigns it to the IsDeferredAuthorization field.
func (o *TransactionMetadata) SetIsDeferredAuthorization(v bool) {
	o.IsDeferredAuthorization = &v
}

// GetIsLodgingAutoRental returns the IsLodgingAutoRental field value if set, zero value otherwise.
func (o *TransactionMetadata) GetIsLodgingAutoRental() bool {
	if o == nil || IsNil(o.IsLodgingAutoRental) {
		var ret bool
		return ret
	}
	return *o.IsLodgingAutoRental
}

// GetIsLodgingAutoRentalOk returns a tuple with the IsLodgingAutoRental field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetIsLodgingAutoRentalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLodgingAutoRental) {
		return nil, false
	}
	return o.IsLodgingAutoRental, true
}

// HasIsLodgingAutoRental returns a boolean if a field has been set.
func (o *TransactionMetadata) HasIsLodgingAutoRental() bool {
	if o != nil && !IsNil(o.IsLodgingAutoRental) {
		return true
	}

	return false
}

// SetIsLodgingAutoRental gets a reference to the given bool and assigns it to the IsLodgingAutoRental field.
func (o *TransactionMetadata) SetIsLodgingAutoRental(v bool) {
	o.IsLodgingAutoRental = &v
}

// GetLodgingAutoRentalStartDate returns the LodgingAutoRentalStartDate field value if set, zero value otherwise.
func (o *TransactionMetadata) GetLodgingAutoRentalStartDate() time.Time {
	if o == nil || IsNil(o.LodgingAutoRentalStartDate) {
		var ret time.Time
		return ret
	}
	return *o.LodgingAutoRentalStartDate
}

// GetLodgingAutoRentalStartDateOk returns a tuple with the LodgingAutoRentalStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetLodgingAutoRentalStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LodgingAutoRentalStartDate) {
		return nil, false
	}
	return o.LodgingAutoRentalStartDate, true
}

// HasLodgingAutoRentalStartDate returns a boolean if a field has been set.
func (o *TransactionMetadata) HasLodgingAutoRentalStartDate() bool {
	if o != nil && !IsNil(o.LodgingAutoRentalStartDate) {
		return true
	}

	return false
}

// SetLodgingAutoRentalStartDate gets a reference to the given time.Time and assigns it to the LodgingAutoRentalStartDate field.
func (o *TransactionMetadata) SetLodgingAutoRentalStartDate(v time.Time) {
	o.LodgingAutoRentalStartDate = &v
}

// GetMotoIndicator returns the MotoIndicator field value if set, zero value otherwise.
func (o *TransactionMetadata) GetMotoIndicator() string {
	if o == nil || IsNil(o.MotoIndicator) {
		var ret string
		return ret
	}
	return *o.MotoIndicator
}

// GetMotoIndicatorOk returns a tuple with the MotoIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetMotoIndicatorOk() (*string, bool) {
	if o == nil || IsNil(o.MotoIndicator) {
		return nil, false
	}
	return o.MotoIndicator, true
}

// HasMotoIndicator returns a boolean if a field has been set.
func (o *TransactionMetadata) HasMotoIndicator() bool {
	if o != nil && !IsNil(o.MotoIndicator) {
		return true
	}

	return false
}

// SetMotoIndicator gets a reference to the given string and assigns it to the MotoIndicator field.
func (o *TransactionMetadata) SetMotoIndicator(v string) {
	o.MotoIndicator = &v
}

// GetOneLegOut returns the OneLegOut field value if set, zero value otherwise.
func (o *TransactionMetadata) GetOneLegOut() bool {
	if o == nil || IsNil(o.OneLegOut) {
		var ret bool
		return ret
	}
	return *o.OneLegOut
}

// GetOneLegOutOk returns a tuple with the OneLegOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetOneLegOutOk() (*bool, bool) {
	if o == nil || IsNil(o.OneLegOut) {
		return nil, false
	}
	return o.OneLegOut, true
}

// HasOneLegOut returns a boolean if a field has been set.
func (o *TransactionMetadata) HasOneLegOut() bool {
	if o != nil && !IsNil(o.OneLegOut) {
		return true
	}

	return false
}

// SetOneLegOut gets a reference to the given bool and assigns it to the OneLegOut field.
func (o *TransactionMetadata) SetOneLegOut(v bool) {
	o.OneLegOut = &v
}

// GetPaymentChannel returns the PaymentChannel field value if set, zero value otherwise.
func (o *TransactionMetadata) GetPaymentChannel() string {
	if o == nil || IsNil(o.PaymentChannel) {
		var ret string
		return ret
	}
	return *o.PaymentChannel
}

// GetPaymentChannelOk returns a tuple with the PaymentChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetPaymentChannelOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentChannel) {
		return nil, false
	}
	return o.PaymentChannel, true
}

// HasPaymentChannel returns a boolean if a field has been set.
func (o *TransactionMetadata) HasPaymentChannel() bool {
	if o != nil && !IsNil(o.PaymentChannel) {
		return true
	}

	return false
}

// SetPaymentChannel gets a reference to the given string and assigns it to the PaymentChannel field.
func (o *TransactionMetadata) SetPaymentChannel(v string) {
	o.PaymentChannel = &v
}

// GetSpecialPurchaseId returns the SpecialPurchaseId field value if set, zero value otherwise.
func (o *TransactionMetadata) GetSpecialPurchaseId() string {
	if o == nil || IsNil(o.SpecialPurchaseId) {
		var ret string
		return ret
	}
	return *o.SpecialPurchaseId
}

// GetSpecialPurchaseIdOk returns a tuple with the SpecialPurchaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetSpecialPurchaseIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpecialPurchaseId) {
		return nil, false
	}
	return o.SpecialPurchaseId, true
}

// HasSpecialPurchaseId returns a boolean if a field has been set.
func (o *TransactionMetadata) HasSpecialPurchaseId() bool {
	if o != nil && !IsNil(o.SpecialPurchaseId) {
		return true
	}

	return false
}

// SetSpecialPurchaseId gets a reference to the given string and assigns it to the SpecialPurchaseId field.
func (o *TransactionMetadata) SetSpecialPurchaseId(v string) {
	o.SpecialPurchaseId = &v
}

// GetTransactionCategory returns the TransactionCategory field value if set, zero value otherwise.
func (o *TransactionMetadata) GetTransactionCategory() string {
	if o == nil || IsNil(o.TransactionCategory) {
		var ret string
		return ret
	}
	return *o.TransactionCategory
}

// GetTransactionCategoryOk returns a tuple with the TransactionCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetTransactionCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCategory) {
		return nil, false
	}
	return o.TransactionCategory, true
}

// HasTransactionCategory returns a boolean if a field has been set.
func (o *TransactionMetadata) HasTransactionCategory() bool {
	if o != nil && !IsNil(o.TransactionCategory) {
		return true
	}

	return false
}

// SetTransactionCategory gets a reference to the given string and assigns it to the TransactionCategory field.
func (o *TransactionMetadata) SetTransactionCategory(v string) {
	o.TransactionCategory = &v
}

// GetTransit returns the Transit field value if set, zero value otherwise.
func (o *TransactionMetadata) GetTransit() Transit {
	if o == nil || IsNil(o.Transit) {
		var ret Transit
		return ret
	}
	return *o.Transit
}

// GetTransitOk returns a tuple with the Transit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionMetadata) GetTransitOk() (*Transit, bool) {
	if o == nil || IsNil(o.Transit) {
		return nil, false
	}
	return o.Transit, true
}

// HasTransit returns a boolean if a field has been set.
func (o *TransactionMetadata) HasTransit() bool {
	if o != nil && !IsNil(o.Transit) {
		return true
	}

	return false
}

// SetTransit gets a reference to the given Transit and assigns it to the Transit field.
func (o *TransactionMetadata) SetTransit(v Transit) {
	o.Transit = &v
}

func (o TransactionMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Airline) {
		toSerialize["airline"] = o.Airline
	}
	if !IsNil(o.AuthorizationLifeCycle) {
		toSerialize["authorization_life_cycle"] = o.AuthorizationLifeCycle
	}
	if !IsNil(o.CrossBorderTransaction) {
		toSerialize["cross_border_transaction"] = o.CrossBorderTransaction
	}
	if !IsNil(o.IsDeferredAuthorization) {
		toSerialize["is_deferred_authorization"] = o.IsDeferredAuthorization
	}
	if !IsNil(o.IsLodgingAutoRental) {
		toSerialize["is_lodging_auto_rental"] = o.IsLodgingAutoRental
	}
	if !IsNil(o.LodgingAutoRentalStartDate) {
		toSerialize["lodging_auto_rental_start_date"] = o.LodgingAutoRentalStartDate
	}
	if !IsNil(o.MotoIndicator) {
		toSerialize["moto_indicator"] = o.MotoIndicator
	}
	if !IsNil(o.OneLegOut) {
		toSerialize["one_leg_out"] = o.OneLegOut
	}
	if !IsNil(o.PaymentChannel) {
		toSerialize["payment_channel"] = o.PaymentChannel
	}
	if !IsNil(o.SpecialPurchaseId) {
		toSerialize["special_purchase_id"] = o.SpecialPurchaseId
	}
	if !IsNil(o.TransactionCategory) {
		toSerialize["transaction_category"] = o.TransactionCategory
	}
	if !IsNil(o.Transit) {
		toSerialize["transit"] = o.Transit
	}
	return toSerialize, nil
}

type NullableTransactionMetadata struct {
	value *TransactionMetadata
	isSet bool
}

func (v NullableTransactionMetadata) Get() *TransactionMetadata {
	return v.value
}

func (v *NullableTransactionMetadata) Set(val *TransactionMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionMetadata(val *TransactionMetadata) *NullableTransactionMetadata {
	return &NullableTransactionMetadata{value: val, isSet: true}
}

func (v NullableTransactionMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


