/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marqeta_coreapi_client

import (
	"encoding/json"
)

// checks if the UserCardHolderSearchModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserCardHolderSearchModel{}

// UserCardHolderSearchModel struct for UserCardHolderSearchModel
type UserCardHolderSearchModel struct {
	// Performs a match on the specified deposit account number. Send a `GET` request to `/directdeposits/accounts/{user_token}` to retrieve the deposit account number for a specific cardholder.
	Dda *string `json:"dda,omitempty"`
	// Performs a non-case-sensitive, exact match on the cardholder's `email` field.
	Email *string `json:"email,omitempty"`
	// Performs a non-case-sensitive match on the cardholder's `first_name` field. Matching is partial on the beginning of the name. For example, a match on \"Alex\" returns both \"Alex\" and \"Alexander\".
	FirstName *string `json:"first_name,omitempty"`
	// Performs a non-case-sensitive match on the cardholder's `last_name` field. Matching is partial on the beginning of the name. For example, a match on \"Smith\" returns both \"Smith\" and \"Smithfield\".
	LastName *string `json:"last_name,omitempty"`
	// Performs a match on the cardholder's `phone` field.
	Phone *string `json:"phone,omitempty"`
	// Performs a match on the cardholder's identification number.
	Ssn *string `json:"ssn,omitempty"`
}

// NewUserCardHolderSearchModel instantiates a new UserCardHolderSearchModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCardHolderSearchModel() *UserCardHolderSearchModel {
	this := UserCardHolderSearchModel{}
	return &this
}

// NewUserCardHolderSearchModelWithDefaults instantiates a new UserCardHolderSearchModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCardHolderSearchModelWithDefaults() *UserCardHolderSearchModel {
	this := UserCardHolderSearchModel{}
	return &this
}

// GetDda returns the Dda field value if set, zero value otherwise.
func (o *UserCardHolderSearchModel) GetDda() string {
	if o == nil || IsNil(o.Dda) {
		var ret string
		return ret
	}
	return *o.Dda
}

// GetDdaOk returns a tuple with the Dda field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCardHolderSearchModel) GetDdaOk() (*string, bool) {
	if o == nil || IsNil(o.Dda) {
		return nil, false
	}
	return o.Dda, true
}

// HasDda returns a boolean if a field has been set.
func (o *UserCardHolderSearchModel) HasDda() bool {
	if o != nil && !IsNil(o.Dda) {
		return true
	}

	return false
}

// SetDda gets a reference to the given string and assigns it to the Dda field.
func (o *UserCardHolderSearchModel) SetDda(v string) {
	o.Dda = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserCardHolderSearchModel) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCardHolderSearchModel) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserCardHolderSearchModel) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserCardHolderSearchModel) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *UserCardHolderSearchModel) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCardHolderSearchModel) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *UserCardHolderSearchModel) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *UserCardHolderSearchModel) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UserCardHolderSearchModel) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCardHolderSearchModel) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UserCardHolderSearchModel) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *UserCardHolderSearchModel) SetLastName(v string) {
	o.LastName = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *UserCardHolderSearchModel) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCardHolderSearchModel) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *UserCardHolderSearchModel) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *UserCardHolderSearchModel) SetPhone(v string) {
	o.Phone = &v
}

// GetSsn returns the Ssn field value if set, zero value otherwise.
func (o *UserCardHolderSearchModel) GetSsn() string {
	if o == nil || IsNil(o.Ssn) {
		var ret string
		return ret
	}
	return *o.Ssn
}

// GetSsnOk returns a tuple with the Ssn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCardHolderSearchModel) GetSsnOk() (*string, bool) {
	if o == nil || IsNil(o.Ssn) {
		return nil, false
	}
	return o.Ssn, true
}

// HasSsn returns a boolean if a field has been set.
func (o *UserCardHolderSearchModel) HasSsn() bool {
	if o != nil && !IsNil(o.Ssn) {
		return true
	}

	return false
}

// SetSsn gets a reference to the given string and assigns it to the Ssn field.
func (o *UserCardHolderSearchModel) SetSsn(v string) {
	o.Ssn = &v
}

func (o UserCardHolderSearchModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserCardHolderSearchModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dda) {
		toSerialize["dda"] = o.Dda
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Ssn) {
		toSerialize["ssn"] = o.Ssn
	}
	return toSerialize, nil
}

type NullableUserCardHolderSearchModel struct {
	value *UserCardHolderSearchModel
	isSet bool
}

func (v NullableUserCardHolderSearchModel) Get() *UserCardHolderSearchModel {
	return v.value
}

func (v *NullableUserCardHolderSearchModel) Set(val *UserCardHolderSearchModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCardHolderSearchModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCardHolderSearchModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCardHolderSearchModel(val *UserCardHolderSearchModel) *NullableUserCardHolderSearchModel {
	return &NullableUserCardHolderSearchModel{value: val, isSet: true}
}

func (v NullableUserCardHolderSearchModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCardHolderSearchModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


