/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the ValidationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidationsResponse{}

// ValidationsResponse Contains information about the user.
type ValidationsResponse struct {
	User UserValidationResponse `json:"user"`
}

// NewValidationsResponse instantiates a new ValidationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidationsResponse(user UserValidationResponse) *ValidationsResponse {
	this := ValidationsResponse{}
	this.User = user
	return &this
}

// NewValidationsResponseWithDefaults instantiates a new ValidationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidationsResponseWithDefaults() *ValidationsResponse {
	this := ValidationsResponse{}
	return &this
}

// GetUser returns the User field value
func (o *ValidationsResponse) GetUser() UserValidationResponse {
	if o == nil {
		var ret UserValidationResponse
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *ValidationsResponse) GetUserOk() (*UserValidationResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *ValidationsResponse) SetUser(v UserValidationResponse) {
	o.User = v
}

func (o ValidationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user"] = o.User
	return toSerialize, nil
}

type NullableValidationsResponse struct {
	value *ValidationsResponse
	isSet bool
}

func (v NullableValidationsResponse) Get() *ValidationsResponse {
	return v.value
}

func (v *NullableValidationsResponse) Set(val *ValidationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableValidationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableValidationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidationsResponse(val *ValidationsResponse) *NullableValidationsResponse {
	return &NullableValidationsResponse{value: val, isSet: true}
}

func (v NullableValidationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


