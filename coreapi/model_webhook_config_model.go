/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.11
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coreapi

import (
	"encoding/json"
)

// checks if the WebhookConfigModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookConfigModel{}

// WebhookConfigModel Contains the configuration information for the webhook.
type WebhookConfigModel struct {
	// Password for accessing your webhook endpoint.
	BasicAuthPassword string `json:"basic_auth_password"`
	// Username for accessing your webhook endpoint.
	BasicAuthUsername string `json:"basic_auth_username"`
	// Custom headers to be passed along with the request.
	CustomHeader *map[string]string `json:"custom_header,omitempty"`
	// Randomly chosen string used for implementing HMAC-SHA1.  HMAC-SHA1 provides an added layer of security by authenticating the message and validating message integrity. Using this functionality requires that your webhook endpoint verify the message signature. For information about implementing this functionality, see <</developer-guides/signature-verification, Signature Verification>>.
	Secret *string `json:"secret,omitempty"`
	// URL of your webhook endpoint.
	Url string `json:"url"`
	// Set to `true` to use MTLS for the webhook.
	UseMtls *bool `json:"use_mtls,omitempty"`
}

// NewWebhookConfigModel instantiates a new WebhookConfigModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookConfigModel(basicAuthPassword string, basicAuthUsername string, url string) *WebhookConfigModel {
	this := WebhookConfigModel{}
	this.BasicAuthPassword = basicAuthPassword
	this.BasicAuthUsername = basicAuthUsername
	this.Url = url
	var useMtls bool = false
	this.UseMtls = &useMtls
	return &this
}

// NewWebhookConfigModelWithDefaults instantiates a new WebhookConfigModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookConfigModelWithDefaults() *WebhookConfigModel {
	this := WebhookConfigModel{}
	var useMtls bool = false
	this.UseMtls = &useMtls
	return &this
}

// GetBasicAuthPassword returns the BasicAuthPassword field value
func (o *WebhookConfigModel) GetBasicAuthPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BasicAuthPassword
}

// GetBasicAuthPasswordOk returns a tuple with the BasicAuthPassword field value
// and a boolean to check if the value has been set.
func (o *WebhookConfigModel) GetBasicAuthPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BasicAuthPassword, true
}

// SetBasicAuthPassword sets field value
func (o *WebhookConfigModel) SetBasicAuthPassword(v string) {
	o.BasicAuthPassword = v
}

// GetBasicAuthUsername returns the BasicAuthUsername field value
func (o *WebhookConfigModel) GetBasicAuthUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BasicAuthUsername
}

// GetBasicAuthUsernameOk returns a tuple with the BasicAuthUsername field value
// and a boolean to check if the value has been set.
func (o *WebhookConfigModel) GetBasicAuthUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BasicAuthUsername, true
}

// SetBasicAuthUsername sets field value
func (o *WebhookConfigModel) SetBasicAuthUsername(v string) {
	o.BasicAuthUsername = v
}

// GetCustomHeader returns the CustomHeader field value if set, zero value otherwise.
func (o *WebhookConfigModel) GetCustomHeader() map[string]string {
	if o == nil || IsNil(o.CustomHeader) {
		var ret map[string]string
		return ret
	}
	return *o.CustomHeader
}

// GetCustomHeaderOk returns a tuple with the CustomHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookConfigModel) GetCustomHeaderOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomHeader) {
		return nil, false
	}
	return o.CustomHeader, true
}

// HasCustomHeader returns a boolean if a field has been set.
func (o *WebhookConfigModel) HasCustomHeader() bool {
	if o != nil && !IsNil(o.CustomHeader) {
		return true
	}

	return false
}

// SetCustomHeader gets a reference to the given map[string]string and assigns it to the CustomHeader field.
func (o *WebhookConfigModel) SetCustomHeader(v map[string]string) {
	o.CustomHeader = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *WebhookConfigModel) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookConfigModel) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *WebhookConfigModel) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *WebhookConfigModel) SetSecret(v string) {
	o.Secret = &v
}

// GetUrl returns the Url field value
func (o *WebhookConfigModel) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookConfigModel) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookConfigModel) SetUrl(v string) {
	o.Url = v
}

// GetUseMtls returns the UseMtls field value if set, zero value otherwise.
func (o *WebhookConfigModel) GetUseMtls() bool {
	if o == nil || IsNil(o.UseMtls) {
		var ret bool
		return ret
	}
	return *o.UseMtls
}

// GetUseMtlsOk returns a tuple with the UseMtls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookConfigModel) GetUseMtlsOk() (*bool, bool) {
	if o == nil || IsNil(o.UseMtls) {
		return nil, false
	}
	return o.UseMtls, true
}

// HasUseMtls returns a boolean if a field has been set.
func (o *WebhookConfigModel) HasUseMtls() bool {
	if o != nil && !IsNil(o.UseMtls) {
		return true
	}

	return false
}

// SetUseMtls gets a reference to the given bool and assigns it to the UseMtls field.
func (o *WebhookConfigModel) SetUseMtls(v bool) {
	o.UseMtls = &v
}

func (o WebhookConfigModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookConfigModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["basic_auth_password"] = o.BasicAuthPassword
	toSerialize["basic_auth_username"] = o.BasicAuthUsername
	if !IsNil(o.CustomHeader) {
		toSerialize["custom_header"] = o.CustomHeader
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	toSerialize["url"] = o.Url
	if !IsNil(o.UseMtls) {
		toSerialize["use_mtls"] = o.UseMtls
	}
	return toSerialize, nil
}

type NullableWebhookConfigModel struct {
	value *WebhookConfigModel
	isSet bool
}

func (v NullableWebhookConfigModel) Get() *WebhookConfigModel {
	return v.value
}

func (v *NullableWebhookConfigModel) Set(val *WebhookConfigModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookConfigModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookConfigModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookConfigModel(val *WebhookConfigModel) *NullableWebhookConfigModel {
	return &NullableWebhookConfigModel{value: val, isSet: true}
}

func (v NullableWebhookConfigModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookConfigModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


