openapi: 3.0.3
info:
  contact:
    email: support@marqeta.com
    name: Marqeta
  description:
    Marqeta's Core API endpoints, conveniently annotated to enable code
    generation (including SDKs), test cases, and documentation. Currently in beta.
  termsOfService: https://www.marqeta.com/api-terms
  title: Core API
  version: 3.0.11
servers:
  - url: /v3
security:
  - mqAppAndAccessToken: []
tags:
  - description:
      Use the `/acceptedcountries` endpoint to manage the countries where
      you authorize your cardholders to transact.
    name: Accepted Countries
  - description: |-
      The account holder group is a Marqeta platform resource that allows you to configure multiple account holders (user and/or business resources) as a group.
      It allows certain settings to be selectively applied, depending on whether or not an account holder has passed verification (KYC).

      You associate an account holder with an account holder group using the optional `account_holder_group_token` field in the user or business resource.
      Any account holder that you do not explicitly associate with a group is automatically associated with the program's default account holder group.
      The default group's name is "Default account holder group", its token is `DEFAULT_AHG`, and its configuration uses the default configuration values.
    name: Account Holder Groups
  - description: |-
      An authorization control limits spending by specified users at specified merchants.
      You can limit spending at a single merchant or at a group of merchants, and you can limit spending by a single user, users with a particular card product, or all users.

      You can block spending at all merchants by default and then allow it for specific merchants, or you can allow spending at all merchants by default and block it at specific merchants.

      [TIP]
      See <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control, as well as links to more information about merchant category codes.
    name: Authorization Controls
  - description: |-
      Auto reload enables you to automatically load a specified amount into an account when the account balance falls below a defined threshold.

      Auto reloads execute only when the account balance falls below the trigger value due to spending.
      They do not execute due to unloading of funds or because of lack of funds when a user or business is first created.

      You can define auto reloads at the level of an account holder, a card product, or a program.
      Each auto reload draws from a single funding source.

      In the case of auto reloads defined at more than one level, the following order of precedence (first to last) determines which auto reload is executed:

      . Account holder
      . Card product
      . Program
    name: Auto Reload
  - description: |-
      Use the `/balances` endpoint to retrieve the following general purpose account (GPA) balance details for a user or business:

      * *Ledger balance* - When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.
      When using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared.
      * *Available balance* - The ledger balance minus any authorized transactions that have not yet cleared.
      Also known as the cardholder's purchasing power.
      If you are using JIT Funding, this balance is usually 0.00.
      * *Cached balance* - Not currently used.
      * *Credit balance* - Not currently used.
      * *Pending credits* - ACH loads that have been accepted, but for which the funding time has not yet elapsed.
    name: Balances
  - description: |-
      Use the `/banktransfers` endpoint to move funds between your program funding or cardholder account and an external account over the ACH Network.
      This kind of bank transfer is also known as ACH origination.

      [NOTE]
      This feature is currently in beta and subject to change.
      It also requires additional activation steps.
      To learn more about the beta program for this feature and about activating it for your program, contact your Marqeta representative.

      You can create the following types of transfers:

      * *Push* funds from your program funding or cardholder account to an external account.
      * *Pull* funds from your external account into your program funding or cardholder account.

      You must have an existing bank account at a US bank to fund or receive funds from your Marqeta account.
      To add an external program funding source account to the Marqeta platform, send a `POST` request to the `/fundingsources/program/ach` endpoint to PUSH or PULL money from or to the Program Funding Account.
      To add an external account holder funding source account to the Marqeta platform, send a `POST` request to the `/fundingsources/ach` endpoint to PUSH or PULL money from or to the Cardholder Account.

      For more information on ACH funding, see <</developer-guides/ach-origination, ACH Origination>>.
    name: Funding via ACH (Beta)
  - name: internal
  - description: |-
      Use the `/bulkissuances` endpoint to order physical payment cards in bulk.

      For more information on cards, card products, and bulk card ordering, see <</developer-guides/about-cards, About Cards>>.

      Some attributes of the `bulkissuance` object can also be defined in an associated `card` or `cardproduct` object.
      If you define one of these attributes in more than one object, the Marqeta platform applies an order of precedence to determine which attribute to use at fulfillment time.
      The order of precedence is as follows:

      . `card`
      . `bulkissuance`
      . `cardproduct`

      Defining an attribute in an object with higher precedence does not overwrite the same attribute in a lower-precedence object; the Marqeta platform ignores these lower-precedence attributes.

      For more information on cards, see <</developer-guides/about-cards, About Cards>>.
    name: Bulk Card Orders
  - description: |-
      A business is a type of account holder that cannot directly hold cards, but can have parent/child relationships with card-holding users.
      A business can monitor and control card use by a specified group of users.
      Every business has a general purpose account (GPA).

      For information on how to create a user that has a child-to-parent hierarchical relationship to the business, see <</core-api/users#_create_user, Create User>>.

      [NOTE]
      A user can simultaneously be a child of a business and a parent of other users if the user is not configured to use the parent's account balances and the user's children are configured to use the parent's account balances.
      For more information on account holders, see <</developer-guides/about-account-holders, About Account Holders>>.
    name: Businesses
  - description:
      Use the `/businesstransitions` endpoints to transition business resources
      between states, as well as to retrieve and list state changes for a business
      resource.
    name: Business Transitions
  - description: |-
      The card products resource represents the behavior and functionality of one or more cards (either physical or virtual).
      For example, attributes of the card product determine whether the associated cards can be used at an ATM and/or online and whether they are currently enabled.
      For physical cards, the card product determines color and other printing specifications for when the cards are manufactured and personalized.
      You can optionally associate authorization controls and/or velocity controls with card products to restrict where and how associated cards are used.

      If your program is Managed by Marqeta, then Marqeta will create the card products for your production environment.

      Some attributes of the `cardproduct` object can also be defined in an associated `bulkissuance` or `card` object.
      If you define one of these attributes in more than one object, the Marqeta platform applies an order of precedence to determine which attribute to use at fulfillment time.
      The order of precedence is as follows:

      . `card`
      . `bulkissuance`
      . `cardproduct`

      Defining an attribute in an object with higher precedence does not overwrite the same attribute in a lower-precedence object; the Marqeta platform ignores these lower-precedence attributes.

      For more information on cards, see <</developer-guides/about-cards, About Cards>>.
    name: Card Products
  - description: |-
      The `card` resource represents a payment card.
      Cards are derived from and controlled by the `cardproduct` resource.
      For more information on cards, see <</developer-guides/about-cards, About Cards>>.

      Some attributes of the `card` resource can be defined in an associated `bulkissuance` or `cardproduct` resource.
      If you define one of these attributes in more than one object, the order of precedence at fulfillment time is as follows:

      . `card`
      . `bulkissuance`
      . `cardproduct`

      Defining an attribute in an object with higher precedence overrides, but does not overwrite, the attribute in a lower-precedence object.
    name: Cards
  - description: Use the `/cardtransitions` API to set the state of an existing card.
    name: Card Transitions
  - description: |-
      Commando Mode is a fallback measure that ensures Gateway JIT-funded cards continue to function in the event that your system fails.
      If your system cannot respond to the JIT Funding request, the Marqeta platform makes a decision in your place based on defined business rules.
      The Marqeta platform stores any unsent webhooks for later transmission, ensuring that the card state and account balances on your system correspond with activity that occurred while Commando Mode was in effect.

      You can identify transactions that were funded while Commando Mode was in effect by examining the `subnetwork` field of the transaction record.

      * A `subnetwork` value of `GATEWAY_JIT` indicates that the transaction was funded through normal Gateway JIT Funding and that Commando Mode was not in effect at the time.
      * A value of `MANAGED_JIT` indicates that the transaction was funded while Commando Mode was in effect.
      In addition, the `standin_approved_by` field has a value of `COMMANDO_AUTO` or `COMMANDO_MANUAL` when Commando Mode is enabled for a transaction.

      When `COMMANDO_MANUAL` is configured, all transactions are processed via Commando Mode.
      When `COMMANDO_AUTO` is configured, Commando Mode is enabled only when a transaction times out or encounters an error.

      While Commando Mode is a form of Stand-in Processing (STIP), it is different than network STIP.
      Network STIP occurs when the card network cannot communicate with the Marqeta platform.
      Transactions handled by network STIP include the `standin_approved_by` field with a value of `NETWORK`.

      Commando Mode and Managed JIT Funding are functionally equivalent.
      See <</developer-guides/about-jit-funding, About Just-in-Time Funding>> for more information.

      [NOTE]
      Commando Mode requires additional configuration.
      To configure Commando Mode control sets, contact your Marqeta representative.
    name: Commando Mode
  - name: accepted countries
  - name: account holder groups
  - name: accounting
  - name: auth controls
  - name: authentications
  - name: auto reloads
  - name: balance APIs
  - name: balance caches
  - name: bank transfers
  - name: bulk issuances
  - name: business transitions
  - name: businesses
  - name: businessidentitycheck
  - name: caches
  - name: calculation schedules
  - name: card products
  - name: card transitions
  - name: cardholder balances
  - name: cards
  - name: chargebacks
  - name: clearing
  - name: commando modes
  - name: cron jobs
  - name: digital wallet provision requests
  - name: digital wallet token sync by dequeuer
  - name: digital wallet token transitions
  - name: digital wallet tokens
  - name: direct deposit accounts
  - name: direct deposits
  - name: fee charges
  - name: fee refunds
  - name: fees
  - name: file processing
  - name: "Find Original: Operations resolve Original Transactions for Auth service"
  - name: funding sources
  - name: gateways
  - name: Generic money transfers
  - name: GPA fund transfers
  - name: gpa orders
  - name: health checks
  - name: internal auth control check
  - name: internal cards
  - name: Internal Commando Mode APIs
  - name: internal config operations
  - name: internal cryptokeys
  - name: internal data rehydration
  - name: internal dwt
  - name: internal health
  - name: internal kyc
  - name: internal mcc groups
  - name: internal post jcard transactions
  - name: internal program configs
  - name: internal result codes
  - name: internal spend controls
  - name: internal system information
  - name: internal transactions
  - name: internal user validation
  - name: kyblog
  - name: kyc
  - name: mcc groups
  - name: merchantgroups
  - name: Operations for digital wallet token requestor maps
  - name: peer transfers
  - name: ping
  - name: pins
  - name: program
  - name: program configs
  - name: program reserve
  - name: program transfers
  - name: push to card
  - name: real time fee groups
  - name: token service gateway
  - name: transaction caches
  - name: transactions
  - name: "transactions : Dispute transactions"
  - name: user transitions
  - name: users
  - name: velocity controls
  - name: web push provisioning
  - name: webhooks
  - description: |-
      A fee charge moves funds from the general purpose account (GPA) of an account holder to your program's fee account.
      The charge amount is determined by the fee that is assessed.
      The request returns an error if the GPA has insufficient funds to cover the fee.
      This behavior contrasts with assessing a fee using the `/gpaorders` endpoint, in which case the amount of the fee is loaded into the GPA from the funding source before the GPA is debited.
    name: Fee Charges
  - description:
      Use the `/feerefunds` endpoint to refund fees to your account holder's
      general purpose account (GPA).
    name: Fee Refunds
  - description: |-
      A `fees` resource represents a monetary assessment against an account holder's general purpose account (GPA).
      Assessing a fee transfers funds from the account holder's GPA account to your program's fee account.
      By default, every account has a GPA account used for the funding of transfers.

      You can assess fees either post-transaction or in real time.
      Real-time fee assessment ensures the account has sufficient funds available to cover both the transaction amount and the fee before authorization of the transaction.
      To assess fees in real time, you must create a real-time fee group using the `/realtimefeegroups` endpoint.

      When assessing a post-transaction fee, you can either debit existing GPA funds, or pull in new funds from a funding source.
      To use existing GPA funds, use the `/feetransfers` endpoint.
      To pull in new funds, use the fees array in `/gpaorders`.

      [NOTE]
      If your program uses Gateway JIT Funding, you cannot assess fees.
    name: Fees
  - description: |-
      The address resource is your billing address.
      An active address is required in order to use a payment card funding source.
      To associate an address with a funding source, use the same `user_token` or `business_token` for both resources.

      [NOTE]
      The `/users` and `/businesses` resources also have address fields.
      Those are used for other purposes, such as KYC identity verification or as shipping addresses for physical cards.
    name: Addresses
  - description: |-
      Use the `/fundingsources/ach`, `/fundingsources/ach/partner`, and `/fundingsources/paymentcard` endpoints to create account holder funding sources.
      A funding source enables access to funds outside of the Marqeta platform.

      For more information on users and businesses, see <</developer-guides/about-account-holders, About Account Holders>>.
    name: Account Holder Funding Sources
  - description: |-
      Use the `/fundingsources/program` endpoint to create a program funding source.

      A program funding source represents a bank account from which funds are drawn for Managed Just-in-Time (JIT) Funding transactions.
      For more information about JIT Funding, see <</developer-guides/about-jit-funding, About Just-in-Time Funding>>.

      In the sandbox environment, each program funding source you create simulates funds for use in test transactions.
      In production environments, program funding sources are created by Marqeta and draw funds from a bank account you set up in conjunction with Marqeta.

      [NOTE]
      Your program funding source must be approved by Marqeta and the issuing bank.
      If you are using a third-party service to collect user funds, Marqeta and the issuing bank require specific reporting to ensure compliance with applicable rules and regulations.
      Contact Marqeta for more information.
    name: Program Funding Sources
  - description: |-
      Use the `/fundingsources/programgateway` endpoint to create a program gateway funding source.

      A program gateway funding source represents a bank account from which funds are drawn for Gateway Just-in-Time (JIT) Funding transactions.
      For more information about JIT Funding, see <</developer-guides/about-jit-funding, About Just-in-Time Funding>>.

      In a sandbox environment, you can create a program gateway funding source that simulates funds for use in test transactions.
      In a production environment, you must work with a Marqeta representative to define the bank account from which the program gateway funding source draws funds.

      [NOTE]
      If you are using a third-party service to collect user funds, Marqeta and the issuing bank require specific reporting to ensure compliance with applicable rules and regulations.
      Contact Marqeta for more information.
    name: Program Gateway Funding Sources
  - description: |-
      The `/gpaorders` endpoint moves funds from a funding source into an
      account holder's general-purpose account (GPA).

      GPA orders can also be used to move funds from an account holder's funding source into your program's fee account.

      GPA orders can be funded by the account holder or your program.
    name: GPA Orders
  - description: |-
      Use the `/kyc` endpoint to perform Know Your Customer (KYC) verification tasks for your account holders.

      This endpoint can only be used to perform KYC verification for individuals or businesses in the United States.

      For more information about KYC verification, see <</developer-guides/about-kyc, About KYC Verification>>.

      For more information about account holders, see <</developer-guides/about-account-holders, About Account Holders>>.
    name: KYC Verification
  - description: |-
      A merchant category code (MCC) is a four-digit number assigned by card networks to a business based on the goods or services offered by the business.
      On the Marqeta platform, an MCC group defines a set of MCCs.
      You can include an MCC group within a spend control to limit user spending at a set of merchants.

      An MCC group also allows you to automatically increase authorization amounts and to control the expiration of authorizations for the specified MCCs.
      By default, these controls apply to all cards in your program.
      An MCC group authorization control can have exceptions defined at the card product level.

      See <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control, as well as links to more information about merchant category codes.
    name: MCC Groups
  - description: |-
      Use the `/merchantgroups` endpoint to create, update, and retrieve groups of merchant identifiers (MIDs).
      You can use merchant groups for authorization controls and in card product configurations.
      For example, use a merchant group to create a <</core-api/authorization-controls#_create_a_merchant_mid_exemption, merchant exemption>> for a group of merchants rather than an individual merchant.
    name: Merchant Groups
  - description: |-
      A peer transfer moves funds from the general purpose account (GPA) of an account holder (a user or business) to another account belonging to the same account holder.
      Both the sender and recipient accounts must be active.
    name: Peer Transfers
  - description:
      Use the `/pins` endpoint to create, update, or reveal a personal
      identification number (PIN) for a card.
    name: PINs
  - description:
      Use the Program Reserve API to credit or debit your program reserve
      account (sometimes referred to as a _program funding account_), and to return
      program reserve balances and transactions.
    name: Program Reserve
  - description: |-
      A program transfer moves funds from an account holder's general purpose account (GPA) to a program funding source.
      In contrast to a fee transfer, the program transfer amount is specified by the transfer itself and can therefore be set dynamically.
      An auto reload is triggered if the GPA has insufficient funds to cover the transfer amount and auto reload is enabled.

      [NOTE]
      The `/programtransfers` endpoint is only available for specific, pre-approved use cases.
      For more information about this endpoint, contact your Marqeta representative.
    name: Program Transfers
  - description: |-
      Marqeta enables you to assess fees in real time through the use of real-time fee groups.
      A real-time fee group is a collection of fees associated with an account holder group (and thereby associated with the users and businesses that are part of that account holder group).
      Real-time fee assessment ensures that associated accounts have sufficient funds available to cover both the transaction amount and the fee before authorization of a transaction.

      Before you create a real-time fee group, you must create the individual fees (using the `/fees` endpoint) and the account holder group with which you will associate the real-time fee group (using the `/accountholdergroups` endpoint).
      Each fee in the group must be applicable to a different transaction type.
      For example, one fee could assess $1 on authorization transactions while another assesses $2 on PIN-debit transactions.

      Use of real-time fee groups requires prior approval by Marqeta.
      If you are interested in using this feature for your card program, contact your Marqeta representative for more information.

      [NOTE]
      If your program uses Gateway JIT Funding, you cannot assess fees.
    name: Real-Time Fee Groups
  - description: |-
      The Marqeta platform facilitates the use of digital wallets for storing tokenized cards and making payments.
      The API provides endpoints that enable mobile applications to provision tokens into a digital wallet.
      It also provides endpoints for retrieving digital wallet tokens and for managing their lifecycle through state transitions.

      For an overview of digital wallet tokens, see <</developer-guides/digital-wallets-and-tokenization, Digital Wallets and Tokenization>>.
    name: Digital Wallets Management
  - description: |-
      The `/transactions` resource represents the electronic messages that carry information used for payment processing.
      A transaction usually originates when a cardholder attempts to make a payment, either online or at a physical point of sale.

      You can receive information about transactions as they occur by configuring webhooks.
      Learn about configuring webhooks in the <</developer-guides/about-webhooks, About Webhooks>> guide.
      See the transaction events for which you can set up webhooks in the <</core-api/event-types, Event Types>> API reference page.

      You can also retrieve transactions associated with specific cards, merchants, and account holders using the endpoints described here.

      For an overview of transactions and the `transaction` object, including the complete list of <</developer-guides/about-transactions#_transaction_response_codes, transaction response codes>>, see <</developer-guides/about-transactions, About Transactions>>.

      [TIP]
      Use the `/transactions` endpoint to retrieve smaller datasets (up to one page).
      For best performance when requesting larger datasets, use the <</diva-api/introduction, DiVA API>>.
    name: Transactions
  - description: |-
      The `users` resource represents a person who accesses Marqeta-administered funds via a Marqeta card (whether physical or virtual).
      This endpoint enables you to create and manage users on the Marqeta platform.

      This resource stores user attributes such as name, address, and date of birth, as well as financial information such as balances.
      By default, every user automatically has a general purpose account (GPA) that is used for the funding of transfers and is therefore an `account holder`.
      Note that account balances reside at the account holder level — there are no separate `account` or `balance` objects.

      You can use the `/users` endpoint to create parent-child relationships between two users (where one user is the parent and the other is the child) or between a business and a user (where the business is the parent and the user is the child).
      This relationship provides reporting to the parent about how cards of children are used and enables the parent to monitor and even restrict card usage.

      [NOTE]
      A user can simultaneously be a child of a business and a parent of other users if the user is not configured to use a parent's account balances and the user's child is configured to use a parent's account balances.
      For more information on account holders, see <</developer-guides/about-account-holders, About Account Holders>>.
    name: Users
  - description:
      Use the `/usertransitions` endpoints to transition user resources
      between statuses, as well as to retrieve and list status changes for a user
      resource.
    name: User Transitions
  - description: |-
      A velocity control limits how much users can spend.
      You can configure velocity controls to limit how much users can spend and the number of transactions they can make in a given span of time.
      You can apply velocity controls to a single user, to all users associated with a particular card product, or to all users in your program.

      Only Program Managers can create or modify program-wide velocity controls.
      A `POST` or `PUT` call from a role that does not have Program Manager permissions will receive a 403 error if its `association` field is null, or if it includes all of the fields in the request body.
      Avoid this by passing a valid `user_token` or `card_product_token` in the velocity control's `association` object, indicating that the request is specific to a user or card product, and not program-wide.
      You should also only include the specific fields you want to update, because a `PUT` or `POST` with values for all fields is interpreted as a change that requires Program Manager permissions.

      See <</developer-guides/controlling-spending, Controlling Spending>> for a tutorial that walks you through the creation of a spend control.

      [NOTE]
      Each program supports a maximum of 90 spend controls (velocity controls and <</core-api/authorization-controls, authorization controls>> combined).
    name: Velocity Controls
  - description: |-
      Webhooks are notifications about API events, sent as they occur.
      The Marqeta platform sends these notifications to an endpoint that is hosted in your environment and configured to receive and process them.

      Create a webhook object to represent your webhook endpoint.
      Configure it with the URL of your webhook endpoint and a set of credentials for accessing that endpoint.
      You can configure it to send notifications for a single event, a group of events by type, or all event types.
      To set up multiple webhook endpoints and route different types of event notifications to each, create multiple webhook objects and configure each to send a specific type of event notification to a specific endpoint.

      See <</developer-guides/about-webhooks, About Webhooks>> for information on notifications and a tutorial that walks you through the configuration of your webhook endpoint.

      See <</core-api/event-types, Event Types>> for reference documentation on the types of events that the Marqeta platform supports.

      [NOTE]
      Webhooks URLs are cached.
      Changes made on your webhook endpoint can take up to one hour to be applied.
    name: Webhooks
  - description: |-
      [NOTE]
      This feature is currently in limited-availability beta and subject to change.
      To learn more about the beta program for this feature, contact your Marqeta representative.

      Marqeta's credit platform's credit applications feature enables you to create and manage credit account applications and retrieve disclosures that you can show to an applicant during the application process.

      To receive webhook notifications when application transition events occur, see <</core-api/event-types#_credit_application_transition_events, Credit application transition events>> in Event Types.
    name: Applications
  - description: |-
      Use the account cards endpoints to create and retrieve credit cards that can access the credit line on a <</core-api/credit-accounts, credit account>>.

      Once a credit card is created, you can use the `/cards` endpoint to <</core-api/cards#putCardsToken, update the card>> or <</developer-guides/managing-lost-stolen-or-damaged-cards, manage lost, stolen, or damaged cards>>.

      To receive webhook notifications when card transition or card action events occur, see <</core-api/event-types#_card_transition_events, Card transition events>> and <</core-api/event-types#_card_action_events, Card action events>> in Event Types.
    name: Account Cards
  - description: |-
      Use the `/credit/accounts/{account_token}/rewards` endpoint to create a one-time reward on a <</core-api/credit-accounts, credit account>>.

      Creating a reward triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `REWARD` group.
      For more on reward journal entries, see <</developer-guides/about-credit-account-journal-entries#_rewards, Rewards>> in the About Credit Account Journal Entries guide.

      For the reward programs that are associated with a reward policy on a bundle, see <</core-api/reward-programs, Reward Programs>>.
    name: Account Rewards
  - description: |-
      Use the account transitions endpoints to create and retrieve account transitions on Marqeta's credit platform.
      An account transition occurs when a <</core-api/credit-accounts, credit account>> transitions to a new status.

      To receive webhook notifications when account transition events occur, see <</core-api/event-types#_credit_account_transition_events, Credit account transition events>> in Event Types.
    name: Account Transitions
  - description: |-
      Use the adjustments endpoints to create and retrieve account adjustments on Marqeta's credit platform.
      An account adjustment adjusts the amount of a <</core-api/credit-account-journal-entries, journal entry>> or account balance.

      Creating an adjustment triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `ADJUSTMENT` group.
      For more on adjustment journal entries, see <</developer-guides/about-credit-account-journal-entries#_adjustments, Adjustments>> in the About Credit Account Journal Entries guide.
    name: Adjustments
  - description: |-
      Use the credit balance refunds endpoint to issue a credit balance refund on <</core-api/credit-accounts, credit account>>.
      When an account balance is negative, a balance refund can be issued to bring the balance closer to 0.

      Creating a balance refund triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `BALANCE_REFUND` group.
      For more on balance refund journal entries, see <</developer-guides/about-credit-account-journal-entries#_credit_balance_refunds, Balance refunds>> in the About Credit Account Journal Entries guide.
    name: Balance Refunds
  - description: |-
      [NOTE]
      This feature is currently in limited-availability beta and subject to change.
      To learn more about the beta program for this feature, contact your Marqeta Customer Service representative.

      The bundles feature on Marqeta's credit platform enables you to create and manage bundles by choosing the specific policies that make up a bundle.
      A bundle must contain one document policy, credit product policy, fee policy, APR policy, and an optional reward policy.
      The configurations of each policy in a bundle determine the characteristics and attributes of the bundle's associated credit accounts, reward programs, disclosures, and more.
      For more on how to configure a policy, see <</core-api/policies, Policies>>.

      [IMPORTANT]
      ====
      To create and manage bundles, you must use the link:https://app.marqeta.com/[Marqeta Dashboard].
      For more on bundles in the dashboard, see <</developer-guides/credit-programs-dashboard, Managing Credit Programs in the Marqeta Dashboard>>.

      &#160; +

      The following endpoints are displayed for reference purposes only.
      ====
    name: Bundles (Beta)
  - description: |-
      Use the credit accounts endpoints to create and manage accounts on Marqeta's credit platform.
      A credit account centers around a single line of credit that can be accessed by one or more <</core-api/credit-cards, cards>>.
      An account's attributes, such as the credit limit, APR, and fees, are inherited from the <</core-api/policies, policies>> on its associated bundle.

      For more on accounts, see <</developer-guides/about-credit-accounts, About Credit Accounts>>.
    name: Credit Accounts
  - description: |-
      Use the credit disputes endpoints to create and manage disputes on a <</core-api/credit-accounts, credit account>>.

      For more on disputes, see <</developer-guides/about-credit-account-disputes, About Credit Account Disputes>>.

      Creating a dispute triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `DISPUTE` group.
      For more on dispute journal entries, see <</developer-guides/about-credit-account-journal-entries#_disputes, Disputes>> in the About Credit Account Journal Entries guide.
    name: Credit Disputes
  - description: |-
      [IMPORTANT]
      This feature is being deprecated and replaced by credit product policies, which is part of the bundles feature.
      For more on policies and bundles in a credit program, see <</developer-guides/credit-programs-dashboard, Managing Credit Programs in the Marqeta Dashboard (Beta)>>.

      The credit products feature on Marqeta's credit platform enables you to create and manage a credit product and customize its characteristics, such as the credit line range and required fees or APRs.
      Credit product characteristics determine the behaviors and attributes of associated credit accounts.
      For more on credit products, see <</developer-guides/about-credit-products, About Credit Products>>.

      To receive webhook notifications when product transition events occur, see <</core-api/event-types#_credit_product_transition_events, Credit product transition events>> in Event Types.

      [IMPORTANT]
      ====
      To create and manage credit products, you must use the link:https://app.marqeta.com/[Marqeta Dashboard].
      For more, see <</developer-guides/credit-dashboard, Managing Credit Products in the Marqeta Dashboard>>.

      &#160; +

      The following endpoints are displayed for reference purposes only.
      ====
    name: Credit Products
  - description: |-
      Use the delinquency endpoints to retrieve details on a credit account's delinquency state and transitions.

      An account's delinquency state reflects whether an account is delinquent and past due on its payments or current and up to date on its payments.

      To receive webhook notifications when an account transitions between delinquent and current, see <</core-api/event-types#_credit_account_delinquency_state_transition_events, Credit account delinquency state transition events>> in Event Types.
    name: Delinquency
  - description: |-
      Use the journal entries endpoints to retrieve journal entries made on an <</core-api/credit-accounts, account>> on Marqeta's credit platform.

      A journal entry is a record of an entry made on an account journal, such as a purchase transaction, fee, adjustment, and more.
      For more on the different types of journal entries, see <</developer-guides/about-credit-account-journal-entries, About Credit Account Journal Entries>>.

      Journal entries originate when a journal entry event occurs, such as a cardholder making a purchase or an account holder making a payment.
      To receive webhook notifications when journal entry events occur, see <</core-api/event-types#_credit_journal_entry_events, Credit journal entry events>> in Event Types.
    name: Journal Entries
  - description: |-
      [IMPORTANT]
      ====
      This feature is being deprecated and replaced by journal entries.

      &#160; +

      For documentation on journal entries, see:

      &#160; +

      * <</developer-guides/about-credit-account-journal-entries, About Credit Account Journal Entries>> - Developer guide
      * <</core-api/credit-account-journal-entries, Journal Entries>> - API reference
      * <</core-api/event-types#_credit_journal_entry_events, Credit journal entry event types>> - Webhook notifications.
      ====

      Use the `/credit/accounts/{account_token}/ledgerentries` endpoint to retrieve ledger entries made on an <</core-api/credit-accounts, account>> on Marqeta's credit platform.

      A ledger entry is a record of an entry made on an account ledger, such as a purchase transaction, fee, adjustment, and more.
      For more on the different types of ledger entries, see <</developer-guides/about-credit-account-ledger-entries, About Credit Account Ledger Entries>>.

      Ledger entries originate when a ledger entry event occurs, such as a cardholder making a purchase or an account holder making a payment.
      To receive webhook notifications when ledger entry events occur, see <</core-api/event-types#_credit_ledger_entry_events, Credit ledger entry events>> in Event Types.
    name: Ledger Entries
  - description: |-
      [NOTE]
      This feature is currently in limited-availability beta and subject to change.
      To learn more about the beta program for this feature, contact your Marqeta Customer Service representative.

      The Marqeta credit platform's policies feature enables you to customize the configurations of policies for documents (such as disclosures), credit products, fees, APRs, and rewards.
      You can choose the specific policies to add to a bundle that contain the exact configurations needed to launch a new credit program or help manage an existing one.
      The configurations of each policy in a bundle determine the characteristics and attributes of the bundle's associated credit accounts, reward programs, disclosures, and more.
      For more on how to create a bundle, see <</core-api/bundles, Bundles>>.

      [IMPORTANT]
      ====
      To create and manage policies, you must use the link:https://app.marqeta.com/[Marqeta Dashboard].
      For more on policies in the dashboard, see <</developer-guides/credit-programs-dashboard, Managing Credit Programs in the Marqeta Dashboard>>.

      &#160; +

      The following endpoints are displayed for reference purposes only.
      ====
    name: Policies (Beta)
  - description: |-
      Use the payment schedule endpoints to create and retrieve payment schedules and payment schedule transitions on a <</core-api/credit-accounts, credit account>>.

      A payment schedule allows you to schedule a one-time or recurring payment on a credit account.
      For more on payments, see <</developer-guides/about-credit-account-payments, About Credit Account Payments>>.

      To receive webhook notifications when ACH payment transition events occur, see <</core-api/event-types#_credit_account_payment_transition_events, Credit account payment transition events>> in Event Types.

      Making a payment on a payment schedule triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `PAYMENT` group.
      For more on payment journal entries, see <</developer-guides/about-credit-account-journal-entries#_payments, Payments>> in the About Credit Account Journal Entries guide.
    name: Payment Schedules
  - description: |-
      Use the  payment sources endpoint to link an external payment source to an <</core-api/credit-accounts, account>> on Marqeta's credit platform.
      This enables account holders to use the linked payment source to make payments toward their account balance.
    name: Payment Sources
  - description: |-
      Use the payments endpoints to create and retrieve payments made on a <</core-api/credit-accounts, credit account>>, release payment holds, or transition payment statuses.

      A payment is an amount paid toward an account balance to reduce the total amount owed on the account.
      For more on payments, see <</developer-guides/about-credit-account-payments, About Credit Account Payments>>.

      To receive webhook notifications when ACH payment transition events occur, see <</core-api/event-types#_credit_account_payment_transition_events, Credit account payment transition events>> in Event Types.

      Creating a payment triggers the creation of a <</core-api/credit-account-journal-entries, journal entry>> belonging to the `PAYMENT` group.
      For more on payment journal entries, see <</developer-guides/about-credit-account-journal-entries#_payments, Payments>> in the About Credit Account Journal Entries guide.
    name: Payments
  - description: |-
      Use the statements endpoints to retrieve statement information or statement files for a <</core-api/credit-accounts, credit account>>.

      An account statement contains a summary of account activity that occurred during a billing cycle.
      For more on statements, see <</developer-guides/about-credit-account-statements, About Credit Account Statements>>.

      To receive a webhook notification when a statement is created, see <</core-api/event-types#_credit_account_statement_event, Credit account statement event>> in Event Types.
    name: Statements
  - description: |-
      Use the `/credit/rewardprograms/{token}` endpoint to manage reward programs and track reward accruals on a credit account.
      The configurations for a reward program are defined in the <</developer-guides/credit-programs-dashboard#_creating_a_reward_policy, reward policy>> on the account's associated bundle.

      To receive webhook notifications when reward entry events occur, see <</core-api/event-types#_credit_reward_entry_events, Credit reward entry events>> in Event Types.
    name: Reward Programs (Beta)
  - description: |-
      Use the `/credit/rewardprograms/{token}/redemptions` endpoint to the manage reward redemptions on a credit account.
      A reward program's rules configuration specifies how rewards are redeemed and is defined in the <</developer-guides/credit-programs-dashboard#_creating_a_reward_policy, reward policy>> on the account's associated bundle.

      To receive webhook notifications when reward redemption transition events occur, see <</core-api/event-types#_credit_reward_redemption_transition_events, Credit reward redemption transition events>> in Event Types.
    name: Reward Redemptions (Beta)
  - name: Simulations Card Transactions
    description: |-
      The Marqeta platform provides you with a production environment and a sandbox.
      The main difference between the production and sandbox environments is that your production environment communicates with a payment card network.
      This communication allows your program's cards to pay for goods and services by initiating live transactions over the card network.
      There are two types of sandbox environments available:
      * *Public sandbox:* A single-user environment where you can begin building your program and experiment with the Marqeta platform.
      * *Private sandbox:* A multi-user environment where you can integrate your application with the Marqeta platform.
      All funds and transactions are simulated in both types of sandbox environments.
      Unlike the production environment, a sandbox does not communicate with a card network, so the cards you create within them cannot be used to conduct real-world transactions.
      Therefore, you must rely on simulated transactions in order to test all objects you create within a sandbox.
      The sandbox environments provide a set of endpoints that let you simulate various types of card network transactions, such as authorizations, reversals, and balance inquiries.
      These endpoints are available only within the sandbox, so the details on this page do not apply to production.
      To use the Simulations API for card transactions:
      * Create a card in your sandbox environment.
      * Use the `/simulations/cardtransactions/*` endpoints to simulate transaction event types. Each endpoint is its own event type.
      * Use the `/webhooks` endpoint to send optional customer notifications for system events.
      To use the Simulations API for direct deposits, see <</core-api/simulations-direct-deposits, Simulations 2.0 — Direct Deposits>>.
      [NOTE]
      You can use link:https://www.postman.com[Postman, window="_blank"] to run requests for <</core-api/simulations-card-transactions, card transaction>> and <</core-api/simulations-direct-deposits, direct deposit>> simulations endpoints.
      This collection of requests has been saved as a YAML file for your convenience.
      To access the YAML file, see <</core-api/postman-simulations, Postman Collection for Simulations 2.0>>.
      All card transaction simulations endpoints share the same request/response model, as described below.
  - name: Simulations Direct Deposits
    description: |-
      The Marqeta platform provides you with a production environment and a sandbox.
      The main difference between the production and sandbox environments is that your production environment communicates with a payment card network.
      This communication allows your program's cards to pay for goods and services by initiating live transactions over the card network.
      There are two types of sandbox environments available:
      * *Public sandbox:* A single-user environment where you can begin building your program and experiment with the Marqeta platform.
      * *Private sandbox:* A multi-user environment where you can integrate your application with the Marqeta platform.
      All funds and transactions are simulated in both types of sandbox environments.
      Unlike the production environment, a sandbox does not communicate with a card network, so the cards you create within them cannot be used to conduct real-world transactions.
      Therefore, you must rely on simulated transactions in order to test all objects you create within a sandbox.
      The sandbox environments provide a set of endpoints that let you simulate various types of card network transactions, such as authorizations, reversals, and balance inquiries.
      These endpoints are available only within the sandbox, so the details on this page do not apply to production.
      To use the Simulations API for direct deposits:
      * Create a card in your sandbox environment.
      * Use the `/simulations/directdeposits/*` endpoints to simulate transaction event types. Each endpoint is its own event type.
      * Use the `/webhooks` endpoint to send optional customer notifications for system events.
      To use the Simulations API for card transactions, see <</core-api/simulations-card-transactions, Simulations 2.0 — Card Transactions>>.
      [NOTE]
      You can use link:https://www.postman.com[Postman, window="_blank"] to run requests for <</core-api/simulations-card-transactions, card transaction>> and <</core-api/simulations-direct-deposits, direct deposit>> simulations endpoints.
      This collection of requests has been saved as a YAML file for your convenience.
      To access the YAML file, see <</core-api/postman-simulations, Postman Collection for Simulations 2.0 >>.
      All direct deposit simulations endpoints share the same request/response model, as described below.
paths:
  /businesses:
    get:
      description: |-
        To return an array of all businesses, send a `GET` request to the `/businesses` endpoint.

        To narrow your result set to businesses that match a particular legal or fictitious name, include the appropriate parameters from the following query parameters table.
        This endpoint also supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getBusinesses
      parameters:
        - description: Number of business resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Fictitious or "doing business as (DBA)" name of the business.
          explode: true
          in: query
          name: business_name_dba
          required: false
          schema:
            type: string
          style: form
        - description: Legal name of the business.
          explode: true
          in: query
          name: business_name_legal
          required: false
          schema:
            type: string
          style: form
        - description: Specifies the search type for the query.
          explode: true
          in: query
          name: search_type
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    business_name_dba: My_fictitious_business_name
                    business_name_legal: My_legal_business_name
                    business_type: My_business_type
                    created_time: 2022-10-18T21:17:03Z
                    date_established: 2010-04-15T00:01:00Z
                    duns_number: "123456789"
                    general_business_description: My_business_description
                    history: My_business_history
                    identifications:
                      - type: BUSINESS_TAX_ID
                        value: "123456789"
                    in_current_location_since: 2010-04-15T00:01:00Z
                    incorporation:
                      address_registered_under:
                        address1: 123 B Street
                        city: Oakland
                        country: US
                        postal_code: "94610"
                        state: CA
                      incorporation_type: LLC
                      is_public: true
                      name_registered_under: First Middle Last
                      state_of_incorporation: CA
                      stock_symbol: MB
                    international_office_locations:
                      Athens, Greece; Buenos Aires,
                      Argentina
                    ip_address: 67.120.28.118
                    last_modified_time: 2022-10-19T22:48:02Z
                    notes: My notes
                    office_location:
                      address1: 123 A Street
                      address2: Suite 123
                      city: Oakland
                      country: US
                      postal_code: "94610"
                      state: CA
                    password: My_passw0rd
                    phone: "5105551215"
                    primary_contact:
                      department: My_department
                      email: dr_me@my_business.com
                      extension: "11"
                      fax: "5105551216"
                      full_name: First Middle Last
                      mobile: "5105551217"
                      phone: "5105551215"
                      title: Dr
                    proprietor_or_officer:
                      alternative_names: My Alternative Name
                      dob: 1985-01-08T00:00:00Z
                      email: mr.myself@my.business.com
                      first_name: First
                      home:
                        address1: 123 B Street
                        address2: Apt A
                        city: Oakland
                        country: US
                        postal_code: "94610"
                        state: CA
                      last_name: Last
                      middle_name: Middle
                      phone: "5105551211"
                      ssn: "5555"
                      title: Mr
                    status: ACTIVE
                    token: my_business_01
                    website: https://my_business.com
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: "#/components/schemas/BusinessCardHolderListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List businesses
      tags:
        - Businesses
    post:
      description: |-
        Create a business.
        The initial status of a newly created business depends on the <</core-api/kyc-verification, Know Your Customer (KYC) requirements>> of the program or associated <</core-api/account-holder-groups, account holder group>>.

        [cols="1,1,1,2"]
        |===
        | KYC Required | Initial Business State | Business Active on Creation | Business Limitations

        | Always
        | `UNVERIFIED`
        | No
        | Cannot load funds.

        | Conditionally
        | `LIMITED`
        | No
        | Restricted by rules in `accountholdergroups.pre_kyc_controls`.

        | Never
        | `ACTIVE`
        | Required
        | None.
        |===

        To change or track the history of a business' status, use the `/businesstransitions` endpoint.
        For more information on status changes, see <<create_business_transition, Create Business Transition>>.

        For information about configuring the required fields for KYC verification, see <</core-api/kyc-verification#_perform_kyc, Perform KYC>>.
      operationId: postBusinesses
      requestBody:
        content:
          application/json:
            example:
              attestation_date: 2022-03-03T00:01:00Z
              attester_name: Jane Smith
              attester_title: Chief Executive Officer
              beneficial_owner1:
                dob: 1982-07-23T05:36:00Z
                first_name: First
                home:
                  address1: 123 B Street
                  address2: Apt A
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: "5105551212"
                ssn: "123456789"
                title: Ms
              beneficial_owner2:
                dob: 1973-11-11T11:11:11Z
                first_name: First
                home:
                  address1: 4321 Grove Street
                  address2: Suite 123
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: "5105551213"
                ssn: "234567891"
                title: Ms
              beneficial_owner3:
                dob: 1981-02-14T15:16:17Z
                first_name: First
                home:
                  address1: 789 Pulgas Ave
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: "5105551214"
                ssn: "345678912"
                title: Ms
              beneficial_owner4:
                dob: 1954-03-07T15:16:17Z
                first_name: First
                home:
                  address1: 16 Poplar Street
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: "5105551215"
                ssn: "456789123"
                title: Dr
              business_name_dba: My_fictitious_business_name
              business_name_legal: My_legal_business_name
              business_type: My_business_type
              date_established: 2010-04-15T00:01:00Z
              duns_number: "987654321"
              general_business_description: My_business_description
              history: My_business_history
              identifications:
                - type: BUSINESS_TAX_ID
                  value: "123456789"
              in_current_location_since: 2010-04-15T00:01:00Z
              incorporation:
                address_registered_under:
                  address1: 123 B Street
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                incorporation_type: LLC
                is_public: true
                name_registered_under: First Middle Last
                state_of_incorporation: CA
                stock_symbol: MB
              international_office_locations: Athens, Greece; Buenos Aires, Argentina,
              ip_address: 67.120.28.118,
              metadata:
                my_name_1: my_value_1
                my_name_2: my_value_2
              notes: My notes
              office_location:
                address1: 123 A street
                address2: Suite 123
                city: Oakland
                country: US
                postal_code: "94610"
                state: CA
              password: My_passw0rd
              phone: "5105551212"
              primary_contact:
                department: My_department
                email: dr.me@my.business.com
                extension: "11"
                fax: "5105551222"
                full_name: First Middle Last
                mobile: "5105551213"
                phone: "5105551212"
                title: Dr
              proprietor_or_officer:
                alternative_names: My Alternative Name
                dob: 1985-01-08T00:00:00Z
                email: mr.myself@my.business.com
                first_name: First
                home:
                  address1: 123 B Street
                  address2: Apt A
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                last_name: Last
                middle_name: Middle
                phone: "5105551211"
                ssn: "5555"
                title: Mr
              token: my_business_02
              website: https://my_business_02.com
            schema:
              $ref: "#/components/schemas/business_cardholder"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                active: true
                business_name_dba: My_fictitious_business_name
                business_name_legal: My_legal_business_name
                business_type: My_business_type
                created_time: 2022-01-13T23:29:10Z
                date_established: 2010-04-15T00:01:00Z
                deposit_account:
                  account_number: "12342126720827265"
                  routing_number: "293748000"
                  token: 420df02a-6aef-42bf-be7b-0d080ebf7573
                  x-mq-internal: true
                duns_number: "987654321"
                general_business_description: My_business_description
                history: My_business_history
                identifications:
                  - type: BUSINESS_TAX_ID
                    value: "123456789"
                in_current_location_since: 2010-04-15T00:01:00Z
                incorporation:
                  address_registered_under:
                    address1: 123 B Street
                    city: Oakland
                    country: US
                    postal_code: "94610"
                    state: CA
                  incorporation_type: LLC
                  is_public: true
                  name_registered_under: First Middle Last
                  state_of_incorporation: CA
                  stock_symbol: MB
                international_office_locations: Athens, Greece; Buenos Aires, Argentina
                ip_address: 67.120.28.118
                last_modified_time: 2022-01-13T23:29:10Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                notes: My notes
                office_location:
                  address1: 123 A Street
                  address2: Suite 123
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                password: My_passw0rd
                phone: "5105551212"
                primary_contact:
                  department: My_department
                  email: dr.me@my.business.com
                  extension: "11"
                  fax: "5105551222"
                  full_name: First Middle Last
                  mobile: "5105551213"
                  phone: "5105551212"
                  title: Dr
                proprietor_or_officer:
                  alternative_names: My Alternative Name
                  dob: 1985-01-08T00:00:00Z
                  email: mr.myself@my.business.com
                  first_name: First
                  home:
                    address1: 123 B Street
                    address2: Apt A
                    city: Oakland
                    country: US
                    postal_code: "94610"
                    state: CA
                  last_name: Last
                  middle_name: Middle
                  phone: "5105551211"
                  ssn: "5555"
                  title: Mr
                status: ACTIVE
                token: my_business_02
                website: https://my_business_02.com
              schema:
                $ref: "#/components/schemas/business_card_holder_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create business
      tags:
        - Businesses
  /businesses/lookup:
    post:
      description: |-
        To search for one or more businesses, send a `POST` request to the `/businesses/lookup` endpoint.
        Include in the message body any parameters by which you want to query.
        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: postBusinessesLookup
      requestBody:
        content:
          application/json:
            example:
              dda: "2129923205648"
            schema:
              $ref: "#/components/schemas/DDARequest"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                business_name_dba: My_fictitious_business_name
                business_name_legal: My_legal_business_name
                business_type: other
                created_time: 2022-06-20T00:17:48Z
                date_established: 2010-01-01T00:01:00Z
                duns_number: "22344566"
                identifications:
                  - type: BUSINESS_TAX_ID
                    value: 11-1111111
                incorporation:
                  incorporation_type: CORPORATION
                  state_of_incorporation: CA,
                last_modified_time: 2022-06-20T00:17:48Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                office_location:
                  address1: 111 Main St
                  address2: Suite B
                  city: Berkeley
                  country: USA
                  postal_code: "94702"
                  state: CA
                phone: "5105551218"
                primary_contact:
                  department: Accounts Payable
                  email: me@my.company.com
                  extension: "234"
                  fax: "5105551219"
                  full_name: First Middle Last
                  mobile: "5105551220"
                  phone: "5105551218"
                  title: Mr.
                token: 297aa1a7-f3c9-46eb-9e0a-54f8bce0c189
              schema:
                $ref: "#/components/schemas/business_cardholder"
          description: Success
        "404":
          content: {}
          description: Business not found
        "500":
          content: {}
          description: Server error
      summary: Search businesses
      tags:
        - Businesses
  /businesses/{parent_token}/children:
    get:
      description: |-
        To return an array of all child cardholders of a particular business, send a `GET` request to the `/businesses/{parent_token}/children` endpoint.
        Include the `parent_token` as a URL path parameter.

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getBusinessesParenttokenChildren
      parameters:
        - description: Number of child cardholders to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Unique identifier of the parent business.
          explode: false
          in: path
          name: parent_token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    address1: 1234 Lake Street
                    birth_date: 1990-01-01
                    business_token: my_business_01
                    city: Berkeley
                    country: US
                    created_time: 2022-10-20T17:50:36Z
                    email: my_child_user_01@gmail.com
                    first_name: First
                    gender: F
                    identifications:
                      - type: SSN
                        value: "123456789"
                    last_modified_time: 2022-10-20T17:50:36Z
                    last_name: Last
                    metadata:
                      my_name_1: my_value_1
                      my_name_2: my_value_2
                    parent_token: my_business_01
                    password: My_passw0rd
                    phone: 510-555-1111
                    postal_code: "94702"
                    state: CA
                    status: ACTIVE
                    token: my_child_user_01
                    uses_parent_account: true
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/BusinessUserCardHolderListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List business children
      tags:
        - Businesses
  /businesses/{token}:
    get:
      description: |-
        To retrieve a specific business, send a `GET` request to the `/businesses/{token}` endpoint.
        Include the business `token` path parameter to specify the business to return.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, sorting and pagination>>.
      operationId: getBusinessesToken
      parameters:
        - description: Unique identifier of the business resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                business_name_dba: My_fictitious_business_name
                business_name_legal: My_legal_business_name
                business_type: My_business_type
                created_time: 2022-01-13T23:29:10Z
                date_established: 2010-04-15T00:01:00Z
                deposit_account:
                  account_number: "12342126720827265"
                  routing_number: "293748000"
                  token: 420df02a-6aef-42bf-be7b-0d080ebf7573
                  x-mq-internal: true
                duns_number: "123456789"
                general_business_description: My_business_description
                history: My_business_history
                identifications:
                  - type: BUSINESS_TAX_ID
                    value: "123456789"
                in_current_location_since: 2010-04-15T00:01:00Z
                incorporation:
                  address_registered_under:
                    address1: 123 B Street
                    city: Oakland
                    country: US
                    postal_code: "94610"
                    state: CA
                  incorporation_type: LLC
                  is_public: true
                  name_registered_under: First Middle Last
                  state_of_incorporation: CA
                  stock_symbol: MB
                international_office_locations: Athens, Greece; Buenos Aires, Argentina
                ip_address: 67.120.28.118
                last_modified_time: 2022-01-13T23:29:10Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                notes: My notes
                office_location:
                  address1: 123 A street
                  address2: Suite 123
                  city: Oakland
                  country: US
                  postal_code: "94610"
                  state: CA
                password: My_passw0rd
                phone: "5105551212"
                primary_contact:
                  department: My_department
                  email: dr.me@my.business.com
                  extension: "11"
                  fax: "5105551222"
                  full_name: First Middle Last
                  mobile: "5105551213"
                  phone: "5105551212"
                  title: Dr
                proprietor_or_officer:
                  alternative_names: My Alternative Name
                  dob: 1985-01-08T00:00:00Z
                  email: mr.myself@my.business.com
                  first_name: First
                  home:
                    address1: 123 B Street
                    address2: Apt A
                    city: Oakland
                    country: US
                    postal_code: "94610"
                    state: CA
                  last_name: Last
                  middle_name: Middle
                  phone: "5105551211"
                  ssn: "5555"
                  title: Mr
                status: ACTIVE
                token: my_business_02
                website: https://my_business_02.com
              schema:
                $ref: "#/components/schemas/business_card_holder_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Business not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve business
      tags:
        - Businesses
    put:
      description: |-
        To update a business, send a `PUT` request to `/businesses/{token}`.
        Use the `token` path parameter to specify the business to update.
        Include the business details to update in link:http://www.json.org/[JSON, window="_blank"] format in the body of the request.
        Only values of parameters in the request are modified; all others are left unchanged.
      operationId: putBusinessesToken
      parameters:
        - description: Unique identifier of the business resource
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/business_card_holder_update"
        description: Business object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/business_cardholder"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Update business
      tags:
        - Businesses
  /businesses/{token}/ssn:
    get:
      description: |-
        To retrieve the government-issued identification number of a business' proprietor, send a `GET` request to the `/businesses/{token}/ssn` endpoint.
        Include the `token` path parameter to specify the business whose identification number (SSN, TIN, NIN, SIN) you want to return.
        You can indicate whether to return the full number or the last four digits only.
      operationId: getBusinessesTokenSsn
      parameters:
        - description: Unique identifier of the business resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            To return the full identification number, set to `true`.
            To return only the last four digits, set to `false`.
            If the `proprietor_or_officer.identifications` array contains only the last four digits of the identification number, the `/businesses/{token}/ssn` endpoint will return only the last four digits regardless of the `full_ssn` parameter.
          explode: true
          in: query
          name: full_ssn
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ssn: "5555"
              schema:
                $ref: "#/components/schemas/ssn_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Retrieve business identification number
      tags:
        - Businesses
  /businesstransitions:
    post:
      description: |-
        This endpoint enables you to change a business' status, depending on your role and the previous status change.
        By changing a business' status, you can control the business' capabilities and the setting of the `business.active` field.
        The `business.active` field is `true` if your business is in the `LIMITED` or `ACTIVE` state, and `false` if your business is in the `UNVERIFIED` state.
        You cannot control the value of the `business.active` field directly.

        [cols=",2a,2a"]
        |===
        | The business.status field | Description | Business limitations

        | Unverified
        | Initial status of a newly created business belonging to an `accountholdergroup` where KYC is always required.
        | Cannot load funds.

        *The business.active field:*   +
        `false`

        *Allowable transitions:*   +
        `ACTIVE`, `SUSPENDED`, `CLOSED`

        | Limited
        | Initial status of a newly created business belonging to an `accountholdergroup` where KYC is conditionally required.
        | Restricted by rules in `accountholdergroups.pre_kyc_controls`.

        *The business.active field:*   +
        `true`

        *Allowable transitions:*   +
        `ACTIVE`, `SUSPENDED`, `CLOSED`

        | Active
        | Status of a business that has passed KYC; initial status of a newly created business belonging to an `accountholdergroup` where KYC is never required.
        | None.

        *The business.active field:*   +
        `true`

        *Allowable transitions:*   +
        `SUSPENDED`, `CLOSED`

        | Suspended
        | The business is temporarily inactive.

        *NOTE:* Transitioning a suspended business to the `ACTIVE` status is restricted, based on your role and the details of the previous status change.
        | Cannot load funds or activate cards.

        *The business.active field:*   +
        `false`

        *Allowable transitions:*   +
        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `CLOSED`

        | Closed
        | The business is permanently inactive.

        *NOTE:* `CLOSED` is a terminal status.
        In exceptional cases, you can transition a business from `CLOSED` to another status, depending on your role and the details of the previous status change.
        Contact your Marqeta representative for more information.
        | Cannot load funds.

        *The business.active field:*   +
        `false`

        *Allowable transitions:*   +
        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `SUSPENDED`
        |===

        [NOTE]
        The Marqeta platform transitions a business' status in response to certain events.
        For example, a business with an `UNVERIFIED` status transitions to `ACTIVE` when the business passes KYC.
      operationId: postBusinesstransitions
      requestBody:
        content:
          application/json:
            example:
              business_token: my_business_01
              channel: API
              reason: Activating business
              reason_code: "00"
              status: ACTIVE
              token: activate_05
            schema:
              $ref: "#/components/schemas/BusinessTransitionRequest"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                business_token: my_business_01
                channel: API
                created_time: 2022-09-23T23:28:39Z
                reason: Activating business
                reason_code: "00"
                status: ACTIVE
                token: activate_05
              schema:
                $ref: "#/components/schemas/BusinessTransitionResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "412":
          content: {}
          description: Pre-condition setup issue
        "500":
          content: {}
          description: Server error
      summary: Create business transition
      tags:
        - Business Transitions
  /businesstransitions/business/{business_token}:
    get:
      description: List all transitions for a given business.
      operationId: getBusinesstransitionsBusinessBusinesstoken
      parameters:
        - description:
            Unique identifier of the business resource associated with
            the transitions to retrieve.
          explode: false
          in: path
          name: business_token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of business transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -id
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - business_token: my_business_01
                    channel: API
                    created_time: 2022-11-23T23:28:39Z
                    reason: Activating business
                    reason_code: "00"
                    status: ACTIVE
                    token: activate_05
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/BusinessTransitionListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List business transitions
      tags:
        - Business Transitions
  /businesstransitions/{token}:
    get:
      description: Use this endpoint to retrieve a business transition.
      operationId: getBusinesstransitionsToken
      parameters:
        - description:
            The unique identifier of the business transition you want to
            retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                business_token: my_business_01
                channel: API
                created_time: 2022-11-23T23:28:39Z
                reason: Activating business
                reason_code: "00"
                status: ACTIVE
                token: activate_05
              schema:
                $ref: "#/components/schemas/BusinessTransitionResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Cardholder not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve business transition
      tags:
        - Business Transitions
  /cards:
    get:
      description: |-
        Retrieves an array of cards whose primary account numbers (PANs) end in the four digits specified by the `last_four` query parameter.

        This endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/object-expansion, object expansion>>, <</core-api/sorting-and-pagination, sorting, and pagination>>.
      operationId: getCards
      parameters:
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description:
            Last four digits of the primary account number (PAN) of the
            card you want to locate.
          explode: true
          in: query
          name: last_four
          required: true
          schema:
            type: string
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - barcode: "25815105237561780909"
                    card_product_token: my_cardproduct_01
                    created_time: 2022-02-08T18:31:23Z
                    expedite: false
                    expiration: "1225"
                    expiration_time: 2027-12-31T23:59:59Z
                    fulfillment:
                      card_personalization:
                        images:
                          card:
                            name: my_card_logo.png
                            thermal_color: Black
                          carrier_return_window:
                            name: my_return_address_image.png
                          signature:
                            name: my_signature.png
                        text:
                          name_line_1:
                            value: My card personalization line 1
                          name_line_2:
                            value: My card personalization line 2
                      shipping:
                        care_of_line: my_care_of_value
                        method: FEDEX_REGULAR
                    fulfillment_status: DIGITALLY_PRESENTED
                    instrument_type: PHYSICAL_MSR
                    last_four: "1865"
                    last_modified_time: 2022-02-14T19:32:38Z
                    pan: "1111111824981865"
                    pin_is_set: false
                    state: UNACTIVATED
                    state_reason: New card
                    token: my_user_01_card_02
                    user_token: my_user_01
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/CardListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List cards by last 4 digits of PAN
      tags:
        - Cards
    post:
      description: |-
        Creates a card.

        Create the user and card product before you create the card.
        You create a card using the `user_token` of the user who will own the card and the `card_product_token` of the card product that will control the card.

        [TIP]
        By default, newly created cards are inactive and must be explicitly activated (see <</core-api/cards#_create_card_transition, Create Card Transition>> for information on activating cards).
        To create cards that are activated upon issue, configure your card product's `config.card_life_cycle.activate_upon_issue` field (see <</core-api/card-products, Card Products>>).

        Send a `POST` request to `/pins/controltoken` to set the card's personal identification number (PIN) if your program requires PIN numbers (for example, for Europay Mastercard and Visa cards); this action updates the `pin_is_set` field to `true`.
        See <</core-api/pins#_create_or_update_pin, Create or Update PIN>> for details.

        You can use optional query parameters to show the primary account number (PAN) and card verification value (CVV2) number in the response.
        If `show_pan` and `show_cvv_number` are set to `true`, the fulfillment state of the card is `DIGITALLY_PRESENTED` instead of the typical initial state of `ISSUED`.
        This fulfillment state does not affect the delivery of physical cards.

        This endpoint requires PCI DSS compliance if `show_pan` and `show_cvv_number` are set to `true`.
        You must comply with PCI DSS data security requirements if you store, transmit, or process sensitive card data.
      operationId: postCards
      parameters:
        - description: Set to `true` to show the CVV2 number in the response.
          explode: true
          in: query
          name: show_cvv_number
          required: false
          schema:
            default: false
            type: boolean
          style: form
        - description:
            Set to `true` to show the full primary account number (PAN)
            in the response.
          explode: true
          in: query
          name: show_pan
          required: false
          schema:
            default: false
            type: boolean
          style: form
      requestBody:
        content:
          application/json:
            example:
              card_product_token: my_cardproduct_01
              fulfillment:
                card_personalization:
                  images:
                    card:
                      name: my_card_logo.png
                      thermal_color: Black
                    carrier_return_window:
                      name: my_return_address_image.png
                    signature:
                      name: my_signature.png
                  text:
                    name_line_1:
                      value: Jane Doe
                    name_line_2:
                      value: My card personalization line 2
              metadata:
                my_name_1: my_value_1
                my_name_2: my_value_2
              token: my_test_card_01
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/card_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                barcode: "51554698491331520446"
                card_product_token: my_cardproduct_01
                created_time: 2022-02-26T20:40:04Z
                expedite: false
                expiration: "0331"
                expiration_time: 2027-03-31T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: Jane Doe
                      name_line_2:
                        value: My card personalization line 2
                fulfillment_status: ISSUED
                instrument_type: PHYSICAL_MSR
                last_four: "6270"
                last_modified_time: 2022-02-26T20:40:04Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                pan: "1111111824986720"
                pin_is_set: false
                state: ACTIVE
                state_reason: New card activated
                token: my_test_card_01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create card
      tags:
        - Cards
  /cards/barcode/{barcode}:
    get:
      description: |-
        Retrieves a card by its barcode.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/object-expansion, object expansion>>.
      operationId: getCardsBarcodeBarcode
      parameters:
        - description: Barcode of the card to retrieve.
          explode: false
          in: path
          name: barcode
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                barcode: "780672318863"
                card_product_token: my_cardproduct_01
                created_time: 2022-02-28T18:31:23Z
                expedite: false
                expiration: "0216"
                expiration_time: 2027-02-28T23:59:59Z
                fulfillment_status: SHIPPED
                instrument_type: PHYSICAL_MSR
                last_four: "5454"
                last_modified_time: 2022-02-28T18:41:00Z
                pan: "5454545454545454"
                pin_is_set: false
                state: ACTIVE
                state_reason: New card activated
                token: my_card
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card does not exist
        "500":
          content: {}
          description: Server error
      summary: Retrieve card by barcode
      tags:
        - Cards
  /cards/getbypan:
    post:
      description: |-
        Retrieves the `user_token` and `card_token` for a primary account number (PAN).
        In the case of a reissued card, where multiple cards share the same PAN, the information for the most recently issued card is returned.

        This request is useful in IVR scenarios where a user has telephoned and identifies the card by the PAN.
        The retrieval of these tokens is implemented as a `POST` request because supplying the PAN in the request body is more secure than supplying it in the URL (as would be required with a `GET`).

        [WARNING]
        Sending a request to this endpoint requires PCI DSS compliance.
        You must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date.
      operationId: postCardsGetbypan
      requestBody:
        content:
          application/json:
            example:
              pan: "5454545454545454"
            schema:
              $ref: "#/components/schemas/pan_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                card_token: my_card1
                created_time: 2022-02-26T20:03:15Z
                last_modified_time: 2022-02-26T20:05:20Z
                user_token: my_user
              schema:
                $ref: "#/components/schemas/pan_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Retrieve card by PAN
      tags:
        - Cards
  /cards/user/{token}:
    get:
      description: |-
        Retrieves a list of the cards associated with a specific user.

        This endpoint supports <</core-api/field-filtering, field filtering,>> <</core-api/sorting-and-pagination, pagination>>, and <</core-api/object-expansion, object expansion>>.
      operationId: getCardsUserToken
      parameters:
        - description: |-
            Unique identifier of the user whose cards you want to list.
            Send a `GET` request to `/users` to retrieve user tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 3
                data:
                  - barcode: "11379418395311581864"
                    card_product_token: my_cardproduct_01
                    created_time: 2022-02-24T21:23:31Z
                    expedite: false
                    expiration: "1026"
                    expiration_time: 2027-10-31T23:59:59Z
                    fulfillment_status: ISSUED
                    instrument_type: PHYSICAL_MSR
                    last_four: "2160"
                    last_modified_time: 2022-02-26T19:55:09Z
                    pan: "1111115454542160"
                    pin_is_set: false
                    state: SUSPENDED
                    state_reason: I do not want to use this card, so suspend it.
                    token: my_user_01_card_01
                    user_token: my_user_01
                  - barcode: "25815105237561780909"
                    card_product_token: my_cardproduct_01
                    created_time: 2021-12-28T18:31:23Z
                    expedite: false
                    expiration: "1220"
                    expiration_time: 2026-12-31T23:59:59Z
                    fulfillment:
                      card_personalization:
                        images:
                          card:
                            name: my_card_logo.png
                            thermal_color: Black
                          carrier_return_window:
                            name: my_return_address_image.png
                          signature:
                            name: my_signature.png
                        text:
                          name_line_1:
                            value: My card personalization line 1
                          name_line_2:
                            value: My card personalization line 2
                      shipping:
                        care_of_line: my_care_of_value
                        method: FEDEX_REGULAR
                    fulfillment_status: ISSUED
                    instrument_type: PHYSICAL_MSR
                    last_four: "1865"
                    last_modified_time: 2021-12-28T18:36:23Z
                    pan: "1111111824981865"
                    pin_is_set: false
                    state: UNACTIVATED
                    state_reason: New card
                    token: my_user_01_card_02
                    user_token: my_user_01
                  - barcode: "63143403984499099324"
                    card_product_token: my_cardproduct_01
                    created_time: 2021-11-03T21:55:08Z
                    expedite: false
                    expiration: "1126"
                    expiration_time: 2026-11-30T23:59:59Z
                    fulfillment_status: ISSUED
                    instrument_type: PHYSICAL_MSR
                    last_four: "2810"
                    last_modified_time: 2021-11-03T21:55:08Z
                    pan: "1111115454542810"
                    pin_is_set: false
                    state: UNACTIVATED
                    state_reason: New card
                    token: my_user-01-child_01_card_01
                    user_token: my_user-01-child_01
                end_index: 2
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/CardListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List cards for user
      tags:
        - Cards
  /cards/{token}:
    get:
      description: |-
        Retrieves a specific card.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/object-expansion, object expansion>>.
      operationId: getCardsToken
      parameters:
        - description: Unique identifier of the card you want to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description:
            Embeds the associated object of the specified type into the
            response, for all `GET /cards` endpoints.
          explode: true
          in: query
          name: expand
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                barcode: "17469201908992951865"
                card_product_token: my_cardproduct_01
                created_time: 2022-02-14T18:48:10Z
                expedite: false
                expiration: "0221"
                expiration_time: 2027-02-28T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: My card personalization line 1
                      name_line_2:
                        value: My card personalization line 2
                fulfillment_status: ISSUED
                instrument_type: PHYSICAL_MSR
                last_four: "8949"
                last_modified_time: 2022-02-14T18:58:10Z
                metadata:
                  my_name_1: my_value_1
                  my_name_2: my_value_2
                pan: "1111115454548949"
                pin_is_set: false
                state: UNACTIVATED
                state_reason: New card
                token: mytestcard01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve card
      tags:
        - Cards
    put:
      description: Updates the details of an existing card.
      operationId: putCardsToken
      parameters:
        - description: Unique identifier of the card you want to update.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              token: my_card_token_03
              user_token: my_user_03
            schema:
              $ref: "#/components/schemas/card_update_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                barcode: "17469201908992951865"
                card_product_token: my_cardproduct_01
                created_time: 2022-02-14T18:48:10Z
                expedite: false
                expiration: "0221"
                expiration_time: 2027-02-28T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: My card personalization line 1
                      name_line_2:
                        value: My card personalization line 2
                  shipping:
                    method: UPS_REGULAR
                    recipient_address:
                      address1: 1234 Grove St
                      city: Berkeley
                      country: US
                      first_name: Jane
                      last_name: Doe
                      phone: "5105551212"
                      postal_code: "94702"
                      state: CA
                    return_address:
                      address1: 123 Henry St
                      address2: Suite 101
                      city: Porterville
                      country: US
                      first_name: Saki
                      last_name: Dogger
                      middle_name: R
                      phone: "8315555555"
                      postal_code: "93257"
                      state: CA
                fulfillment_status: ISSUED
                instrument_type: PHYSICAL_MSR
                last_four: "8949"
                last_modified_time: 2022-02-14T18:58:10Z
                metadata:
                  my_name_1: my_value_1
                pan: "1111115454548949"
                pin_is_set: false
                state: UNACTIVATED
                state_reason: New card
                token: mytestcard01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Update card
      tags:
        - Cards
  /cards/{token}/showpan:
    get:
      description: |-
        Retrieves a primary account number (PAN).
        For security reasons, the PAN is not fully visible on the card resource returned by `GET` `/cards/{token}`.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/object-expansion, object expansion>>.
      operationId: getCardsTokenShowpan
      parameters:
        - description: |-
            Unique identifier of the card whose primary account number (PAN) you want to retrieve.
            Send a `GET` request to `/cards` to retrieve card tokens.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Set to `true` to show the CVV2 number in the response.
          explode: true
          in: query
          name: show_cvv_number
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                barcode: "25815105237561780909"
                card_product_token: my_cardproduct_01
                created_time: 2021-12-28T18:31:23Z
                cvv_number: "137"
                expedite: false
                expiration: "1220"
                expiration_time: 2026-12-31T23:59:59Z
                fulfillment:
                  card_personalization:
                    images:
                      card:
                        name: my_card_logo.png
                        thermal_color: Black
                      carrier_return_window:
                        name: my_return_address_image.png
                      signature:
                        name: my_signature.png
                    text:
                      name_line_1:
                        value: My card personalization line 1
                      name_line_2:
                        value: My card personalization line 2
                  shipping:
                    care_of_line: my_care_of_value
                    method: FEDEX_REGULAR
                fulfillment_status: DIGITALLY_PRESENTED
                instrument_type: PHYSICAL_MSR
                last_four: "1865"
                last_modified_time: 2022-02-14T19:32:38Z
                pan: "1111111824981865"
                pin_is_set: false
                state: UNACTIVATED
                state_reason: New card
                token: my_user_01_card_02
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/card_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Show card PAN
      tags:
        - Cards
  /cardtransitions:
    post:
      description: |-
        Creates a card state transition to set the state of an existing card.

        If your system uses IVR, you can send a `POST` request to `/cards/getbypan` to retrieve a card token, which you can then use in your `POST` request to `/cardtransitions`.

        It may not be possible to move a card from one user to another once the card has been activated.
      operationId: postCardtransitions
      requestBody:
        content:
          application/json:
            example:
              card_token: my_user_01_card_01
              channel: API
              reason: I want to use this card, so activate it.
              reason_code: "00"
              state: ACTIVE
              token: activate_05
              validations:
                user:
                  birth_date: 1990-01-31T00:00:00Z
            schema:
              $ref: "#/components/schemas/card_transition_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                barcode: "11379418395311581864"
                card_product_token: my_cardproduct_01
                card_token: my_user_01_card_01
                channel: API
                created_time: 2022-11-23T23:28:39Z
                expedite: false
                expiration: "1026"
                expiration_time: 2026-10-31T23:59:59Z
                fulfillment_status: ISSUED
                last_four: "2160"
                pan: "1111115454542160"
                pin_is_set: false
                reason: I want to use this card, so activate it.
                reason_code: "00"
                state: ACTIVE
                token: activate_05
                type: state.activated
                user:
                  metadata:
                    my_name_1: my_value_1
                    my_name_2: my_value_2
                user_token: my_user_01
                validations:
                  user:
                    birth_date: true
                    phone: false
                    random_name_line1_postfix: false
                    ssn: false
              schema:
                $ref: "#/components/schemas/card_transition_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "422":
          content: {}
          description: Cardholder not active
        "500":
          content: {}
          description: Server error
      summary: Create card transition
      tags:
        - Card Transitions
  /cardtransitions/card/{token}:
    get:
      description: |-
        Retrieves a list of the transitions for a specific card.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getCardtransitionsCardToken
      parameters:
        - description: Unique identifier of the card.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of card transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - barcode: "11379418395311581864"
                    card_product_token: my_cardproduct_01
                    card_token: my_user_01_card_01
                    channel: API
                    created_time: 2021-01-12T19:54:12Z
                    expedite: false
                    expiration: "1026"
                    expiration_time: 2026-10-31T23:59:59Z
                    fulfillment_status: ISSUED
                    last_four: "2160"
                    pan: "1111115454542160"
                    pin_is_set: false
                    reason: I do not want to use this card, so suspend it.
                    reason_code: "01"
                    state: SUSPENDED
                    token: suspend_01
                    type: state.suspended
                    user:
                      metadata:
                        my_name_1: my_value_1
                        my_name_2: my_value_2
                    user_token: my_user_01
                    validations:
                      user:
                        birth_date: true
                        phone: false
                        random_name_line1_postfix: false
                        ssn: false
                  - barcode: "11379418395311581864"
                    card_product_token: my_cardproduct_01
                    card_token: my_user_01_card_01
                    channel: API
                    created_time: 2022-02-23T23:28:39Z
                    expedite: false
                    expiration: "1026"
                    expiration_time: 2027-10-31T23:59:59Z
                    fulfillment_status: ISSUED
                    last_four: "2160"
                    pan: "1111115454542160"
                    pin_is_set: false
                    reason: I want to use this card, so activate it.
                    reason_code: "00"
                    state: ACTIVE
                    token: activate_05
                    type: state.activated
                    user:
                      metadata:
                        my_name_1: my_value_1
                        my_name_2: my_value_2
                    user_token: my_user_01
                    validations:
                      user:
                        birth_date: true
                        phone: false
                        random_name_line1_postfix: false
                        ssn: false
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/CardTransitionListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List transitions for card
      tags:
        - Card Transitions
  /cardtransitions/{token}:
    get:
      description: |-
        Retrieves a specific card transition.
        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getCardtransitionsToken
      parameters:
        - description: |-
            Unique identifier of the card transition.
            Send a `GET` request to `/cardtransitions/card/{token}` to retrieve card transition tokens for a specific card.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                barcode: "11379418395311581864"
                card_product_token: my_cardproduct_01
                card_token: my_user_01_card_01
                channel: API
                created_time: 2022-02-23T23:28:39Z
                expedite: false
                expiration: "1026"
                expiration_time: 2027-10-31T23:59:59Z
                fulfillment_status: ISSUED
                last_four: "2160"
                pan: "1111115454542160"
                pin_is_set: false
                reason: I want to use this card, so activate it.
                reason_code: "00"
                state: ACTIVE
                token: activate_05
                type: state.activated
                user:
                  metadata:
                    my_name_1: my_value_1
                    my_name_2: my_value_2
                user_token: my_user_01
                validations:
                  user:
                    birth_date: true
                    phone: false
                    random_name_line1_postfix: false
                    ssn: false
              schema:
                $ref: "#/components/schemas/card_transition_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Transition not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve card transition
      tags:
        - Card Transitions
  /digitalwalletprovisionrequests/androidpay:
    post:
      description: |-
        Use this endpoint to return card data for use in provisioning a digital wallet token into Google Wallet.

        The returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsAndroidpay
      requestBody:
        content:
          application/json:
            example:
              card_token: my_card_token_0987
              device_id: my_device_id_r51j
              device_type: MOBILE_PHONE
              provisioning_app_version: 2.13.3
              wallet_account_id: my_wallet_account_id_sr51
            schema:
              $ref: "#/components/schemas/digital_wallet_android_pay_provision_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                card_token: my_card_token_1111
                created_time: 2022-11-06T22:43:20Z
                last_modified_time: 2022-11-06T22:43:20Z
                push_tokenize_request_data:
                  display_name: Visa Card
                  last_digits: "3264"
                  network: Visa
                  opaque_payment_card: my_opaque_payment_card_RUza...
                  token_service_provider: TOKEN_PROVIDER_VISA
                  user_address:
                    address1: 180 Grand Ave
                    address2: Suite 500
                    city: Oakland
                    country: US
                    name: John Doe
                    phone: "5105551212"
                    postal_code: "94612"
                    state: CA
              schema:
                $ref: "#/components/schemas/digital_wallet_android_pay_provision_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Create digital wallet token provisioning request for Google Wallet
      tags:
        - Digital Wallets Management
  /digitalwalletprovisionrequests/applepay:
    post:
      description: |-
        Use this endpoint to return card data for use in provisioning a digital wallet token into Apple Wallet.

        The returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsApplepay
      requestBody:
        content:
          application/json:
            example:
              card_token: my_card_token_1234
              certificates:
                - my_certificate_ZIzj...
                - my_certificate_SgMA...
              device_type: MOBILE_PHONE
              nonce: my_nonce_JJCF
              nonce_signature: my_nonce_signature_wbBn
              provisioning_app_version: 2.13.7
            schema:
              $ref: "#/components/schemas/digital_wallet_apple_pay_provision_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                activation_data: my_activation_data_VERF...
                card_token: my_card_token_1234
                created_time: 2023-03-22T21:22:19Z
                encrypted_pass_data: my_encrypted_pass_data_KGga...
                ephemeral_public_key: my_ephemeral_public_key_omvw...
                last_modified_time: 2023-03-22T21:22:19Z
              schema:
                $ref: "#/components/schemas/digital_wallet_apple_pay_provision_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Create digital wallet token provisioning request for Apple Wallet
      tags:
        - Digital Wallets Management
  /digitalwalletprovisionrequests/samsungpay:
    post:
      description: |-
        [NOTE]
        This endpoint is limited in availability.
        For more information, contact your Marqeta representative.

        Use this endpoint to return card data for use in provisioning a digital wallet token into Samsung Wallet.

        The returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsSamsungpay
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/digital_wallet_samsung_pay_provision_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/digital_wallet_samsung_pay_provision_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Create digital wallet token provisioning request for Samsung Wallet
      tags:
        - Digital Wallets Management
  /digitalwalletprovisionrequests/xpay:
    post:
      description: |-
        [NOTE]
        This endpoint is limited in availability.
        For more information, contact your Marqeta representative.

        Use this endpoint to return card data for use in provisioning a digital wallet token into an XPay digital wallet.

        The returned card data is encrypted using the digital wallet provider's encryption key, thereby reducing your PCI compliance overhead.
      operationId: postDigitalwalletprovisionrequestsXPay
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/digital_wallet_x_pay_provision_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/digital_wallet_x_pay_provision_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Create digital wallet token provisioning request for XPay
      tags:
        - Digital Wallets Management
  /digitalwallets/wpp/applePayJWT:
    post:
      description: |-
        [NOTE]
        This endpoint is currently in beta and subject to change.
        For more information, contact your Marqeta representative.

        Use this endpoint to add a card to Apple Wallet via a web application.
      operationId: generateApplePayWPPJWT
      parameters:
        - description:
            Random pseudo-unique value used for troubleshooting between
            multiple parties.
          example: 123d837e-958a-4e9f-bc97-4843ec948123
          explode: false
          in: header
          name: req-sys-id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/request_for_apple_pay_wpp_JWT"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/web_push_provisioning_apple_pay_JWT_response"
          description: Ok
          headers:
            req-sys-id:
              description:
                Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Bad request
          headers:
            req-sys-id:
              description:
                Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Unauthorized
          headers:
            req-sys-id:
              description:
                Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Internal Server Error
          headers:
            req-sys-id:
              description:
                Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create request for Apple Wallet web push provisioning
      tags:
        - Digital Wallets Management
  /digitalwallets/wpp/googlePayPushProvisioningNotification:
    post:
      description: |-
        [NOTE]
        This endpoint is currently in beta and subject to change.
        For more information, contact your Marqeta representative.

        Use this endpoint to add a card to Google Wallet via a web application.

        This endpoint does not return a payload in response to a request.
        Instead, a successful call will return a response code only.
      operationId: sendOPCDataToGooglePay
      parameters:
        - description:
            Random pseudo-unique value used for troubleshooting between
            multiple parties.
          example: 123d837e-958a-4e9f-bc97-4843ec948123
          explode: false
          in: header
          name: req-sys-id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sending_provisioning_data_to_google_pay_backend_request"
        required: true
      responses:
        "202":
          content: {}
          description: Accepted
          headers:
            req-sys-id:
              description:
                Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Bad request
          headers:
            req-sys-id:
              description:
                Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Unauthorized
          headers:
            req-sys-id:
              description:
                Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_message_from_web_push_provisioning_request"
          description: Internal Server Error
          headers:
            req-sys-id:
              description:
                Random pseudo-unique value used for troubleshooting between
                multiple parties.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create request for Google Wallet web push provisioning
      tags:
        - Digital Wallets Management
  /digitalwallettokens:
    get:
      description: Use this endpoint to retrieve a list of digital wallet tokens.
      operationId: getDigitalwallettokens
      parameters:
        - description: Number of digital wallet token resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description:
            Sort order index of the first digital wallet token resource
            in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
        - description: Date when the digital wallet token becomes active.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: Expiration date of the digital wallet token.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Unique identifier of the digital wallet token primary account number (PAN) within the card network.
            This value may vary, depending on the digital wallet.
            For example, the `pan_reference_id` may be different in Apple Wallet and Google Wallet for the same digital wallet token.
          explode: true
          in: query
          name: pan_reference_id
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Unique identifier of the digital wallet token within the card network.
            The `token_reference_id` is unique at the card network level.
          explode: true
          in: query
          name: token_reference_id
          required: false
          schema:
            type: string
          style: form
        - description:
            Unique value representing a tokenization request (Mastercard
            only).
          explode: true
          in: query
          name: correlation_id
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of digital wallet token types to display.
          explode: true
          in: query
          name: token_type
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Name of the token requestor within the card network.

            *NOTE:* The list of example values for this field is maintained by the card networks and is subject to change.
          explode: true
          in: query
          name: token_requestor_name
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of digital wallet token states to display.
          explode: true
          in: query
          name: state
          required: false
          schema:
            type: string
          style: form
        - description: An optional embedded user object.
          explode: true
          in: query
          name: embed
          required: false
          schema:
            enum:
              - user
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DigitalWalletTokenListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List digital wallet tokens
      tags:
        - Digital Wallets Management
  /digitalwallettokens/card/{card_token}:
    get:
      description: |-
        Use this endpoint to return an array of all digital wallet tokens for a particular card.

        This endpoint supports <</core-api/sorting-and-pagination, pagination>>.
      operationId: getDigitalwallettokensCardCardtoken
      parameters:
        - description: |-
            Unique identifier of the card.
            Used to minimize the need to exchange card details during subsequent calls, and also for troubleshooting.
          explode: false
          in: path
          name: card_token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of digital wallet token resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description:
            Sort order index of the first digital wallet token resource
            in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - address_verification:
                      name: Address Verification Name
                      postal_code: "94703"
                      street_address: 223 Elm Street
                    card_token: my_card_token_1989
                    created_time: 2022-10-03T18:55:45Z
                    device:
                      device_id: my_device_id_9575
                      ip_address: x.x.x.x
                      language_code: eng
                      location: +37.81/-122.26
                      name: Phone Name
                      phone_number: "12345678900"
                      type: MOBILE_PHONE
                    fulfillment_status: PROVISIONED
                    issuer_eligibility_decision: cardaccount.verified
                    last_modified_time: 2023-01-26T22:36:10Z
                    state: ACTIVE
                    state_reason: Card activated by cardholder
                    token: my_token_0000
                    token_service_provider:
                      pan_reference_id: my_pan_reference_id_0073
                      token_eligibility_decision: DECISION_GREEN
                      token_reference_id: my_token_reference_id_1600
                      token_requestor_id: my_token_requestor_id_0373
                      token_requestor_name: Token Requestor Name
                      token_score: "02"
                      token_type: DEVICE_SECURE_ELEMENT
                    wallet_provider_profile:
                      account:
                        score: "05"
                      device_score: "03"
                      pan_source: KEY_ENTERED
                      risk_assessment:
                        score: DECISION_YELLOW
                        version: "0001.00"
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: "#/components/schemas/DigitalWalletTokenListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: List digital wallet tokens for card
      tags:
        - Digital Wallets Management
  /digitalwallettokens/{token}:
    get:
      description: Use this endpoint to retrieve a specific digital wallet token.
      operationId: getDigitalwallettokensToken
      parameters:
        - description: Unique identifier of the digital wallet token (DWT).
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                address_verification:
                  name: Address Verification Name
                  postal_code: "94703"
                  street_address: 223 Elm Street
                card_token: my_card_token_1989
                created_time: 2022-10-03T18:55:45Z
                device:
                  device_id: my_device_id_9575
                  ip_address: x.x.x.x
                  language_code: eng
                  location: +37.81/-122.26
                  name: Phone Name
                  phone_number: "12345678900"
                  type: MOBILE_PHONE
                fulfillment_status: PROVISIONED
                issuer_eligibility_decision: cardaccount.verified
                last_modified_time: 2023-01-26T22:36:10Z
                state: ACTIVE
                state_reason: Card activated by cardholder
                token: my_token_0000
                token_service_provider:
                  pan_reference_id: my_pan_reference_id_0073
                  token_eligibility_decision: DECISION_GREEN
                  token_reference_id: my_token_reference_id_1600
                  token_requestor_id: my_token_requestor_id_0373
                  token_requestor_name: Token Requestor Name
                  token_score: "02"
                  token_type: DEVICE_SECURE_ELEMENT
                wallet_provider_profile:
                  account:
                    score: "05"
                  device_score: "03"
                  pan_source: KEY_ENTERED
                  risk_assessment:
                    score: DECISION_YELLOW
                    version: "0001.00"
              schema:
                $ref: "#/components/schemas/digital_wallet_token"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve digital wallet token
      tags:
        - Digital Wallets Management
  /digitalwallettokens/{token}/showtokenpan:
    get:
      description: |-
        Use this endpoint to retrieve a digital wallet token with the entire primary account number (PAN) displayed.
        The PAN returned is of the digital wallet token and not of the card.
        (For security reasons, the PAN is not fully visible on the digital wallet token returned by `GET` `/digitalwallettokens/{token}`.)

        [WARNING]
        Sending a request to this endpoint requires PCI DSS compliance.
        You must comply with PCI DSS data security requirements if you want to store, transmit, or process sensitive card data such as the cardholder's primary account number (PAN), personal identification number (PIN), and card expiration date.
      operationId: getDigitalwallettokensTokenShowtokenpan
      parameters:
        - description: Unique identifier of the digital wallet token (DWT).
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                address_verification:
                  name: Address Verification Name
                  postal_code: "94703"
                  street_address: 223 Elm Street
                card_token: my_card_token_1989
                created_time: 2022-10-03T18:55:45Z
                device:
                  device_id: my_device_id_9575
                  ip_address: x.x.x.x
                  language_code: eng
                  location: +37.81/-122.26
                  name: Phone Name
                  phone_number: "12345678900"
                  type: MOBILE_PHONE
                fulfillment_status: PROVISIONED
                issuer_eligibility_decision: cardaccount.verified
                last_modified_time: 2023-01-26T22:36:10Z
                state: ACTIVE
                state_reason: Card activated by cardholder
                token: my_token_0000
                token_service_provider:
                  pan_reference_id: my_pan_reference_id_0073
                  token_eligibility_decision: DECISION_GREEN
                  token_pan: my_token_pan_6792
                  token_reference_id: my_token_reference_id_1600
                  token_requestor_id: my_token_requestor_id_0373
                  token_requestor_name: Token Requestor Name
                  token_score: "02"
                  token_type: DEVICE_SECURE_ELEMENT
                wallet_provider_profile:
                  account:
                    score: "05"
                  device_score: "03"
                  pan_source: KEY_ENTERED
                  risk_assessment:
                    score: DECISION_YELLOW
                    version: "0001.00"
              schema:
                $ref: "#/components/schemas/digital_wallet_token"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Card not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve digital wallet token PAN
      tags:
        - Digital Wallets Management
  /digitalwallettokentransitions:
    post:
      description:
        Use this endpoint to transition a digital wallet token from one
        state to another.
      operationId: postDigitalwallettokentransitions
      requestBody:
        content:
          application/json:
            example:
              digital_wallet_token:
                token: my_digital_wallet_token_0987
              reason: Passed additional identity verification
              reason_code: "18"
              state: ACTIVE
              token: my_transition_04
            schema:
              $ref: "#/components/schemas/digital_wallet_token_transition_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                channel: API
                created_time: 2023-02-23T18:57:45Z
                digital_wallet_token:
                  token: my_digital_wallet_token_0987
                fulfillment_status: PROVISIONED
                reason: Passed additional identity verification
                reason_code: "18"
                state: ACTIVE
                token: my_transition_04
                type: state.activated
              schema:
                $ref: "#/components/schemas/digital_wallet_token_transition_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Token already associated with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create digital wallet token transition
      tags:
        - Digital Wallets Management
  /digitalwallettokentransitions/digitalwallettoken/{token}:
    get:
      description: |-
        Use this endpoint to return an array of all transitions for a particular digital wallet token.

        This endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, pagination>>, and <</core-api/sorting-and-pagination, sorting>>.
      operationId: getDigitalwallettokentransitionsDigitalwallettokenToken
      parameters:
        - description: Unique identifier of the digital wallet token (DWT).
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of digital wallet transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description:
            The sort order index of the first digital wallet token in the
            returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -id
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - channel: API
                    created_time: 2023-02-23T18:57:45Z
                    digital_wallet_token:
                      token: my_digital_wallet_token_0987
                    fulfillment_status: PROVISIONED
                    reason: Passed additional identity verification
                    reason_code: "18"
                    state: ACTIVE
                    token: my_transition_04
                    type: state.activated
                  - channel: TOKEN_SERVICE_PROVIDER
                    created_time: 2023-02-23T18:44:21Z
                    digital_wallet_token:
                      token: my_digital_wallet_token_0987
                    fulfillment_status: DECISION_YELLOW
                    reason: Additional identity verification required
                    reason_code: "21"
                    state: REQUESTED
                    token: my_transition_04
                    type: fulfillment.requested
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/DigitalWalletTokenTransitionListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List transitions for digital wallet token
      tags:
        - Digital Wallets Management
  /digitalwallettokentransitions/{token}:
    get:
      description: |-
        Use this endpoint to retrieve a specific digital wallet token transition.

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getDigitalwallettokentransitionsToken
      parameters:
        - description: Unique identifier of the digital wallet token (DWT) transition.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                channel: API
                created_time: 2023-02-23T18:57:45Z
                digital_wallet_token:
                  token: my_digital_wallet_token_0987
                fulfillment_status: PROVISIONED
                reason: Passed additional identity verification
                reason_code: "18"
                state: ACTIVE
                token: my_transition_04
                type: state.activated
              schema:
                $ref: "#/components/schemas/digital_wallet_token_transition_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Transition not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve digital wallet token transition
      tags:
        - Digital Wallets Management
  /feecharges:
    post:
      description: |-
        Use this endpoint to create a fee charge.
        You must pass in either `user_token` or `business_token` to associate a user or business with the fee charge.

        This is an all-or-nothing operation.
        When more than one fee is present, you must assess either all fees, or no fees.

        [NOTE]
        This feature is currently in beta and subject to change.
        It also requires additional activation steps.
        To learn more about the Beta program for this feature and about activating it for your program, contact your Marqeta representative.
      operationId: postFeeCharge
      requestBody:
        content:
          application/json:
            example:
              business_token: my_business_01
              fees:
                - memo: Initiation fee
                  token: my_fee_01
              token: my_feecharge_01
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/fee_transfer_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                business_token: my_business_01
                created_time: 2023-05-11T19:05:55Z
                fees:
                  - fee:
                      active: true
                      amount: 1
                      created_time: 2023-05-11T17:57:21Z
                      currency_code: USD
                      last_modified_time: 2023-05-11T17:57:21Z
                      name: My Fee 01
                      tags: My Tags
                      token: my_fee_01
                    memo: Initiation fee
                    token: my_fee_01
                    transaction_token: "162"
                token: my_feecharge_01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/fee_transfer_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "422":
          content: {}
          description: Rule violations
        "500":
          content: {}
          description: Server error
      summary: Create fee charge
      tags:
        - Fee Charges
  /feecharges/{token}:
    get:
      description: |-
        Use this endpoint to retrieve a specific fee charge.
        Include the fee transfer `token` path parameter to specify the fee charge to return.
      operationId: getFeeChargeToken
      parameters:
        - description: Unique identifier of the fee charge to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                business_token: my_business_01
                created_time: 2023-05-11T19:05:55Z
                fees:
                  - fee:
                      active: true
                      amount: 1
                      created_time: 2023-05-11T17:57:21Z
                      currency_code: USD
                      last_modified_time: 2023-05-11T17:57:21Z
                      name: My Fee 01
                      tags: My Tags
                      token: my_fee_01
                    memo: Initiation fee
                    token: my_fee_01
                    transaction_token: "162"
                token: my_feetransfer_01
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/fee_transfer_response"
          description: Success
        "404":
          content: {}
          description: Fee charge not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve fee charge
      tags:
        - Fee Charges
  /feerefunds:
    post:
      description: |-
        Use this endpoint to create a fee refund.
        Include the fee charge `token` path parameter to specify the fee to return.

        If there are insufficient funds in your fee account to refund the fee, funds are drawn from your program reserve account.
      operationId: postFeeRefunds
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/fee_refund_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/fee_transfer_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "422":
          content: {}
          description: Rule violations
        "500":
          content: {}
          description: Server error
      summary: Create fee refund
      tags:
        - Fee Refunds
  /fees:
    get:
      description: |-
        Use this endpoint to list existing fees.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getFees
      parameters:
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data[]:
                  active: true
                  amount: 3.0
                  created_time: 2023-05-11T18:03:39Z
                  currency_code: USD
                  last_modified_time: 2023-05-11T18:03:39Z
                  name: My Fee 02
                  tags: My Tags
                  token: my_fee_02
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/FeeListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List fees
      tags:
        - Fees
    post:
      description: |-
        Use this endpoint to create a fee.
        Add the source details to the body of the request in link:http://www.json.org/[JSON, window="_blank"] format.
      operationId: postFees
      requestBody:
        content:
          application/json:
            example:
              amount: 1.0
              currency_code: USD
              name: My Fee 01
              tags: My Tags
              token: my_fee_01
            schema:
              $ref: "#/components/schemas/fee_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                active: true
                amount: 1
                created_time: 2023-05-11T17:57:21Z
                currency_code: USD
                last_modified_time: 2023-05-11T17:57:21Z
                name: My Fee 01
                tags: My Tags
                token: my_fee_01
              schema:
                $ref: "#/components/schemas/fee_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create fee
      tags:
        - Fees
  /fees/{token}:
    get:
      description: |-
        Use this endpoint to retrieve a fee.
        Include the `token` path parameter to specify the fee to return.
      operationId: getFeesToken
      parameters:
        - description: Unique identifier of the fee resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                amount: 1.0
                created_time: 2023-05-11T17:57:21Z
                currency_code: USD
                last_modified_time: 2023-05-11T17:57:21Z
                name: My Fee 01
                tags: My Tags
                token: my_fee_01
              schema:
                $ref: "#/components/schemas/fee_response"
          description: Success
        "404":
          content: {}
          description: Fee not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve fee
      tags:
        - Fees
    put:
      description: |-
        Use this endpoint to update a fee.
        Include the `token` as a path parameter to indicate the fee to update.
      operationId: putFeesToken
      parameters:
        - description: Unique identifier of the fee resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              active: false
            schema:
              $ref: "#/components/schemas/fee_update_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                active: false
                amount: 1.0
                created_time: 2023-05-11T17:57:21Z
                currency_code: USD
                last_modified_time: 2023-05-11T17:57:21Z
                name: My Fee 01
                tags: My Tags
                token: my_fee_01
              schema:
                $ref: "#/components/schemas/fee_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Update fee
      tags:
        - Fees
  /ping:
    get:
      description: Tests if the Marqeta server is available and responsive.
      operationId: getPing
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ping_response"
          description: Success
        "500":
          content: {}
          description: Server error
      summary: Returns a heartbeat to the consumer
      tags:
        - ping
    post:
      operationId: postPing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/echo_ping_request"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/echo_ping_response"
          description: Success
        "500":
          content: {}
          description: Server error
      summary: Echo test for sending payload to server
      tags:
        - ping
  /simulations/cardtransactions/authorization:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate authorization
      description: |-
        Authorization is the process of confirming whether a card is valid, business rules are met, and funds are sufficient, and then placing a temporary hold on those funds.
        Use this endpoint to simulate an `authorization` type transaction by including the `card_token` and other authorization details in your request.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AuthorizationEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationEvent"
            example:
              card_token: "**CARD_TOKEN**"
              amount: 10
              card_acceptor:
                mid: "11111"
              network: VISA
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: authorization
                  state: PENDING
                  token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: 0
                    memo: Approved or completed successfully
                  created_time: 2022-12-06T21:39:43Z
                  user_transaction_time: 2022-12-06T21:39:43Z
                  settlement_date: 2022-12-06T00:00:00Z
                  amount: 10
                  gpa:
                    ledger_balance: 250
                    available_balance: 240
                    impacted_amount: -10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1.0
                    original_currency_code: 840
                  network: VISA
                  subnetwork: VISANET
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/authorization.advice:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate authorization advice
      description: |-
        Authorization advice allows an amount to be decreased after the authorization.
        This endpoint allows you to simulate post-swipe adjustments.
        Simulate an `authorization.advice` transaction by including the `preceding_related_transaction_token` and other authorization details in your request.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AuthorizationAdviceEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationAdviceEvent"
            example:
              amount: 10
              preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: authorization.advice
                  state: PENDING
                  token: "**AUTHORIZATION_ADVICE_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-03-07T18:25:28Z
                  user_transaction_time: 2023-03-07T18:25:22Z
                  settlement_date: 2023-03-07T00:00:00Z
                  amount: 10
                  request_amount: 10
                  gpa:
                    ledger_balance: 250
                    available_balance: 240
                    impacted_amount: -10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  fraud:
                    network:
                      transaction_risk_score: 46
                      account_risk_score: "9 "
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/authorization.clearing:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate authorization clearing
      description: |-
        Clearing is the process of finalizing the hold on funds and posting the transaction on the cardholder's account.
        This process is triggered by the merchant's capture request.
        This endpoint simulates an `authorization.clearing` type transaction by including the `preceding_related_transaction_token` and `amount` in your request.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AuthorizationClearingEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationClearingEvent"
            example:
              preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
              amount: 10
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: authorization.clearing
                  state: COMPLETION
                  token: "**AUTHORIZATION_CLEARING_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: 0
                    memo: Approved or completed successfully
                  created_time: 2022-12-06T21:41:48Z
                  user_transaction_time: 2022-12-06T21:39:43Z
                  settlement_date: 2022-12-06T00:00:00Z
                  amount: 10
                  gpa:
                    ledger_balance: 240
                    available_balance: 240
                    impacted_amount: -10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1.0
                    original_currency_code: 826
                  preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                  network: VISA
                  subnetwork: VISANET
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Card Acceptor Name
                    city: Seattle
                    state: WA
                    country_code: USA
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/authorization.reversal:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate authorization reversal
      description: |-
        A reversal releases the hold that was placed on account funds by an authorization, thus returning the funds to the account.
        This endpoint simulates an `authorization.reversal` type transaction by including the `original_transaction_token` and `amount` in your request.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AuthorizationReversalEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationReversalEvent"
            example:
              preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
              amount: 10
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: authorization.reversal
                  state: CLEARED
                  token: "**AUTHORIZATION_REVERSAL_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                    created_time: 2023-03-23T19:46:23Z
                    user_transaction_time: 2023-03-23T19:46:20Z
                    settlement_date: 2023-03-23T00:00:00Z
                    amount: 10
                    request_amount: 10
                    gpa:
                      ledger_balance: 250
                      available_balance: 250
                      impacted_amount: 10
                    currency_code: USD
                    currency_conversion:
                      original_amount: 10
                      conversion_rate: 1
                      original_currency_code: "840"
                    network: VISA
                    subnetwork: VISANET
                    acquirer_fee_amount: 0
                    fraud:
                      network:
                        transaction_risk_score: 16
                        account_risk_score: "4 "
                    preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                    card_acceptor:
                      mid: "000000000011111"
                      mcc: "6411"
                      name: Marqeta Storefront
                      city: St. Petersbu
                      state: CA
                      postal_code: "33705"
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/authorization.incremental:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate incremental authorization
      description: |-
        Use this endpoint to simulate incremental authorization transactions.
        An incremental authorization is a request to add an additional dollar amount to an ongoing prior authorization.
        This type of transaction enables you to increase the final amount authorized as conditions change or additional charges accrue.
        A common use case is adding the gratuity (an incremental authorization) to the original total (a prior authorization) of a restaurant bill.
        For this use case, you use two endpoints: one to create the authorization, and another to increment it.
        * Create the authorization using the `/simulations/cardtransactions/authorization` endpoint:  +
        *Action:* `POST`  +
        *Endpoint:* `/simulations/cardtransactions/authorization`
        * Increment the authorization using the `/simulations/cardtransactions/authorization.incremental` endpoint:  +
        *Action:* `POST`  +
        *Endpoint:* `/simulations/cardtransactions/authorization.incremental`
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AuthorizationIncrementalEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationIncrementalEvent"
            example:
              amount: 5
              preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: authorization.incremental
                  state: PENDING
                  token: "**AUTHORIZATION_INCREMENTAL_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response: null
                  code: "0000"
                  memo: Approved or completed successfully
                  created_time: 2023-02-22T18:10:12Z
                  user_transaction_time: 2023-02-22T18:10:12Z
                  settlement_date: 2023-02-22T00:00:00Z
                  amount: 5
                  request_amount: 5
                  gpa:
                    ledger_balance: 250
                    available_balance: 220
                    impacted_amount: -5
                  currency_code: USD
                  currency_conversion:
                    original_amount: 5
                    conversion_rate: 1
                    original_currency_code: "840"
                  preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/authorization.cashback:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate authorization cash back
      description: |-
        Use this endpoint to simulate `authorization.cashback` transactions, which covers authorization for cash back requested at a point-of-sale terminal.
        This simulation can be used to test dual-message cash back transactions.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AuthorizationCashbackEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationCashbackEvent"
            example:
              card_token: "**CARD_TOKEN**"
              amount: 10
              card_acceptor:
                mid: "11111"
              network: VISA
              cash_back_amount: 10
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: authorization.cashback
                  state: PENDING
                  token: "**AUTHORIZATION_CASHBACK_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-03-23T19:43:43Z
                  user_transaction_time: 2023-03-23T19:43:43Z
                  settlement_date: 2023-03-23T00:00:00Z
                  amount: 20
                  cash_back_amount: 10
                  request_amount: 20
                  gpa:
                    ledger_balance: 250
                    available_balance: 230
                    impacted_amount: -20
                  currency_code: USD
                  currency_conversion:
                    original_amount: 20
                    conversion_rate: 1
                    original_currency_code: "840"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  fraud:
                    network:
                      transaction_risk_score: 85
                      account_risk_score: "3"
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/authorization.atm.withdrawal:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate ATM withdrawal authorization
      description: |-
        Use this endpoint to simulate `authorization.atm.withdrawal` transactions.
        In the EU, this includes authorization for withdrawing cash at an ATM.
        In the US, this event indicates that the cardholder got cash from a bank teller rather than an ATM.
        This simulation can be used to test dual-message ATM withdrawal transactions.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AuthorizationAtmWithdrawalEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationAtmWithdrawalEvent"
            example:
              card_token: "**CARD_TOKEN**"
              amount: 10
              card_acceptor:
                mid: "11111"
              network: VISA
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: authorization.atm.withdrawal
                  state: PENDING
                  token: "**AUTHORIZATION_ATM_WITHDRAWAL_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-03-23T22:14:46Z
                  user_transaction_time: 2023-03-23T22:14:46Z
                  settlement_date: 2023-03-23T00:00:00Z
                  amount: 10
                  request_amount: 10
                  gpa:
                    ledger_balance: 250
                    available_balance: 240
                    impacted_amount: -10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  fraud:
                    network:
                      transaction_risk_score: 44
                      account_risk_score: "4 "
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/authorization.clearing.atm.withdrawal:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate ATM withdrawal authorization clearing
      description: |-
        Use this endpoint to simulate `authorization.clearing.atm.withdrawal` transactions, which completes an authorization for withdrawing cash at an ATM.
        This simulation can be used to test dual-message ATM withdrawal transactions.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AuthorizationClearingAtmWithdrawalEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationClearingAtmWithdrawalEvent"
            example:
              amount: 10
              preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: authorization.clearing.atm.withdrawal
                  state: COMPLETION
                  token: "**AUTHORIZATION_CLEARING_ATM_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-03-23T22:18:31Z
                  user_transaction_time: 2023-03-23T22:18:31Z
                  settlement_date: 2023-03-23T00:00:00Z
                  amount: 10
                  amount_to_be_released: 0
                  request_amount: 10
                  gpa:
                    ledger_balance: 240
                    available_balance: 240
                    impacted_amount: -10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
                    country_code: USA
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/authorization.quasi.cash:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate quasi-cash authorization
      description: |-
        Use this endpoint to simulate `authorization.quasi.cash` transactions.
        This is for authorization at a point-of-sale terminal for items equivalent to cash, such as traveler's checks, money orders, foreign currency, or gaming chips.
        This simulation can be used to test dual-message quasi-cash transactions.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AuthorizationQuasiCashEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationQuasiCashEvent"
            example:
              card_token: "**CARD_TOKEN**"
              amount: 10
              card_acceptor:
                mid: "11111"
              network: VISA
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: authorization.quasi.cash
                  state: PENDING
                  token: "**AUTHORIZATION_QUASI_CASH_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-03-23T22:32:51Z
                  user_transaction_time: 2023-03-23T22:32:51Z
                  settlement_date: 2023-03-23T00:00:00Z
                  amount: 10
                  request_amount: 10
                  gpa:
                    ledger_balance: 240
                    available_balance: 240
                    impacted_amount: -10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  fraud:
                    network:
                      transaction_risk_score: 17
                      account_risk_score: "6 "
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/authorization.clearing.quasi.cash:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate quasi-cash authorization clearing
      description: |-
        Use this endpoint to simulate `authorization.clearing.quasi.cash` transactions, which completes an authorization at a point-of-sale terminal for items equivalent to cash, such as traveler's checks, money orders, foreign currency, or gaming chips.
        This simulation can be used to test dual-message quasi-cash transactions.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AuthorizationClearingQuasiCashEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizationClearingQuasiCashEvent"
            example:
              amount: 10
              preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: authorization.clearing.quasi.cash
                  state: COMPLETION
                  token: "**AUTHORIZATION_CLEARING_QUASI_CASH_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-03-23T22:34:18Z
                  user_transaction_time: 2023-03-23T22:34:18Z
                  settlement_date: 2023-03-23T00:00:00Z
                  amount: 10
                  amount_to_be_released: 0
                  request_amount: 10
                  gpa:
                    ledger_balance: 80
                    available_balance: 80
                    impacted_amount: -10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
                    country_code: USA
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/account.funding.authorization:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate AFT authorization
      description: |-
        Use this endpoint to simulate Account Funding Transactions (AFTs) using `account.funding.authorization`.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AccountFundingAuthorizationEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountFundingAuthorizationEvent"
            example:
              card_token: "**CARD_TOKEN**"
              amount: 10
              network: VISA
              account_funding:
                transaction_type: ACCOUNT_TO_ACCOUNT
                funding_source: CREDIT
                receiver_account_type: CARD_ACCOUNT
                first_name: FirstName
                last_name: LastName
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: account.funding.authorization
                  state: PENDING
                  token: "**ACCOUNT_FUNDING_AUTHORIZATION_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: 0
                    memo: Approved or completed successfully
                  created_time: 2023-01-19T00:03:48Z
                  user_transaction_time: 2023-01-19T00:03:48Z
                  settlement_date: 2023-01-19T00:00:00Z
                  amount: 10
                  gpa:
                    ledger_balance: 250
                    available_balance: 240
                    impacted_amount: -10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1.0
                    original_currency_code: 840
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  card_acceptor:
                    mid: "000984172732880"
                    mcc: 4829
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: 33705
                  account_funding:
                    receiver_name: FirstName LastName
                    funding_source: CREDIT
                    transaction_type: ACCOUNT_TO_ACCOUNT
                  original_credit:
                    funding_source: CREDIT
                    transaction_type: ACCOUNT_TO_ACCOUNT
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/account.funding.authorization.clearing:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate AFT authorization clearing
      description: |-
        Use this endpoint to simulate `account.funding.authorization.clearing` transactions.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AccountFundingAuthorizationClearingEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountFundingAuthorizationClearingEvent"
            example:
              amount: 10
              preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: account.funding.authorization.clearing
                  state: COMPLETION
                  token: "**ACCOUNT_FUNDING_AUTHORIZATION_CLEARING_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: 0
                    memo: Approved or completed successfully
                  created_time: 2022-12-06T21:47:21Z
                  user_transaction_time: 2022-12-06T21:45:57Z
                  settlement_date: 2022-12-06T00:00:00Z
                  amount: 10
                  gpa:
                    ledger_balance: 240
                    available_balance: 240
                    impacted_amount: -10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1.0
                    original_currency_code: 840
                  preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                  network: VISA
                  subnetwork: VISANET
                  card_acceptor:
                    mid: "000984172732880"
                    mcc: "4829"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    country_code: USA
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/account.funding.authorization.reversal:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate AFT authorization reversal
      description: |-
        Use this endpoint to simulate `account.funding.authorization.reversal` transactions.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AccountFundingAuthorizationReversalEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountFundingAuthorizationReversalEvent"
            example:
              amount: 10
              preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: account.funding.authorization.reversal
                  state: CLEARED
                  token: "**ACCOUNT_FUNDING_AUTHORIZATION_REVERSAL_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-03-23T21:31:40Z
                  user_transaction_time: 2023-03-23T21:31:37Z
                  settlement_date: 2023-03-23T00:00:00Z
                  amount: 10
                  request_amount: 10
                  gpa:
                    ledger_balance: 250
                    available_balance: 250
                    impacted_amount: 10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  fraud:
                    network:
                      transaction_risk_score: 44
                      account_risk_score: "2 "
                  card_acceptor:
                    mid: "000984172732880"
                    mcc: "4829"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/account.funding.auth_plus_capture:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate AFT authorization and capture
      description: |-
        Use this endpoint to simulate `account.funding.auth_plus_capture` transactions.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AccountFundingAuthPlusCaptureEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountFundingAuthPlusCaptureEvent"
            example:
              card_token: "**CARD_TOKEN**"
              amount: 10
              network: VISA
              account_funding:
                transaction_type: ACCOUNT_TO_ACCOUNT
                funding_source: CREDIT
                receiver_account_type: CARD_ACCOUNT
                first_name: FirstName
                last_name: LastName
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: account.funding.auth_plus_capture
                  state: COMPLETION
                  token: "**ACCOUNT_FUNDING_AUTH_PLUS_CAPTURE_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-04-05T20:23:33Z
                  user_transaction_time: 2023-04-05T20:23:33Z
                  settlement_date: 2023-04-05T00:00:00Z
                  amount: 10
                  request_amount: 10
                  gpa:
                    ledger_balance: 240
                    available_balance: 240
                    impacted_amount: -10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  network: VISA
                  subnetwork: VISANETDEBIT
                  acquirer_fee_amount: 0
                  fraud:
                    network:
                      transaction_risk_score: 15
                      account_risk_score: "3 "
                  card_acceptor:
                    mid: "000984172732880"
                    mcc: "4829"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
                  account_funding:
                    receiver_name: fName lName
                    funding_source: CREDIT
                    transaction_type: ACCOUNT_TO_ACCOUNT
                  original_credit:
                    funding_source: CREDIT
                    transaction_type: ACCOUNT_TO_ACCOUNT
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/account.funding.auth_plus_capture.reversal:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate AFT authorization and capture reversal
      description: |-
        Use this endpoint to simulate `account.funding.auth_plus_capture.reversal` transactions.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: AccountFundingAuthPlusCaptureReversalEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountFundingAuthPlusCaptureReversalEvent"
            example:
              amount: 10
              preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: account.funding.auth_plus_capture.reversal
                  state: COMPLETION
                  token: "**ACCOUNT_FUNDING_AUTH_PLUS_CAPTURE_REVERSAL_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-04-05T20:59:47Z
                  user_transaction_time: 2023-04-05T20:59:38Z
                  settlement_date: 2023-04-05T00:00:00Z
                  amount: 10
                  request_amount: 10
                  gpa:
                    ledger_balance: 250
                    available_balance: 250
                    impacted_amount: 10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  fraud:
                    network:
                      transaction_risk_score: 28
                      account_risk_score: "1 "
                  card_acceptor:
                    mid: "000984172732880"
                    mcc: "4829"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/refund:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate refund
      description: |-
        Use this endpoint to simulate an offline refund.
        Refunds are not associated with a token, so a `preceding_related_transaction_token` is not needed.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: RefundEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundEvent"
            example:
              card_token: "**CARD_TOKEN**"
              amount: 10
              card_acceptor:
                mid: "11111"
              network: VISA
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: refund
                  state: COMPLETION
                  token: "**REFUND_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-03-07T21:46:29Z
                  user_transaction_time: 2023-03-07T21:46:29Z
                  settlement_date: 2023-03-07T00:00:00Z
                  amount: 10
                  request_amount: 10
                  gpa:
                    ledger_balance: 250
                    available_balance: 250
                    impacted_amount: 10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  card_acceptor:
                    mid: "11111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersburg
                    state: CA
                    postal_code: "33705"
                    country_code: USA
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/refund.authorization:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate refund authorization
      description: |-
        Online refund refers to the `refund.authorization` messages that Visa and Mastercard merchants can send to card issuers.
        These refund authorizations allow merchants to notify customers of a pending refund and give card issuers the opportunity to decline a refund.
        Like purchase authorizations, refund authorizations are eventually cleared or completed by a `refund.authorization.clearing` event.
        That refund authorization clearing is automatically accepted and processed by the Marqeta platform, regardless of your funding model.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: RefundAuthorizationEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundAuthorizationEvent"
            example:
              card_token: "**CARD_TOKEN**"
              amount: 10
              network: VISA
              card_acceptor:
                mid: "11111"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: refund.authorization
                  state: PENDING
                  token: "**REFUND_AUTHORIZATION_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-03-07T21:48:48Z
                  user_transaction_time: 2023-03-07T21:48:48Z
                  settlement_date: 2023-03-07T00:00:00Z
                  amount: 10
                  request_amount: 10
                  gpa:
                    ledger_balance: 250
                    available_balance: 250
                    impacted_amount: 10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  fraud:
                    network:
                      transaction_risk_score: 22
                      account_risk_score: "2 "
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/refund.authorization.reversal:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate refund authorization reversal
      description: |-
        Use this endpoint to reject `refund.authorization` transactions for online refunds.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: RefundAuthorizationReversalEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundAuthorizationReversalEvent"
            example:
              amount: 10
              preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: refund.authorization.reversal
                  state: CLEARED
                  token: "**REFUND_AUTHORIZATION_REVERSAL_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-03-07T21:52:59Z
                  user_transaction_time: 2023-03-07T21:52:28Z
                  settlement_date: 2023-03-07T00:00:00Z
                  amount: 10
                  request_amount: 10
                  gpa:
                    ledger_balance: 250
                    available_balance: 250
                    impacted_amount: -10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  fraud:
                    network:
                      transaction_risk_score: 13
                      account_risk_score: "4 "
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /simulations/cardtransactions/refund.authorization.clearing:
    post:
      tags:
        - Simulations Card Transactions
      summary: Simulate refund authorization clearing
      description: |-
        Use this endpoint to simulate online refund clearing.
        See the full request body structure at <</core-api/simulations-card-transactions#SimulationRequestBody, Request body>>.
      operationId: RefundAuthorizationClearingEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefundAuthorizationClearingEvent"
            example:
              amount: 10
              preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardTransactionResponse"
              example:
                transaction:
                  type: refund.authorization.clearing
                  state: COMPLETION
                  token: "**REFUND_AUTHORIZATION_CLEARING_TRANSACTION_TOKEN**"
                  user_token: "**USER_TOKEN**"
                  card_token: "**CARD_TOKEN**"
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  created_time: 2023-03-07T21:54:58Z
                  user_transaction_time: 2023-03-07T21:54:58Z
                  settlement_date: 2023-03-07T00:00:00Z
                  amount: 10
                  request_amount: 10
                  gpa:
                    ledger_balance: 250
                    available_balance: 250
                    impacted_amount: 10
                  currency_code: USD
                  currency_conversion:
                    original_amount: 10
                    conversion_rate: 1
                    original_currency_code: "840"
                  preceding_related_transaction_token: "**AUTHORIZATION_TRANSACTION_TOKEN**"
                  network: VISA
                  subnetwork: VISANET
                  acquirer_fee_amount: 0
                  card_acceptor:
                    mid: "000000000011111"
                    mcc: "6411"
                    name: Marqeta Storefront
                    city: St. Petersbu
                    state: CA
                    postal_code: "33705"
                    country_code: USA
        "404":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /transactions:
    get:
      description: |-
        List all transactions.

        By default, this endpoint returns transactions conducted within the last 30 days.
        To return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.

        By default, `GET /transactions` returns transactions having either `PENDING` or `COMPLETION` states.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getTransactions
      parameters:
        - description: The number of transactions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description:
            The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -user_transaction_time
            enum:
              - -created_time
              - created_time
              - -user_transaction_time
              - user_transaction_time
            type: string
          style: form
        - description: |-
            The starting date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The ending date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction types to include.
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the user account holder.
          explode: true
          in: query
          name: user_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the business account holder.
          explode: true
          in: query
          name: business_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the acting user.
          explode: true
          in: query
          name: acting_user_token
          required: false
          schema:
            type: string
          style: form
        - description: The unique identifier of the card.
          explode: true
          in: query
          name: card_token
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction states to display.
          explode: true
          in: query
          name: state
          required: false
          schema:
            default: PENDING,COMPLETION
            type: string
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description:
            If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
        - description: Start identifier
          explode: true
          in: query
          name: start_identifier
          required: false
          schema:
            format: int64
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - acquirer:
                      institution_country: "840"
                      institution_id_code: "428399181"
                      retrieval_reference_number: "528294182583"
                      system_trace_audit_number: "656761"
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10.0
                    card:
                      metadata: null
                    card_security_code_verification:
                      response:
                        code: "0000"
                        memo: Card security code match
                      type: CVV1
                    card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                    created_time: 2021-08-21T17:26:29Z
                    currency_code: USD
                    duration: 537
                    fraud:
                      network:
                        account_risk_score: "7"
                        transaction_risk_score: 97
                    gpa:
                      available_balance: 0.0
                      balances:
                        USD:
                          available_balance: 0.0
                          credit_balance: 0.0
                          currency_code: USD
                          impacted_amount: 10.0
                          ledger_balance: 20.0
                          pending_credits: 0.0
                      credit_balance: 0.0
                      currency_code: USD
                      impacted_amount: 10.0
                      ledger_balance: 20.0
                      pending_credits: 0.0
                    gpa_order:
                      amount: 10.0
                      created_time: 2021-08-21T17:26:30Z
                      currency_code: USD
                      funding:
                        amount: 10.0
                        gateway_log:
                          duration: 481
                          message: Approved or completed successfully
                          order_number: "1200"
                          response:
                            code: "200"
                            data:
                              jit_funding:
                                address_verification:
                                  gateway:
                                    on_file:
                                      postal_code: "94601"
                                      street_address: 2000 High St
                                    response:
                                      code: "0000"
                                      memo: Address and postal code match
                                amount: 10.0
                                method: pgfs.authorization
                                original_jit_funding_token: your-jit-funding-token
                                token: your-jit-funding-token
                                user_token: your-jit-funding-user
                          timed_out: false
                          transaction_id: your-jit-funding-token
                        source:
                          active: true
                          created_time: 2021-08-21T17:25:43Z
                          is_default_account: false
                          last_modified_time: 2021-08-21T17:25:43Z
                          name: PGFS for simulating transactions
                          token: "**********dd5f"
                          type: programgateway
                      funding_source_token: "**********dd5f"
                      jit_funding:
                        acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                        amount: 10.0
                        method: pgfs.authorization
                        token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                        user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                      last_modified_time: 2021-08-21T17:26:30Z
                      response:
                        code: "0000"
                        memo: Approved or completed successfully
                      state: PENDING
                      token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                      transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                      user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                    issuer_received_time: 2021-08-21T17:26:29Z
                    network: MARQETA
                    pos:
                      card_holder_presence: false
                      card_presence: false
                      is_recurring: false
                      pan_entry_mode: MAG_STRIPE
                      partial_approval_capable: false
                      pin_entry_mode: "TRUE"
                      purchase_amount_only: false
                      terminal_attendance: ATTENDED
                    preceding_related_transaction_token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                    response:
                      code: "0000"
                      memo: Approved or completed successfully
                    state: PENDING
                    subnetwork: GATEWAY_JIT
                    token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    transaction_metadata:
                      payment_channel: OTHER
                    type: gpa.credit.authorization
                    user:
                      metadata: null
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    user_transaction_time: 2021-08-21T17:26:29Z
                  - acquirer:
                      institution_country: "840"
                      institution_id_code: "428399181"
                      retrieval_reference_number: "528294182583"
                      system_trace_audit_number: "656761"
                    acquirer_fee_amount: 0.0
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10.0
                    approval_code: "761515"
                    card:
                      metadata: null
                    card_acceptor:
                      city: Berkeley
                      country_code: USA
                      mcc: "6411"
                      mid: "000000000011111"
                      name: Aegis Fleet Services
                      street_address: 111 Main St
                    card_security_code_verification:
                      response:
                        code: "0000"
                        memo: Card security code match
                      type: CVV1
                    card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                    created_time: 2021-08-21T17:26:29Z
                    currency_code: USD
                    duration: 622
                    fraud:
                      network:
                        account_risk_score: "7"
                        transaction_risk_score: 97
                    gpa:
                      available_balance: 0.0
                      balances:
                        USD:
                          available_balance: 0.0
                          credit_balance: 0.0
                          currency_code: USD
                          impacted_amount: -10.0
                          ledger_balance: 20.0
                          pending_credits: 0.0
                      credit_balance: 0.0
                      currency_code: USD
                      impacted_amount: -10.0
                      ledger_balance: 20.0
                      pending_credits: 0.0
                    gpa_order:
                      amount: 10.0
                      created_time: 2021-08-21T17:26:30Z
                      funding:
                        amount: 10.0
                        currency_code: USD
                        funding_source_token: "**********dd5f"
                        gateway_log:
                          duration: 481
                          message: Approved or completed successfully
                          order_number: "1200"
                          response:
                            code: "200"
                            data:
                              jit_funding:
                                address_verification:
                                  gateway:
                                    on_file:
                                      postal_code: "94601"
                                      street_address: 2000 High St
                                    response:
                                      code: "0000"
                                      memo: Address and postal code match
                                amount: 10.0
                                method: pgfs.authorization
                                original_jit_funding_token: your-jit-funding-token
                                token: your-jit-funding-token
                                user_token: your-jit-funding-user
                          timed_out: false
                          transaction_id: your-jit-funding-token
                        jit_funding:
                          acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                          amount: 10.0
                          method: pgfs.authorization
                          token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                          user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                        source:
                          active: true
                          created_time: 2021-08-21T17:25:43Z
                          is_default_account: false
                          last_modified_time: 2021-08-21T17:25:43Z
                          name: PGFS for simulating transactions
                          token: "**********dd5f"
                          type: programgateway
                        user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                      last_modified_time: 2021-08-21T17:26:30Z
                      response:
                        code: "0000"
                        memo: Approved or completed successfully
                      state: PENDING
                      token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                      transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                    issuer_received_time: 2021-08-21T17:26:29Z
                    network: VISA
                    pos:
                      card_holder_presence: false
                      card_presence: false
                      is_recurring: false
                      pan_entry_mode: MAG_STRIPE
                      partial_approval_capable: false
                      pin_entry_mode: "TRUE"
                      purchase_amount_only: false
                      terminal_attendance: ATTENDED
                      terminal_id: TR100000
                    request_amount: 10.0
                    response:
                      code: "0000"
                      memo: Approved or completed successfully
                    settlement_date: 2021-08-21T00:00:00Z
                    state: PENDING
                    subnetwork: VISANET
                    token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                    transaction_metadata:
                      payment_channel: OTHER
                    type: authorization
                    user:
                      metadata: null
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    user_transaction_time: 2021-08-21T17:26:29Z
                end_index: 1
                is_more: true
                start_index: 0
              schema:
                $ref: "#/components/schemas/TransactionModelListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List transactions
      tags:
        - Transactions
  /transactions/fundingsource/{funding_source_token}:
    get:
      description: |-
        List transactions for a specific funding source.

        By default, this endpoint returns transactions conducted within the last 30 days.
        To return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.

        By default, `GET /transactions/fundingsource/{funding_source_token}` returns transactions having either `PENDING` or `COMPLETION` states.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getTransactionsFundingsourceFundingsourcetoken
      parameters:
        - description: The unique identifier of the funding account.
          explode: false
          in: path
          name: funding_source_token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of transactions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description:
            The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -user_transaction_time
            enum:
              - -created_time
              - created_time
              - -user_transaction_time
              - user_transaction_time
            type: string
          style: form
        - description: |-
            The starting date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The ending date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction types to include.
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: Specifies whether to return credit or debit transactions.
          explode: true
          in: query
          name: polarity
          required: false
          schema:
            enum:
              - CREDIT
              - DEBIT
              - PENDING_CREDIT
              - PENDING_DEBIT
            type: string
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description:
            If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionModelListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List transactions for a funding account
      tags:
        - Transactions
  /transactions/{token}:
    get:
      description: |-
        Retrieve a specific transaction.
        Include the `token` path parameter to identify the transaction.

        [NOTE]
        Transactions are not available in real time via this endpoint, and typically appear after 30 seconds.
        On occasion, a transaction may require up to four hours to appear.
      operationId: getTransactionsToken
      parameters:
        - description: The unique identifier of the transaction.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description:
            If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                acquirer:
                  institution_country: "840"
                  institution_id_code: "428399181"
                  retrieval_reference_number: "528294182583"
                  system_trace_audit_number: "656761"
                acquirer_fee_amount: 0.0
                acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                amount: 10.0
                approval_code: "761515"
                card:
                  metadata: null
                card_acceptor:
                  city: Berkeley
                  country_code: USA
                  mcc: "6411"
                  mid: "000000000011111"
                  name: Aegis Fleet Services
                  street_address: 111 Main St
                card_security_code_verification:
                  response:
                    code: "0000"
                    memo: Card security code match
                  type: CVV1
                card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                cardholder_authentication_data:
                  electronic_commerce_indicator: authentication_successful
                  verification_result: verified
                  verification_value_created_by: issuer_acs
                created_time: 2021-08-21T17:26:29Z
                currency_code: USD
                currency_conversion:
                  network:
                    conversion_rate: 1.0
                    dynamic_currency_conversion: false
                    original_amount: 10.0
                    original_currency_code: "840"
                duration: 622
                fraud:
                  network:
                    account_risk_score: "7"
                    transaction_risk_score: 97
                gpa:
                  available_balance: 0.0
                  balances:
                    USD:
                      available_balance: 0.0
                      credit_balance: 0.0
                      currency_code: USD
                      impacted_amount: -10.0
                      ledger_balance: 20.0
                      pending_credits: 0.0
                  credit_balance: 0.0
                  currency_code: USD
                  impacted_amount: -10.0
                  ledger_balance: 20.0
                  pending_credits: 0.0
                gpa_order:
                  amount: 10
                  created_time: 2021-08-21T17:26:30Z
                  currency_code: USD
                  funding:
                    amount: 10.0
                    gateway_log:
                      duration: 481
                      message: Approved or completed successfully
                      order_number: "1200"
                      response:
                        code: "200"
                        data:
                          - jit_funding:
                              address_verification:
                                gateway:
                                  on_file:
                                    postal_code: "94601"
                                    street_address: 2000 High St
                                  response:
                                    code: "0000"
                                    memo: Address and postal code match
                              amount: 10.0
                              method: pgfs.authorization
                              original_jit_funding_token: your-jit-funding-token
                              token: your-jit-funding-token
                              user_token: your-jit-funding-user
                      timed_out: false
                      transaction_id: your-jit-funding-token
                    source:
                      active: true
                      created_time: 2021-08-21T17:25:43Z
                      is_default_account: false
                      last_modified_time: 2021-08-21T17:25:43Z
                      name: PGFS for simulating transactions
                      token: "**********dd5f"
                      type: programgateway
                  funding_source_token: "**********dd5f"
                  jit_funding:
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10.0
                    method: pgfs.authorization
                    token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                  last_modified_time: 2021-08-21T17:26:30Z
                  response:
                    code: "0000"
                    memo: Approved or completed successfully
                  state: PENDING
                  token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                  transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                  user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                issuer_received_time: 2021-08-21T17:26:29Z
                network: VISA
                pos:
                  card_holder_presence: false
                  card_presence: false
                  is_recurring: false
                  pan_entry_mode: MAG_STRIPE
                  partial_approval_capable: false
                  pin_entry_mode: "TRUE"
                  purchase_amount_only: false
                  terminal_attendance: ATTENDED
                  terminal_id: TR100000
                request_amount: 10.0
                response:
                  code: "0000"
                  memo: Approved or completed successfully
                settlement_date: 2021-08-21T00:00:00Z
                state: PENDING
                subnetwork: VISANET
                token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                transaction_metadata:
                  payment_channel: OTHER
                type: authorization
                user:
                  metadata: null
                user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                user_transaction_time: 2021-08-21T17:26:29Z
              schema:
                $ref: "#/components/schemas/transaction_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Transaction token not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve transaction
      tags:
        - Transactions
  /transactions/{token}/related:
    get:
      description: |-
        List all transactions related to the specified transaction.

        By default, this endpoint returns transactions conducted within the last 30 days.
        To return transactions older than 30 days, you must include the `start_date` and `end_date` query parameters in your request.

        By default, this endpoint returns transactions of any state.
        To return transactions in specific states, you must include the `state` query parameter in your request.

        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getTransactionsTokenRelated
      parameters:
        - description: The unique identifier of the transaction.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: The number of transactions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description:
            The sort order index of the first resource in the returned
            array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -user_transaction_time
            enum:
              - -created_time
              - created_time
              - -user_transaction_time
              - user_transaction_time
            type: string
          style: form
        - description: |-
            The starting date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `start_date` and `end_date` fields.
          explode: true
          in: query
          name: start_date
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The ending date (or date-time) of a date range from which to return transactions.
            To return transactions for a single day, enter the same date in both the `end_date` and `start_date` fields.
          explode: true
          in: query
          name: end_date
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction types to include.
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - description: Comma-delimited list of transaction states to display.
          explode: true
          in: query
          name: state
          required: false
          schema:
            default: ALL
            type: string
          style: form
        - description: Specifies the API version for the request.
          explode: true
          in: query
          name: version
          required: false
          schema:
            type: string
          style: form
        - description:
            If `true`, the query returns additional information for diagnostic
            purposes.
          explode: true
          in: query
          name: verbose
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - acquirer:
                      institution_country: "840"
                      institution_id_code: "428399181"
                      retrieval_reference_number: "528294182583"
                      system_trace_audit_number: "656761"
                    acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    amount: 10.0
                    card:
                      metadata: null
                    card_security_code_verification:
                      response:
                        code: "0000"
                        memo: Card security code match
                      type: CVV1
                    card_token: 02cc766c-24a5-4c3b-adcf-0e5e27b09329
                    created_time: 2021-08-21T17:26:29Z
                    currency_code: USD
                    duration: 537
                    fraud:
                      network:
                        account_risk_score: "7"
                        transaction_risk_score: 97
                    gpa:
                      available_balance: 0.0
                      balances:
                        USD:
                          available_balance: 0.0
                          credit_balance: 0.0
                          currency_code: USD
                          impacted_amount: 10.0
                          ledger_balance: 20.0
                          pending_credits: 0.0
                      credit_balance: 0.0
                      currency_code: USD
                      impacted_amount: 10.0
                      ledger_balance: 20.0
                      pending_credits: 0.0
                    gpa_order:
                      amount: 10.0
                      created_time: 2021-08-21T17:26:30Z
                      funding:
                        amount: 10.0
                        currency_code: USD
                        funding_source_token: "**********dd5f"
                        gateway_log:
                          duration: 481
                          message: Approved or completed successfully
                          order_number: "1200"
                          response:
                            code: "200"
                            data:
                              jit_funding:
                                address_verification:
                                  gateway:
                                    on_file:
                                      postal_code: 94601
                                      street_address: 2000 High St
                                    response:
                                      code: "0000"
                                      memo: Address and postal code match
                                amount: 10.0
                                method: pgfs.authorization
                                original_jit_funding_token: your-jit-funding-token
                                token: your-jit-funding-token
                                user_token: your-jit-funding-user
                          timed_out: false
                          transaction_id: your-jit-funding-token
                        jit_funding:
                          acting_user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                          amount: 10.0
                          method: pgfs.authorization
                          token: 251bdc52-588a-4291-8c5d-6ded3a67e1a8
                          user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                        source:
                          active: true
                          created_time: 2021-08-21T17:25:43Z
                          is_default_account: false
                          last_modified_time: 2021-08-21T17:25:43Z
                          name: PGFS for simulating transactions
                          token: "**********dd5f"
                          type: programgateway
                        user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                      last_modified_time: 2021-08-21T17:26:30Z
                      response:
                        code: "0000"
                        memo: Approved or completed successfully
                      state: PENDING
                      token: 592b8164-a4af-45ee-ab24-13a4bb43e6b2
                      transaction_token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    issuer_payment_node: b9a60cd41a2cc1c23090ed3666bdbf1z
                    issuer_received_time: 2021-08-21T17:26:29Z
                    network: MARQETA
                    pos:
                      card_holder_presence: false
                      card_presence: false
                      is_recurring: false
                      pan_entry_mode: MAG_STRIPE
                      partial_approval_capable: false
                      pin_entry_mode: "TRUE"
                      purchase_amount_only: false
                      terminal_attendance: ATTENDED
                    preceding_related_transaction_token: 06a8fe88-58b1-4682-a8ad-96eb973e1d74
                    response:
                      code: "0000"
                      memo: Approved or completed successfully
                    state: PENDING
                    subnetwork: GATEWAY_JIT
                    token: cd22cff7-2845-4508-a916-cf89fd9edae1
                    transaction_metadata:
                      payment_channel: OTHER
                    type: gpa.credit.authorization
                    user:
                      metadata: null
                    user_token: 99f323d4-298f-4b0c-93b1-19b2d9921eb8
                    user_transaction_time: 2021-08-21T17:26:29Z
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/TransactionModelListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List related transactions
      tags:
        - Transactions
  /users:
    get:
      description: |-
        To return an array of all of a program's users, send a `GET` request to the `/users` endpoint.
        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
        To narrow your result set to users that match certain criteria, see the <<search_users,Search users>> endpoint.

        The `business_token` field is conditionally returned in the response (it cannot be set through the API).
        You can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:

        [cols="1,1,1"]
        |===
        | parent_token | business_token | Description

        | Not populated
        | Not populated
        | User does not have a parent.

        | Populated
        | Not populated
        | User's parent is a user.

        | Populated; matches `business_token`
        | Populated; matches `parent_token`
        | User's parent is a business.

        | Populated; does not match `business_token`
        | Populated; does not match `parent_token`
        | User's parent is a user and their grandparent is a business.
        |===
      operationId: getUsers
      parameters:
        - description: Number of user resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Search type.
          explode: true
          in: query
          name: search_type
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 2
                data:
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 1234 Grove Street
                    birth_date: 1991-01-01
                    city: Berkeley
                    country: USA
                    created_time: 2022-08-16T19:43:02Z
                    email: jane.doe@company.com
                    first_name: Jane
                    gender: F
                    identifications:
                      - type: SSN
                        value: "5555"
                    last_modified_time: 2022-08-16T19:43:02Z
                    last_name: Doe
                    metadata:
                      authentication_answer1: Cashier
                      authentication_answer2: Trabant
                      authentication_answer3: Blue
                      authentication_question1: What was your first job?
                      authentication_question2: What make was your first car?
                      authentication_question3: What is your favorite color?
                      notification_email: jane.doe@home.com
                      notification_language: spa
                    password: P@ssw0rd
                    phone: '"+15105551212"'
                    postal_code: "94702"
                    state: CA
                    status: ACTIVE
                    token: my_user_01
                    uses_parent_account: false
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 2345 Main Street
                    birth_date: 1992-02-02
                    city: Berkeley
                    country: USA
                    created_time: 2023-03-14T00:45:00Z
                    email: john.doe@company.com
                    first_name: John
                    gender: M
                    identifications:
                      - type: SSN
                        value: "4444"
                    last_modified_time: 2023-03-14T00:45:00Z
                    last_name: Doe
                    metadata:
                      key1: value1
                      key2: value2
                    password: my-password
                    phone: '"+15105551212"'
                    postal_code: "94702"
                    state: CA
                    status: ACTIVE
                    token: my_user_02
                    uses_parent_account: false
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/UserCardHolderListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List users
      tags:
        - Users
    post:
      description: |-
        This endpoint enables you to create a user.
        A new user's initial status depends on the <</core-api/kyc-verification, Know Your Customer (KYC) requirements>> of the program or associated <</core-api/account-holder-groups, account holder group>>.

        [cols="1,1,1,1"]
        |===
        | KYC Required | Initial User Status | User Active on Creation | User Limitations

        | Always
        | `UNVERIFIED`
        | Optional
        | Cannot load funds; cannot activate cards.

        | Conditionally
        | `LIMITED`
        | Optional
        | Restricted by rules in `accountholdergroups.pre_kyc_controls`.

        | Never
        | `ACTIVE`
        | Required
        | None.
        |===

        [NOTE]
        Use the `/usertransitions` endpoints to transition user resources between statuses and to view the history of a user's status.
        Do not set the value of the `user.active` field directly.
        For more information on status changes, see <</core-api/user-transitions#postUsertransitions, Create User Transition>>.

        To perform KYC verification on users, the user object must have the following fields configured:

        * `first_name`
        * `last_name`
        * `address1` (cannot be a PO Box)
        * `city`
        * `state`
        * `postal_code`
        * `country`
        * `birth_date`
        * `identifications`
        * `phone` (required in some cases)
        * `email` (required in some cases)

        [NOTE]
        The `identifications` requirement depends on your program's configuration.
        To determine if you should provide a full or abbreviated identification number, contact your Marqeta representative.
        KYC verification requires the full Social Security Number (SSN) of the user.

        To create a child user, you must identify the parent user or business and determine whether the child user shares an account with the parent.

        The parent must be an existing user or business.
        On the child user, set the `parent_token` field to the value of the parent's `token` field.
        If either the parent or the grandparent is a business, a `business_token` field is added to the user.
        This field's value is set to the token of either the parent or grandparent (whichever is the business).

        The `uses_parent_account` field determines whether the child shares balances with the parent (`true`) or whether the child balances are independent of the parent (`false`).
        If you do not specify a value for `uses_parent_account`, it is set to `false` by default (the user does not share the parent's balance) and returned in the response body.
        This field cannot be updated, so you must decide upon creation whether the child user shares the parent balance.

        Sharing an account with a parent user affects how the child user interacts with cards as follows:

        * A child user cannot spend funds if its parent is not active.
        * An active child user can activate cards, whether the parent is active or not.
      operationId: postUsers
      requestBody:
        content:
          application/json:
            example:
              address1: 1234 Grove Street
              birth_date: 1991-01-01
              city: Berkeley
              country: USA
              email: jane.doe@company.com
              first_name: Jane
              gender: F
              identifications:
                - type: SSN
                  value: "111234444"
              last_name: Doe
              metadata:
                authentication_answer1: Cashier
                authentication_answer2: Trabant
                authentication_answer3: Blue
                authentication_question1: What was your first job?
                authentication_question2: What make was your first car?
                authentication_question3: What is your favorite color?
                notification_email: jane.doe@home.com
                notification_language: spa
              password: P@ssw0rd
              phone: '"+15105551212"'
              postal_code: "94702"
              state: CA
              token: my_user_01
              uses_parent_account: false
            schema:
              $ref: "#/components/schemas/card_holder_model"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                address1: 1234 Grove Street
                birth_date: 1991-01-01
                city: Berkeley
                corporate_card_holder: false
                country: USA
                created_time: 2023-03-26T20:21:24Z
                email: jane.doe6@company.com
                first_name: Jane
                gender: F
                last_modified_time: 2023-03-26T20:21:24Z
                last_name: Doe
                metadata:
                  authentication_answer1: Cashier
                  authentication_answer2: Trabant
                  authentication_answer3: Blue
                  authentication_question1: What was your first job?
                  authentication_question2: What make was your first car?
                  authentication_question3: What is your favorite color?
                  notification_email: jane.doe@home.com
                  notification_language: spa
                password: P@ssw0rd
                phone: '"+15105551212"'
                ssn: "5555"
                state: CA
                status: ACTIVE
                token: my_user_01
                uses_parent_account: false
                zip: "94702"
              schema:
                $ref: "#/components/schemas/user_card_holder_response"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "412":
          content: {}
          description: Pre-condition setup issue
        "500":
          content: {}
          description: Server error
      summary: Create user
      tags:
        - Users
  /users/auth/changepassword:
    post:
      description: |-
        To change a user password, send a `POST` request to the `/users/auth/changepassword` endpoint and include the `current_password` and `new_password` in link:http://www.json.org/[JSON, window="_blank"] format in the body of the request.
        This endpoint operates in the context of a currently logged-in user.

        A successful password change returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthChangepassword
      requestBody:
        content:
          application/json:
            example:
              current_password: my_old_password
              new_password: my_new_password
            schema:
              $ref: "#/components/schemas/password_update_model"
        description: Password update object
        required: true
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Update user password
      tags:
        - Users
  /users/auth/clientaccesstoken:
    post:
      description: |-
        Each time you want to display a virtual card's sensitive data (for example, when using `marqeta.js`), you must first request a new, single-use client access token from the Marqeta platform by sending a `POST` request to the `/users/auth/clientaccesstoken` endpoint.
        Unredeemed client access tokens expire after five minutes.
      operationId: postUsersAuthClientaccesstoken
      requestBody:
        content:
          application/json:
            example:
              card_token: my_card_01
            schema:
              $ref: "#/components/schemas/client_access_token_request"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                created: 2022-07-29T12:00:00Z
                expires: 2022-07-29T12:05:00Z
                token: ewogICJ0b2tlbiI6ICI5NzIwMDkwNS00ODc0LTRkMWEtODEzMS1jMWI3NDAwNzJjM2MmYXBwbGljYXRpb25fdG9rZW49eW91cl9hcHBsaWNhdGlvbl90b2tlbiIsCiAgImFwcGxpY2F0aW9uIjogewogICAgInRva2VuIjogInlvdXJfYXBwbGljYXRpb25fdG9rZW4iLAogICAgImFjdGl2ZSI6IHRydWUsCiAgICAiY2xpZW50X2FwaV9iYXNlX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2FwaS92MSIsCiAgICAiYXNzZXRzX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2Fzc2V0cy8xLjAuMCIsCiAgICAiY2xpZW50dG9rZW5hcHBsaWNhdGlvbklkIjogIjU3MDI2OTJhMGI4ZGNlOTg1YWVmNTExMiIKICB9LAogICJhcHBsaWNhdGlvbl90b2tlbiI6IG51bGwsCiAgImV4cGlyZXMiOiAiMjAxOC0xMi0zMVQyMzo1OTo1OSswMDAwIiwKICAiY2FyZF90b2tlbiI6ICJ0b2tlbl9vZl90aGVfY2FyZF95b3VfbmVlZF90b19wcmVzZW50IiwKICAiYWNjZXNzZWQiOiBudWxsLAogICJjbGllbnR0b2tlbklkIjogIjU5MTc2Y2JlMGI4ZGNlOTg1YWVmNTEzMCIsCiAgImNyZWF0ZWQiOiAiMjAxOC0wMS0wMVQwMDowMDowMCswMDAwIgp9
              schema:
                $ref: "#/components/schemas/client_access_token_response"
          description: Created
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Create client access token
      tags:
        - Users
  /users/auth/clientaccesstoken/{token}:
    get:
      description:
        To retrieve application and card information using a client access
        token, send a `GET` request to the `/users/auth/clientaccesstoken/{token}`
        endpoint.
      operationId: getUsersAuthClientaccesstokenToken
      parameters:
        - description: Client access token.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Unique identifier of the `application` object.
          explode: true
          in: query
          name: application_token
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                created: 2022-07-29T12:00:00Z
                expires: 2022-07-29T12:05:00Z
                token: ewogICJ0b2tlbiI6ICI5NzIwMDkwNS00ODc0LTRkMWEtODEzMS1jMWI3NDAwNzJjM2MmYXBwbGljYXRpb25fdG9rZW49eW91cl9hcHBsaWNhdGlvbl90b2tlbiIsCiAgImFwcGxpY2F0aW9uIjogewogICAgInRva2VuIjogInlvdXJfYXBwbGljYXRpb25fdG9rZW4iLAogICAgImFjdGl2ZSI6IHRydWUsCiAgICAiY2xpZW50X2FwaV9iYXNlX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2FwaS92MSIsCiAgICAiYXNzZXRzX3VybCI6ICJodHRwOi8vd2lkZ2V0cy1lbnYubWFycWV0YS5jb20vY2xpZW50L2Fzc2V0cy8xLjAuMCIsCiAgICAiY2xpZW50dG9rZW5hcHBsaWNhdGlvbklkIjogIjU3MDI2OTJhMGI4ZGNlOTg1YWVmNTExMiIKICB9LAogICJhcHBsaWNhdGlvbl90b2tlbiI6IG51bGwsCiAgImV4cGlyZXMiOiAiMjAxOC0xMi0zMVQyMzo1OTo1OSswMDAwIiwKICAiY2FyZF90b2tlbiI6ICJ0b2tlbl9vZl90aGVfY2FyZF95b3VfbmVlZF90b19wcmVzZW50IiwKICAiYWNjZXNzZWQiOiBudWxsLAogICJjbGllbnR0b2tlbklkIjogIjU5MTc2Y2JlMGI4ZGNlOTg1YWVmNTEzMCIsCiAgImNyZWF0ZWQiOiAiMjAxOC0wMS0wMVQwMDowMDowMCswMDAwIgp9
              schema:
                $ref: "#/components/schemas/client_access_token_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Server error
      summary: Retrieve client access token
      tags:
        - Users
  /users/auth/login:
    post:
      description: |-
        To log in a user and return a user access token, send a `POST` request to the `/users/auth/login` endpoint and include the user details in link:http://www.json.org/[JSON, window="_blank"] format in the body of the request.

        [TIP]
        To check a user's credentials without logging out the user, call the `/users/auth/onetime` endpoint.
      operationId: postUsersAuthLogin
      requestBody:
        content:
          application/json:
            example:
              email: jane.doe@company.com
              password: P@ssw0rd
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/login_request_model"
        description: User login object
        required: false
      responses:
        "204":
          content:
            application/json:
              example:
                access_token:
                  expires: 2027-03-01T21:02:04Z
                  one_time: false
                  token: e12b1f64-1444-4aa3-83d9-347800c68e94
                user:
                  active: true
                  created_time: 2023-04-01T17:52:39Z
                  email: jane.doe@company.com
                  last_modified_time: 2023-04-01T17:52:39Z
                  password: P@ssw0rd
                  token: my_user_01
                  uses_parent_account: false
              schema:
                $ref: "#/components/schemas/login_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Log in user
      tags:
        - Users
  /users/auth/logout:
    post:
      description: |-
        To log out a user, send a `POST` request to the `/users/auth/logout` endpoint.

        A successful logout returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthLogout
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Log out user
      tags:
        - Users
  /users/auth/onetime:
    post:
      description: |-
        This endpoint returns a single-use access token.
        This type of token authorizes a single request to access API endpoints and data associated with a particular user.
        A single-use access token differs from a user access token (as returned by `POST` `/users/auth/login`) only in the number of times it can be used.

        To return a single-use access token, send a `POST` request to the `/users/auth/onetime` endpoint.
        Provide one of these sets of input data:

        * *Case #1* – Application token and user access token
        * *Case #2* – Application token, admin access token, and user token
        * *Case #3* – Application token, user's Marqeta password, and user's email address

        In each case, provide the application token as the HTTP Basic Authentication username in the request header's Authorization field.
        When applicable, provide the user access token or admin access token as the HTTP Basic Authentication password.
        When applicable, provide the user token or user's Marqeta password and email address in link:http://www.json.org/[JSON, window="_blank"] format in the request body.

        Before instantiating an embedded Marqeta widget, call this endpoint to obtain the single-use access token required as input (cases #1 and #2).

        This endpoint is also useful when you want to check a user's credentials before performing a sensitive operation without having to log out the user (case #3).

        [NOTE]
        Calling this endpoint and returning a single-use access token does not invalidate the user's current user access token.
      operationId: postUsersAuthOnetime
      requestBody:
        content:
          application/json:
            examples:
              case_one:
                summary: "*Case 1:* Authorization: Basic `my_application_token:my_user_access_token`"
                value: {}
              case_three:
                summary: "*Case 3:* Authorization: Basic `my_application_token`"
                value:
                  email: jane.doe@company.com
                  password: P@ssw0rd
              case_two:
                summary: "*Case 2:* Authorization: Basic `my_application_token:my_admin_access_token`"
                value:
                  user_token: my_user_token
            schema:
              $ref: "#/components/schemas/one_time_request_model"
        description: One-time object
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                expires: 2024-04-01T00:00:00Z
                one_time: true
                token: 697e0bde-ea52-44bd-8150-0e0f83e9625d
              schema:
                $ref: "#/components/schemas/access_token_response"
          description: Created
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Create single-use token
      tags:
        - Users
  /users/auth/resetpassword:
    post:
      description: |-
        Use this endpoint to generate a password reset token for a user.
        Send a `POST` request to the `/users/auth/resetpassword` endpoint and include the user's email address in link:http://www.json.org/[JSON, window="_blank"] format in the body of the request.
        This request generates and sends an email message containing the `user_token` and `password_reset_token` to the user's email address.
        You must customize the email message with a link that passes the `user_token` and `password_reset_token` to a web page where a subsequent request updates the password.

        A successful request returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthResetpassword
      requestBody:
        content:
          application/json:
            example:
              email: jane.doe@company.com
            schema:
              $ref: "#/components/schemas/reset_user_password_email_model"
        required: false
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Request user password reset token
      tags:
        - Users
  /users/auth/resetpassword/{token}:
    post:
      description: |-
        To reset the user's password, send a `POST` request to the `/users/auth/resetpassword/{token}` endpoint that includes a password reset token generated using the `POST /users/auth/resetpassword` operation.
        Include the `user_token` and `new_password` in link:http://www.json.org/[JSON, window="_blank"] format in the body of the request.
        Include the `password_reset_token` as a path parameter.

        A successful password reset returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthResetpasswordToken
      parameters:
        - description:
            Password reset token generated using the `POST /users/auth/resetpassword`
            operation.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              new_password: newPassword123@
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/reset_user_password_model"
        required: false
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Reset user password
      tags:
        - Users
  /users/auth/verifyemail:
    post:
      description: |-
        Send a `POST` request to the `/users/auth/verifyemail` endpoint to request an email verification token.
        No input parameters are required because this operation is performed in the context of an authenticated user.

        This initial request generates and sends an email message containing the email verification token to the cardholder's email address.
        This email message must include a link that passes the email verification token to a web page where a subsequent request verifies the email address.

        A successful request returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthVerifyemail
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Request email verification token
      tags:
        - Users
  /users/auth/verifyemail/{token}:
    post:
      description: |-
        To verify a user's email address, send a `POST` request to the `/users/auth/verifyemail/{email_verification_token}` endpoint that includes an `email_verification_token` generated using the `POST /users/auth/verifyemail` operation.
        Include the `email_verification_token` as a path parameter.

        A successful email verification returns an empty response body with a response code of `204 No Content`.
      operationId: postUsersAuthVerifyemailToken
      parameters:
        - description:
            Email verification token generated using the `POST /users/auth/verifyemail`
            operation.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Server error
      summary: Verify email address
      tags:
        - Users
  /users/lookup:
    post:
      description: |-
        To search for one or more users, send a `POST` request to the `/users/lookup` endpoint.
        Include in the message body any parameters by which you want to query.
        This endpoint supports <</core-api/field-filtering, field filtering>> and <</core-api/sorting-and-pagination, pagination>>.
      operationId: postUsersLookup
      parameters:
        - description: Number of user resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Search type.
          explode: true
          in: query
          name: search_type
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      requestBody:
        content:
          application/json:
            example:
              first_name: Jane
            schema:
              $ref: "#/components/schemas/user_card_holder_search_model"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 1234 Grove Street
                    birth_date: 1991-01-01
                    city: Berkeley
                    country: USA
                    created_time: 2023-03-16T20:26:28Z
                    email: jane.doe@company.com
                    first_name: Jane
                    gender: F
                    identifications:
                      - type: DRIVERS_LICENSE
                        value: "12345"
                    last_modified_time: 2023-03-16T20:26:29Z
                    last_name: Doe
                    metadata: {}
                    password: P@ssw0rd
                    phone: '"+15105551212"'
                    postal_code: "94702"
                    state: CA
                    status: ACTIVE
                    token: my_user_01
                    uses_parent_account: false
                end_index: 1
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/UserCardHolderListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Search users
      tags:
        - Users
  /users/{parent_token}/children:
    get:
      description: |-
        To retrieve users who are children of a parent user or business, send a `GET` request to the `/users/{parent_token}/children` endpoint.
        Include the parent's user or business token as a URL path parameter.

        The `business_token` field is conditionally returned in the response (it cannot be set through the API).
        You can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:

        [cols="1,1,1"]
        |===
        | parent_token | business_token | Description

        | Not populated
        | Not populated
        | User does not have a parent.

        | Populated
        | Not populated
        | User's parent is a user.

        | Populated; matches `business_token`
        | Populated; matches `parent_token`
        | User's parent is a business.

        | Populated; does not match `business_token`
        | Populated; does not match `parent_token`
        | User's parent is a user and their grandparent is a business.
        |===

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getUsersParenttokenChildren
      parameters:
        - description: Number of user resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Unique identifier of the parent account holder.
          explode: false
          in: path
          name: parent_token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -lastModifiedTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - account_holder_group_token: DEFAULT_AHG
                    active: true
                    address1: 123 Main Street
                    city: Oakland
                    country: USA
                    created_time: 2022-08-16T19:46:58Z
                    email: john_smith@company.com
                    first_name: John
                    gender: M
                    identifications:
                      - birth_date: 1986-04-01
                        type: SSN
                        value: "7777"
                    last_modified_time: 2022-08-16T19:46:58Z
                    last_name: Smith
                    metadata: {}
                    parent_token: my_user_01
                    password: P@55word
                    phone: '"+15101111111"'
                    postal_code: "94601"
                    state: CA
                    status: ACTIVE
                    token: child_of_parent
                    uses_parent_account: true
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/UserCardHolderListResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: List user child accounts
      tags:
        - Users
  /users/{token}:
    get:
      description: |-
        To retrieve a specific user, send a `GET` request to the `/users/{token}` endpoint.
        Include the user `token` path parameter to specify the user to return.

        The `business_token` field is conditionally returned in the response (it cannot be set through the API).
        You can use this field in conjunction with the `parent_token` field to determine whether the user has a parent or grandparent that is a business:

        [cols="1,1,1"]
        |===
        | parent_token | business_token | Description

        | Not populated
        | Not populated
        | User does not have a parent.

        | Populated
        | Not populated
        | User's parent is a user.

        | Populated; matches `business_token`
        | Populated; matches `parent_token`
        | User's parent is a business.

        | Populated; does not match `business_token`
        | Populated; does not match `parent_token`
        | User's parent is a user and their grandparent is a business.
        |===

        This endpoint supports <</core-api/field-filtering, field filtering>>.
      operationId: getUsersToken
      parameters:
        - description: Unique identifier of the user resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                address1: 1234 Grove Street
                birth_date: 1991-01-01
                city: Berkeley
                country: USA
                created_time: 2022-08-16T19:39:34Z
                email: jane.doe@company.com
                first_name: Jane
                gender: F
                identifications:
                  - type: SSN
                    value: "5555"
                last_modified_time: 2022-08-16T19:39:34Z
                last_name: Doe
                metadata:
                  authentication_answer1: Cashier
                  authentication_answer2: Trabant
                  authentication_answer3: Blue
                  authentication_question1: What was your first job?
                  authentication_question2: What make was your first car?
                  authentication_question3: What is your favorite color?
                  notification_email: jane.doe@home.com
                  notification_language: spa
                password: P@ssw0rd
                phone: '"+15105551212"'
                postal_code: "94702"
                state: CA
                status: ACTIVE
                token: my_user_01
                uses_parent_account: false
              schema:
                $ref: "#/components/schemas/user_card_holder_response"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Cardholder not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve user
      tags:
        - Users
    put:
      description: |-
        To update a specific user resource, send a `PUT` request to the `/users/{token}` endpoint.
        Include the user `token` path parameter to specify the user to update.

        To unlink a child user account from a parent account, pass a null value to the `parent_token` field of the child user resource.
      operationId: putUsersToken
      parameters:
        - description: Unique identifier of the user resource you want to update.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              address1: 4321 Grove Street
            schema:
              $ref: "#/components/schemas/UserCardHolderUpdateModel"
        description: User object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                account_holder_group_token: DEFAULT_AHG
                active: true
                address1: 4321 Grove Street
                corporate_card_holder: false
                created_time: 2023-01-29T00:12:20Z
                last_modified_time: 2023-09-23T21:41:24Z
                metadata: {}
                status: ACTIVE
                token: my_user_01
                uses_parent_account: false
              schema:
                $ref: "#/components/schemas/card_holder_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "500":
          content: {}
          description: Server error
      summary: Update user
      tags:
        - Users
  /users/{token}/ssn:
    get:
      description: |-
        To retrieve the government-issued identification number for a user, send a `GET` request to the `/users/{token}/ssn` endpoint.
        Include the `token` path parameter to specify the user whose identification number (SSN, TIN, NIN, SIN) you wish to return.
        You can indicate whether to return the full number or the last four digits only.
      operationId: getUsersTokenSsn
      parameters:
        - description: Unique identifier of the user resource.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            To return the full identification number, set to `true`.
            To return only the last four digits, set to `false`.

            If the identifications array contains only the last four digits of the identification number, the `/users/{token}/ssn` endpoint will return only the last four digits, regardless of the `full_ssn` parameter.
          explode: true
          in: query
          name: full_ssn
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                ssn: "5555"
              schema:
                $ref: "#/components/schemas/ssn_response_model"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: Retrieve user identification number
      tags:
        - Users
  /usertransitions:
    post:
      description: |-
        This endpoint enables you to change a user's status, depending on your role and the previous status change.
        By changing a user's status, you can control the user's capabilities and the setting of the `user.active` field.
        Do not set the value of the `user.active` field directly.

        [cols="2,4a,4a"]
        |===
        | user.status Field | Description | User Limitations

        | `UNVERIFIED`
        | Initial status of a new user belonging to an account holder group where KYC is always required.

        *Allowable transitions:*  +
        `ACTIVE`, `CLOSED`
        | Cannot load funds or activate cards.

        *user.active Field:*  +
        `false`

        | `LIMITED`
        | Initial status of a new user belonging to an account holder group where KYC is conditionally required.

        *Allowable transitions:*  +
        `ACTIVE`, `SUSPENDED`, `CLOSED`
        | Restricted by rules in `accountholdergroups.pre_kyc_controls`.

        *user.active Field:*  +
        `true`

        | `ACTIVE`
        | Status of a user who has passed KYC, or initial status of a new user belonging to an account holder group where KYC is never required.

        *Allowable transitions:*  +
        `SUSPENDED`, `CLOSED`, `UNVERIFIED`
        | None.

        *user.active Field:*  +
        `true`

        | `SUSPENDED`
        | The user is temporarily inactive.

        Transitioning a suspended user to the `ACTIVE` status is restricted, based on your role and the details of the previous status change.

        *Allowable transitions:*  +
        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `CLOSED`
        | Cannot load funds or activate cards.

        *user.active Field:*  +
        `false`

        | `CLOSED`
        | The user is permanently inactive.

        In general, the `CLOSED` status should be terminal.
        For exceptional cases, you can transition a user to other statuses, depending on your role and the details of the previous status change.
        Contact your Marqeta representative for more information.

        *Allowable transitions:*  +
        `ACTIVE`, `LIMITED`, `UNVERIFIED`, `SUSPENDED`
        | Cannot load funds or activate cards.

        *user.active Field:*  +
        `false`

        |===

        [NOTE]
        The Marqeta platform transitions a user's status in response to certain events.
        For example, a user in the `UNVERIFIED` status is transitioned to `ACTIVE` when the user passes KYC verification.
      operationId: postUsertransitions
      requestBody:
        content:
          application/json:
            example:
              channel: API
              reason: Activating user
              reason_code: "00"
              status: ACTIVE
              token: activate_05
              user_token: my_user_01
            schema:
              $ref: "#/components/schemas/UserTransitionRequest"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                channel: API
                created_time: 2023-03-15T00:00:00Z
                reason: Activating user
                reason_code: "00"
                status: ACTIVE
                token: activate_05
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/UserTransitionResponse"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "412":
          content: {}
          description: Pre-condition setup issue
        "500":
          content: {}
          description: Server error
      summary: Create user transition
      tags:
        - User Transitions
  /usertransitions/user/{user_token}:
    get:
      description: List all transitions for a given user.
      operationId: getUsertransitionsUserUsertoken
      parameters:
        - description: Unique identifier of the user resource.
          explode: false
          in: path
          name: user_token
          required: true
          schema:
            type: string
          style: simple
        - description: Number of user transitions to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -id
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - channel: API
                    created_time: 2023-03-15T00:00:00Z
                    reason: Activating user
                    reason_code: "00"
                    status: ACTIVE
                    token: activate_05
                    user_token: my_user_01
                end_index: 0
                is_more: false
                start_index: 0
              schema:
                $ref: "#/components/schemas/UserTransitionListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List transitions for user
      tags:
        - User Transitions
  /usertransitions/{token}:
    get:
      description: Retrieve a user transition.
      operationId: getUsertransitionsToken
      parameters:
        - description: Unique identifier of the user transition you want to retrieve.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                channel: API
                created_time: 2023-03-15T00:00:00Z
                reason: Activating user
                reason_code: "00"
                status: ACTIVE
                token: activate_05
                user_token: my_user_01
              schema:
                $ref: "#/components/schemas/UserTransitionResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "404":
          content: {}
          description: Cardholder not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve user transition
      tags:
        - User Transitions
  /webhooks:
    get:
      description: |-
        Returns an array of all webhooks.

        This endpoint supports <</core-api/field-filtering, field filtering>>, <</core-api/sorting-and-pagination, sorting>>, and <</core-api/sorting-and-pagination, pagination>>.
      operationId: getWebhooks
      parameters:
        - description: Set to `true` to return only active webhook configurations.
          explode: true
          in: query
          name: active
          required: false
          schema:
            default: false
            type: boolean
          style: form
        - description: Number of resources to retrieve.
          explode: true
          in: query
          name: count
          required: false
          schema:
            default: 5
            format: int32
            type: integer
          style: form
        - description: Sort order index of the first resource in the returned array.
          explode: true
          in: query
          name: start_index
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: |-
            Comma-delimited list of fields to return (`field_1,field_2`, and so on).
            Leave blank to return all fields.
          explode: true
          in: query
          name: fields
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Field on which to sort.
            Use any field in the resource model, or one of the system fields `lastModifiedTime` or `createdTime`.
            Prefix the field name with a hyphen (`-`) to sort in descending order.
            Omit the hyphen to sort in ascending order.
          explode: true
          in: query
          name: sort_by
          required: false
          schema:
            default: -createdTime
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              example:
                count: 1
                data:
                  - active: true
                    config:
                      basic_auth_password: my_20-to-50-character_password
                      basic_auth_username: my_username
                      custom_header:
                        my_header_name_1: my_value_1
                        my_header_name_2: my_value_2
                        my_header_name_3: my_value_3
                      secret: my_20-character-min_secret
                      url: https://my_secure_domain.com/webhook
                    created_time: 2023-02-24T23:20:28Z
                    events:
                      - "*"
                    last_modified_time: 2023-02-24T23:20:28Z
                    name: my_webhook_name
                    token: my_webhook_token
                end_index: 0
                is_more: true
                start_index: 0
              schema:
                $ref: "#/components/schemas/WebhookResponseModelListResponse"
          description: Success
        "400":
          content: {}
          description: Bad request
        "500":
          content: {}
          description: Server error
      summary: List webhooks
      tags:
        - Webhooks
    post:
      description: Creates a webhook.
      operationId: postWebhooks
      requestBody:
        content:
          application/json:
            example:
              active: true
              config:
                basic_auth_password: my_20-to-50-character_password
                basic_auth_username: my_username
                custom_header:
                  my_header_name_1: my_value_1
                  my_header_name_2: my_value_2
                secret: my_20-character-min_secret
                url: https://my_secure_domain.com/webhook
              events:
                - "*"
              name: my_webhook_name
              token: my_webhook_token
            schema:
              $ref: "#/components/schemas/webhook_request_model"
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                active: true
                config:
                  basic_auth_password: my_20-to-50-character_password
                  basic_auth_username: my_username
                  custom_header:
                    my_header_name_1: my_value_1
                    my_header_name_2: my_value_2
                  secret: my_20-character-min_secret
                  url: https://my_secure_domain.com/webhook
                created_time: 2023-02-24T23:20:28Z
                events:
                  - "*"
                last_modified_time: 2023-02-24T23:20:28Z
                name: my_webhook_name
                token: my_webhook_token
              schema:
                $ref: "#/components/schemas/webhook_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "409":
          content: {}
          description: Request already processed with a different payload
        "500":
          content: {}
          description: Server error
      summary: Create webhook
      tags:
        - Webhooks
  /webhooks/customheaders/{token}:
    put:
      description: Adds or updates a webhook's custom HTTP headers.
      operationId: putWebhooksCustomHeadersToken
      parameters:
        - description: Unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            example:
              custom_header:
                my_header_name_1: my_value_1
                my_header_name_2: my_value_2
                my_header_name_3: my_value_3
            schema:
              $ref: "#/components/schemas/WebhookUpdateCustomHeaderRequest"
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                active: true
                config:
                  basic_auth_password: my_20-to-50-character_password
                  basic_auth_username: my_username
                  custom_header:
                    my_header_name_1: my_value_1
                    my_header_name_2: my_value_2
                    my_header_name_3: my_value_3
                  secret: my_20-character-min_secret
                  url: https://my_secure_domain.com/webhook
                created_time: 2023-02-06T08:12:32Z
                events:
                  - transaction.*
                last_modified_time: 2023-02-26T22:07:23Z
                name: my_webhook_name
                token: my_webhook_01
              schema:
                $ref: "#/components/schemas/webhook_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Resource not found
        "500":
          content: {}
          description: Server error
      summary: Update webhook custom headers
      tags:
        - Webhooks
  /webhooks/{token}:
    get:
      description: Retrieves a webhook.
      operationId: getWebhooksToken
      parameters:
        - description: Unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook_response_model"
          description: Success
        "404":
          content: {}
          description: Resource not found
        "500":
          content: {}
          description: Server error
      summary: Retrieve webhook
      tags:
        - Webhooks
    put:
      description: Updates a webhook.
      operationId: putWebhooksToken
      parameters:
        - description: Unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/webhook_base_model"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook_response_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Resource not found
        "500":
          content: {}
          description: Server error
      summary: Update webhook
      tags:
        - Webhooks
  /webhooks/{token}/ping:
    post:
      description: |-
        Pings your webhook endpoint.

        Send a ping request to your webhook endpoint to validate credentials and connectivity.
        Your webhook endpoint must be configured to respond.

        === Configuring your webhook endpoint

        When the Marqeta platform receives the ping request, it sends a `POST` request containing the following body to the URL of your webhook endpoint:

        [#ping-webhook-sample]
        [source,json]
        ----
        {
          "pings": [
            {
              "token": "marqeta",
              "payload": "healthcheck"
            }
          ]
        }
        ----

        To indicate that it is functioning properly, your webhook endpoint must respond with a status code of `200` (see <</developer-guides/signature-verification, Signature Verification>> for a code example that identifies a ping request).
        The response can optionally include a link:http://www.json.org/[JSON, window="_blank"]-formatted body, for example:

        [#ping-webhook-sample-2]
        [source,json]
        ----
        {"my_endpoint_status": "alive"}
        ----

        The Marqeta platform then responds to its requestor by echoing, as-is, the response code and body received from your webhook endpoint.

        === Using the ping facility

        To ping a webhook endpoint, send a `POST` request to `/webhooks/{token}/ping` and use the `token` path parameter to specify which webhook you want to reach.
        Include an empty, link:http://www.json.org/[JSON, window="_blank"]-formatted body in the request, that is:

        [#ping-webhook-sample-3]
        [source,json]
        ----
        {}
        ----

        The following chain of actions occurs during the successful execution of a ping operation:

        . The Marqeta platform receives the ping request (`POST` to `/webhooks/{token}/ping`).
        . The Marqeta platform sends a request to your webhook endpoint.
        . Your webhook endpoint responds with a status code of "200" and an optional body.
        . The Marqeta platform responds to its requestor by echoing, as-is, the response code and body it received from your webhook endpoint.

        [NOTE]
        If the customer-hosted endpoint fails to respond within five seconds, the Marqeta platform times out the request and responds with the following message body (where `<optional message>` represents additional details you can choose to include in the response):

        [#ping-webhook-sample-4]
        [source,json]
        ----
        {
          "error_message": "Webhook operation failed " + <optional message>,
          "error_code": "422600"
        }
        ----

        Failed pings are not automatically retried.
      operationId: postWebhooksTokenPing
      parameters:
        - description: Unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                pings:
                  - my_endpoint_status: alive
              schema:
                $ref: "#/components/schemas/webhook_ping_model"
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Resource not found
        "500":
          content: {}
          description: Server error
      summary: Ping webhook
      tags:
        - Webhooks
  /webhooks/{token}/{event_type}/{event_token}:
    post:
      description: |-
        Resends an event notification to your webhook endpoint.

        Although you send this request as a `POST`, all parameters are passed in the URL and the body is empty.
        The event notification is resent to your webhook endpoint and is also returned in the response to this request.
      operationId: postWebhooksTokenEventtypeEventtoken
      parameters:
        - description: Unique identifier of the webhook.
          explode: false
          in: path
          name: token
          required: true
          schema:
            type: string
          style: simple
        - description: Specifies the type of event you want to resend.
          explode: false
          in: path
          name: event_type
          required: true
          schema:
            enum:
              - chargebacktransition
              - digitalwallettokentransition
              - cardtransition
              - usertransition
              - businesstransition
              - transaction
              - threedstransition
            type: string
          style: simple
        - description:
            Unique identifier of the event for which you want to resend
            a notification.
          explode: false
          in: path
          name: event_token
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content: {}
          description: Success
        "400":
          content: {}
          description: User input error/Bad request
        "404":
          content: {}
          description: Resource not found
        "500":
          content: {}
          description: Server error
      summary: Resend event notification
      tags:
        - Webhooks
components:
  parameters:
    countParam:
      description: Number of resources to retrieve.
      explode: true
      in: query
      name: count
      required: false
      schema:
        default: 5
        type: integer
        x-allowableValues: 1-100
      style: form
    endDateParam:
      description:
        The ending date (or date-time) of a date range from which to return
        resources, in UTC.
      explode: true
      in: query
      name: end_date
      required: false
      schema:
        description: yyyy-MM-ddThh:mm:ssZ
        format: date-time
        type: string
      style: form
    endDateParamRequired:
      description:
        The ending date (or date-time) of a date range from which to return
        resources, in UTC.
      explode: true
      in: query
      name: end_date
      required: true
      schema:
        description: yyyy-MM-ddThh:mm:ssZ
        format: date-time
        type: string
      style: form
    isActiveParam:
      description:
        A value of `true` returns active resources; `false` returns inactive
        resources.
      explode: true
      in: query
      name: is_active
      required: false
      schema:
        type: boolean
        x-allowableValues: "`true`, `false`"
      style: form
    sortByCreatedTimeParam:
      description: |-
        Field on which to sort.
        Prefix the field name with a hyphen (`-`) to sort in descending order.
        Omit the hyphen to sort in ascending order.

        *NOTE*:
        You must sort using system field names such as `createdTime`, and not by the field names appearing in response bodies such as `created_time`.
      explode: true
      in: query
      name: sort_by
      required: false
      schema:
        default: -createdTime
        enum:
          - createdTime
          - -createdTime
        type: string
      style: form
    sortByUpdatedTimeParam:
      description: |-
        Field on which to sort.
        Prefix the field name with a hyphen (`-`) to sort in descending order.
        Omit the hyphen to sort in ascending order.

        *NOTE*:
        You must sort using system field names such as `updatedTime`, and not by the field names appearing in response bodies such as `updated_time`.
      explode: true
      in: query
      name: sort_by
      required: false
      schema:
        default: -updatedTime
        enum:
          - updatedTime
          - -updatedTime
        type: string
      style: form
    startDateParam:
      description:
        The starting date (or date-time) of a date range from which to
        return resources, in UTC.
      explode: true
      in: query
      name: start_date
      required: false
      schema:
        description: yyyy-MM-ddThh:mm:ssZ
        format: date-time
        type: string
      style: form
    startDateParamRequired:
      description:
        The starting date (or date-time) of a date range from which to
        return resources, in UTC.
      explode: true
      in: query
      name: start_date
      required: true
      schema:
        description: yyyy-MM-ddThh:mm:ssZ
        format: date-time
        type: string
      style: form
    startIndexParam:
      description: Sort order index of the first resource in the returned array.
      explode: true
      in: query
      name: start_index
      required: false
      schema:
        default: 0
        format: int64
        type: integer
        x-allowableValues: 0 min
      style: form
  schemas:
    Error:
      title: Error
      type: object
      properties:
        error_code:
          type: string
        error_message:
          type: string
    CardTransactionResponse:
      title: Card Transaction Simulation Response
      type: object
      properties:
        transaction:
          $ref: '#/components/schemas/TransactionModel'
      additionalProperties: false
      description: Contains information about the transaction that was simulated.
    CardTransactionSimulation:
      type: object
      properties:
        event_type:
          type: string
          readOnly: true
          x-mq-internal: true
        cash_back_amount:
          type: number
          description: The cashback amount requested.
        is_preauthorization:
          type: boolean
          description: |-
            Indicates if the transaction is a pre-authorization.
            Set to `true` to mark the amount as an authorization only.
          default: false
          x-allowableValues: '`true` or `false`'
        force_post:
          type: boolean
          description: |-
            Set to `true` to simulate a forced clearing transaction.
            *NOTE:* If you set this field to `true`, you must also set the `original_transaction_token` field to an existing transaction token (the transaction does not need to be related).
          default: false
          x-allowableValues: '`true` or `false`'
        fees:
          type: array
          description: |-
            List of fees associated with the transaction.
            This array is returned if it exists in the resource.
          items:
            $ref: '#/components/schemas/network_fee_model'
          x-allowableValues: Existing `fees` array
        card_options:
          $ref: '#/components/schemas/card_options'
        pos:
          $ref: '#/components/schemas/pos'
        network:
          type: string
          description: Indicates which card network was used to complete the transaction.
          enum:
            - VISA
            - MASTERCARD
            - DISCOVER
            - PULSE
        sub_network:
          type: string
          description: Indicates which subnetwork used to complete the transaction.
          enum:
            - VISANET
            - VISANETDEBIT
            - VISAINTERLINK
            - VISAPLUS
            - MAESTRO
            - CIRRUS
            - MASTERCARDDEBIT
        currency_conversion:
          $ref: '#/components/schemas/currency_conversion'
        currency_code:
          type: string
          description: Currency type of the transaction.
          enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BRL
            - BSD
            - BTN
            - BWP
            - BYR
            - BZD
            - CAD
            - CDF
            - CHF
            - CLP
            - CNY
            - COP
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GGP
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - IMP
            - INR
            - IQD
            - IRR
            - ISK
            - JEP
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MUR
            - MVR
            - MWK
            - MXN
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SOS
            - SPL
            - SRD
            - STD
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TVD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - UYU
            - UZS
            - VEF
            - VND
            - VUV
            - WST
            - XAF
            - XCD
            - XDR
            - XOF
            - XPF
            - YER
            - ZAR
            - ZMW
            - ZWD
        account_funding:
          $ref: '#/components/schemas/account_funding_request'
        original_credit:
          $ref: '#/components/schemas/original_credit'
      discriminator:
        propertyName: event_type
        mapping:
          account.funding.authorization: '#/components/schemas/AccountFundingAuthorizationEvent'
          account.funding.authorization.clearing: '#/components/schemas/AccountFundingAuthorizationClearingEvent'
          account.funding.authorization.reversal: '#/components/schemas/AccountFundingAuthorizationReversalEvent'
          account.funding.auth_plus_capture: '#/components/schemas/AccountFundingAuthPlusCaptureEvent'
          account.funding.auth_plus_capture.reversal: '#/components/schemas/AccountFundingAuthPlusCaptureReversalEvent'
          authorization: '#/components/schemas/AuthorizationEvent'
          authorization.advice: '#/components/schemas/AuthorizationAdviceEvent'
          authorization.clearing: '#/components/schemas/AuthorizationClearingEvent'
          authorization.reversal: '#/components/schemas/AuthorizationReversalEvent'
          authorization.incremental: '#/components/schemas/AuthorizationIncrementalEvent'
          authorization.cashback: '#/components/schemas/AuthorizationCashbackEvent'
          authorization.quasi.cash: '#/components/schemas/AuthorizationQuasiCashEvent'
          authorization.clearing.quasi.cash: '#/components/schemas/AuthorizationClearingQuasiCashEvent'
          authorization.atm.withdrawal: '#/components/schemas/AuthorizationAtmWithdrawalEvent'
          authorization.clearing.atm.withdrawal: '#/components/schemas/AuthorizationClearingAtmWithdrawalEvent'
          refund: '#/components/schemas/RefundEvent'
          refund.authorization: '#/components/schemas/RefundAuthorizationEvent'
          refund.authorization.reversal: '#/components/schemas/RefundAuthorizationReversalEvent'
          refund.authorization.clearing: '#/components/schemas/RefundAuthorizationClearingEvent'
    AuthorizationEvent:
      required:
        - amount
        - card_token
      properties:
        card_token:
          $ref: '#/components/schemas/token'
        card_acceptor:
          required:
            - mid
          properties:
            mid:
              type: string
              description: The merchant identifier.
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
        amount:
          $ref: '#/components/schemas/amount'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AuthorizationClearingEvent:
      required:
        - amount
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AuthorizationReversalEvent:
      required:
        - amount
        - preceding_related_transaction_token
      properties:
        preceding_related_transaction_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AuthorizationAdviceEvent:
      required:
        - amount
        - preceding_related_transaction_token
      properties:
        preceding_related_transaction_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AuthorizationIncrementalEvent:
      required:
        - amount
        - preceding_related_transaction_token
      properties:
        preceding_related_transaction_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AccountFundingAuthorizationEvent:
      required:
        - amount
        - card_token
      properties:
        card_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AccountFundingAuthorizationClearingEvent:
      required:
        - amount
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AccountFundingAuthorizationReversalEvent:
      required:
        - amount
        - preceding_related_transaction_token
      properties:
        preceding_related_transaction_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AccountFundingAuthPlusCaptureEvent:
      required:
        - amount
        - card_token
      properties:
        card_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AccountFundingAuthPlusCaptureReversalEvent:
      required:
        - amount
        - preceding_related_transaction_token
      properties:
        preceding_related_transaction_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    RefundEvent:
      required:
        - amount
        - card_token
      properties:
        card_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    RefundAuthorizationEvent:
      required:
        - amount
        - card_token
      properties:
        card_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    RefundAuthorizationReversalEvent:
      required:
        - amount
        - preceding_related_transaction_token
      properties:
        preceding_related_transaction_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    RefundAuthorizationClearingEvent:
      required:
        - amount
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AuthorizationQuasiCashEvent:
      required:
        - amount
        - card_token
      properties:
        card_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          required:
            - mid
          properties:
            mid:
              type: string
              description: The merchant identifier.
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AuthorizationClearingQuasiCashEvent:
      required:
        - amount
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AuthorizationAtmWithdrawalEvent:
      required:
        - amount
        - card_token
      properties:
        card_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          required:
            - mid
          properties:
            mid:
              type: string
              description: The merchant identifier.
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AuthorizationClearingAtmWithdrawalEvent:
      required:
        - amount
      properties:
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    AuthorizationCashbackEvent:
      required:
        - amount
        - card_token
        - cash_back_amount
      properties:
        card_token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        card_acceptor:
          required:
            - mid
          properties:
            mid:
              type: string
              description: The merchant identifier.
          allOf:
            - $ref: '#/components/schemas/transaction_card_acceptor'
      allOf:
        - $ref: '#/components/schemas/CardTransactionSimulation'
    network_fraud_view:
      type: object
      properties:
        transaction_risk_score:
          type: integer
          description: |-
            Network-provided risk score for the transaction.
            A higher score indicates higher risk.
            Useful for making authorization decisions.
          format: int32
          x-allowableValues: |-
            Mastercard: 0-999
            Visa: 1-99
        transaction_risk_score_reason_code:
          type: string
          description: _(Mastercard only)_ Unique code that describes the main driver
            of the `transaction_risk_score`.
          x-allowableValues: 1-29
        transaction_risk_score_reason_description:
          type: string
          description: _(Mastercard only)_ Description of the `transaction_risk_score_reason_code`.
          x-allowableValues: 255 char max
        account_risk_score:
          type: string
          description: |-
            _(Visa only)_ Account holder risk condition code evaluated by the card network.
            A higher score indicates a greater likelihood that the card number is compromised.
          x-allowableValues: 1-9
        account_risk_score_reason_code:
          type: string
          description: _(Visa only)_ Unique code that describes the main driver of
            the `account_risk_score`.
          x-allowableValues: 255 char max
      description: Contains network-provided information about fraud determinations.
      x-allowableValues: '`account_risk_score`, `account_risk_score_reason_code`,
        `transaction_risk_score`, `transaction_risk_score_reason_code`, `transaction_risk_score_reason_description`'
    token:
      maxLength: 36
      minLength: 0
      type: string
      description: Unique identifier of the card. Useful when a single account holder
        has multiple cards.
    card_options:
      type: object
      properties:
        pin:
          maxLength: 4
          type: string
          description: The PIN for the card.
        cvv:
          maxLength: 3
          minLength: 3
          type: string
          description: The CVV2 number for the card.
        card_present:
          type: boolean
          description: A value of `true` requires that the card be present for the
            transaction.
          default: true
          x-allowableValues: '`true` or `false`'
        expiration:
          maxLength: 4
          minLength: 4
          type: string
          description: The expiration date of the card.
        billing_address:
          $ref: '#/components/schemas/card_options_billing_address'
      description: Contains attributes that govern card usage
      x-allowableValues: A valid `card_options` object.
    card_options_billing_address:
      type: object
      properties:
        first_name:
          type: string
          description: Cardholder's first name.
          x-allowableValues: To pass AVS, must match the first name on record
        last_name:
          type: string
          description: Cardholder's last name.
          x-allowableValues: To pass AVS, must match the last name on record
        address:
          type: string
          description: Cardholder's address.
          x-allowableValues: To pass AVS, must match the address on record
        zip:
          type: string
          description: Cardholder's postal code.
          x-allowableValues: To pass AVS, must match the postal code on record
      description: Used for AVS (address verification system). The address-related
        fields in this object are verified against known values.
      x-allowableValues: A valid `billing_address` object.
    currency_conversion:
      type: object
      properties:
        original_amount:
          type: number
          description: |-
            Amount of the transaction in the currency in which it originated.
            Returned if the transaction involves currency conversion.
          x-allowableValues: 'Format: 0.00'
        conversion_rate:
          type: number
          description: |-
            Conversion rate between the origination currency and the settlement currency.
            Returned when the transaction currency is different from the origination currency.
          format: float
          x-allowableValues: |-
            Current conversion rate.
            *NOTE:* A value of `0` or `1` indicates no conversion; the currencies are the same.
        original_currency_code:
          type: string
          description: The three-digit ISO 4217 currency code.
          x-allowableValues: A valid three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO
            4217 currency code, window="_blank"]
      description: |-
        Contains information from the card network about currency conversion, including the original currency of the transaction, the amount of the transaction in the origination currency, and the conversion rate.
        Returned if the transaction involves currency conversion.
      x-allowableValues: A valid `currency_conversion` object.
    account_funding_request:
      required:
        - first_name
        - funding_source
        - receiver_account_type
        - transaction_type
      type: object
      properties:
        first_name:
          type: string
          description: Account holder's first name.
          x-allowableValues: To pass AVS, must match the first name on record.
        last_name:
          type: string
          description: Account holder's last name.
          x-allowableValues: To pass AVS, must match the last name on record.
        receiver_name:
          type: string
          description: Recipient's name.
          x-allowableValues: To pass AVS, must match the name on record.
        funding_source:
          type: string
          description: Describes the source of the funding.
          enum:
            - CREDIT
            - DEBIT
            - PREPAID
            - DEPOSIT_ACCOUNT
            - CASH
            - MOBILE_MONEY_ACCOUNT
            - NON_VISA_CREDIT
        receiver_account_type:
          type: string
          description: Identifies the account type used for the funding request.
          enum:
            - OTHER
            - RTN_BANK_ACCOUNT
            - IBAN
            - CARD_ACCOUNT
            - EMAIL
            - PHONE_NUMBER
            - BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE
            - WALLET_ID
            - SOCIAL_NETWORK_ID
        transaction_purpose:
          type: string
          description: Identifies the purpose of the transaction.
          x-allowableValues: '`FAMILY_SUPPORT`, `REGULAR_LABOR_TRANSFERS`, `TRAVEL_AND_TOURISM`,
            `EDUCATION`, `MEDICAL_TREATMENT`, `EMERGENCY_NEED`, `SAVINGS`, `GIFTS`,
            `OTHER`, `SALARY`, `CROWD_LENDING`, `CRYPTO_CURRENCY`'
        transaction_type:
          type: string
          description: Describes the type of transaction.
          enum:
            - ACCOUNT_TO_ACCOUNT
            - PERSON_TO_PERSON
            - WALLET_TRANSFER
            - MONEY_TRANSFER_BY_BANK
            - BUSINESS_TO_BUSINESS
            - DISBURSEMENT
            - GOVERNMENT_DISBURSEMENT
            - GAMBLING_PAYOUT
            - LOYALTY
            - MERCHANT_DISBURSEMENT
            - ONLINE_GAMBLING_PAYOUT
            - PENSION_DISBURSEMENT
            - PREPAID_LOADS
            - CARD_BILL_PAYMENT
            - BILL_PAYMENT
            - CASH_CLAIM
            - CASH_IN
            - CASH_OUT
            - MOBILE_AIR_TIME_PAYMENT
            - MONEY_TRANSFER_BY_MERCHANT
            - FACE_TO_FACE_MERCHANT_PAYMENT
            - GOVERNMENT_PAYMENT
            - PAYMENTS_GOODS_SERVICES
            - FUNDS_TRANSFER
            - GENERAL_BUSINESS_TO_BUSINESS_TRANSFER
            - BUSINESS_TO_BUSINESS_TRANSFER
            - CASH_DEPOSIT
            - PURCHASE_REPAYMENT
      description: Information used when funding an account.
      x-allowableValues: A valid `account_funding` object.
    cardholder_balance:
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
      properties:
        available_balance:
          type: number
        balances:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/cardholder_balance'
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          type: string
          format: date-time
        ledger_balance:
          type: number
        pending_credits:
          type: number
    fee_detail:
      required:
        - fee
        - token
        - transaction_token
      type: object
      properties:
        fee:
          $ref: '#/components/schemas/fee'
        memo:
          maxLength: 99
          minLength: 1
          type: string
          description: Additional text that describes the fee transfer.
        tags:
          maxLength: 255
          minLength: 0
          type: string
          description: Descriptive metadata about the fee.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the fee.
        transaction_token:
          type: string
          description: Unique identifier of the fee transaction.
          x-allowableValues: 36 char max
    fee:
      required:
        - active
        - amount
        - created_time
        - currency_code
        - last_modified_time
        - name
        - token
      type: object
      properties:
        active:
          type: boolean
          description: Indicates whether the fee is active.
          default: false
          x-allowableValues: '`true` or `false`'
        amount:
          type: number
          description: Amount of the fee.
          x-allowableValues: 'Format: 0.00'
        created_time:
          type: string
          description: Date and time when the `fees` object was created, in UTC.
          format: date-time
          x-allowableValues: yyyy-MM-ddTHH:mm:ssZ
        currency_code:
          type: string
          description: The three-digit ISO 4217 currency code.
          x-allowableValues: A valid three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO
            4217 currency code, window="_blank"]
        last_modified_time:
          type: string
          description: Date and time when the GPA order was last modified, in UTC.
          format: date-time
          x-allowableValues: 'Format: yyyy-MM-ddTHH:mm:ssZ'
        name:
          type: string
          description: Name of the fee.
          x-allowableValues: 50 char max
        real_time_assessment:
          $ref: '#/components/schemas/real_time_fee_assessment'
        tags:
          type: string
          description: Descriptive metadata about the fee.
          x-allowableValues: 255 char max
        token:
          type: string
          description: Unique identifier of the `fees` object.
          x-allowableValues: Existing `fees` object token
      description: Contains details about the fee.
      x-allowableValues: '`active`, `amount`, `created_time`, `currency_code`, `last_modified_time`,
        `name`, `real_time_assessment`, `tags`, `token`'
    real_time_fee_assessment:
      type: object
      properties:
        domestic_enabled:
          type: boolean
          description: Enables fee assessments where the origin of the transaction
            acquirer is inside the US.
          default: false
          x-allowableValues: '`true`, `false`'
        international_enabled:
          type: boolean
          description: Enables fee assessments where the origin of the transaction
            acquirer is outside the US.
          default: false
          x-allowableValues: '`true`, `false`'
        transaction_type:
          type: string
          description: Indicates the type of transactions on which the fee is assessed.
          x-allowableValues: '`authorization`, `pindebit.atm.withdrawal`, `pindebit`'
      description: Controls the assessment of real-time fees.
      x-allowableValues: '`domestic_enabled`, `international_enabled`, `transaction_type`'
    funding:
      required:
        - source
      type: object
      properties:
        amount:
          type: number
          description: Amount of funds loaded into the GPA.
          x-allowableValues: 'Format: 0.00'
        gateway_log:
          $ref: '#/components/schemas/gateway_log_model'
        source:
          $ref: '#/components/schemas/funding_source_model'
        source_address:
          $ref: '#/components/schemas/CardholderAddressResponse'
      description: Contains funding information for the transaction, including funding
        amount, type, and time.
      xml:
        name: funding
      x-allowableValues: '`amount`, `gateway_log`, `source`, `source_address`'
    CardholderAddressResponse:
      required:
        - address_1
        - city
        - country
        - created_time
        - first_name
        - last_modified_time
        - last_name
        - postal_code
        - state
        - token
        - zip
      type: object
      properties:
        active:
          type: boolean
          description: Whether the address is active.
          default: false
          x-allowableValues: '`true`, `false`'
        address_1:
          maxLength: 255
          minLength: 0
          type: string
          description: Street address of the funding source.
        address_2:
          maxLength: 255
          minLength: 0
          type: string
          description: |-
            Additional address information for the funding source.
            This field is returned if it exists in the resource.
        business_token:
          maxLength: 36
          minLength: 1
          type: string
          description: |-
            Unique identifier of the business account holder associated with the address.
            This field is returned if it exists in the resource.
            It is required if 'user_token' is not specified.
        city:
          maxLength: 40
          minLength: 0
          type: string
          description: City of the funding source.
        country:
          maxLength: 40
          minLength: 1
          type: string
          description: Country of the funding source.
        created_time:
          type: string
          description: Date and time when the address was created, in UTC.
          format: date-time
          x-allowableValues: 'Format: yyyy-MM-ddTHH:mm:ssZ'
        first_name:
          maxLength: 40
          minLength: 0
          type: string
          description: First name of the account holder associated with the funding
            source.
        is_default_address:
          type: boolean
          description: Whether this address is the default address used by the funding
            source.
          default: false
          x-allowableValues: '`true`, `false`'
        last_modified_time:
          type: string
          description: |-
            Date and time when the address was last modified, in UTC.
            This field is returned if it exists in the resource.
          format: date-time
          x-allowableValues: 'Format: yyyy-MM-ddTHH:mm:ssZ'
        last_name:
          maxLength: 40
          minLength: 0
          type: string
          description: Last name of the account holder associated with the funding
            source.
        phone:
          maxLength: 255
          minLength: 0
          type: string
          description: |-
            Phone number of the funding source.
            This field is returned if it exists in the resource.
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
          description: Postal code of the funding source.
        state:
          maxLength: 2
          minLength: 0
          type: string
          description: |-
            Two-character state, province, or territorial abbreviation.
            For the complete list, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: Unique identifier of the `funding_source_address` object.
        user_token:
          maxLength: 36
          minLength: 1
          type: string
          description: |-
            Unique identifier of the user account holder associated with the address.
            This field is returned if it exists in the resource.
            It is required if 'business_token' is not specified.
        zip:
          maxLength: 10
          minLength: 0
          type: string
          description: United States ZIP code of the funding source.
      description: Contains information about the billing address of the funding source.
      x-allowableValues: '`active`, `address_1`, `address_2`, `business_token`, `city`,
        `country`, `created_time`, `first_name`, `is_default_address`, `last_modified_time`,
        `last_name`, `phone`, `postal_code`, `state`, `token`, `user_token`, `zip`'
    TransactionModel:
      title: TransactionModel
      required:
        - amount
        - state
        - token
        - type
      type: object
      properties:
        type:
          type: string
          description: |-
            Transaction event type.
            For more information about the `type` field, see <</core-api/event-types#_transaction_events, Transaction events>>.
          readOnly: true
          enum:
            - account.credit
            - account.debit
            - account.funding.auth_plus_capture
            - account.funding.auth_plus_capture.reversal
            - account.funding.authorization
            - account.funding.authorization.clearing
            - account.funding.authorization.reversal
            - authorization
            - authorization.advice
            - authorization.atm.withdrawal
            - authorization.cashback
            - authorization.clearing
            - authorization.clearing.atm.withdrawal
            - authorization.clearing.cashback
            - authorization.clearing.chargeback
            - authorization.clearing.chargeback.completed
            - authorization.clearing.chargeback.provisional.credit
            - authorization.clearing.chargeback.provisional.debit
            - authorization.clearing.chargeback.reversal
            - authorization.clearing.chargeback.writeoff
            - authorization.clearing.quasi.cash
            - authorization.incremental
            - authorization.quasi.cash
            - authorization.reversal
            - authorization.reversal.issuerexpiration
            - authorization.standin
            - balanceinquiry
            - billpayment
            - billpayment.clearing
            - billpayment.reversal
            - credit.adjustment
            - debit.adjustment
            - directdeposit.credit
            - directdeposit.credit.pending
            - directdeposit.credit.pending.reversal
            - directdeposit.credit.reject
            - directdeposit.credit.reversal
            - directdeposit.debit
            - directdeposit.debit.pending
            - directdeposit.debit.pending.reversal
            - directdeposit.debit.reject
            - directdeposit.debit.reversal
            - dispute.credit
            - dispute.debit
            - fee.charge
            - fee.charge.pending
            - fee.charge.pending.refund
            - fee.charge.reversal
            - funds.expire
            - gpa.credit
            - gpa.credit.authorization
            - gpa.credit.authorization.billpayment
            - gpa.credit.authorization.billpayment.reversal
            - gpa.credit.authorization.reversal
            - gpa.credit.billpayment
            - gpa.credit.chargeback
            - gpa.credit.chargeback.reversal
            - gpa.credit.issueroperator
            - gpa.credit.networkload
            - gpa.credit.networkload.reversal
            - gpa.credit.pending
            - gpa.credit.pending.reversal
            - gpa.credit.reversal
            - gpa.debit
            - gpa.debit.authorization
            - gpa.debit.issueroperator
            - gpa.debit.networkload
            - gpa.debit.pending
            - gpa.debit.pending.reversal
            - gpa.debit.reversal
            - gpa.grant
            - msa.credit
            - msa.credit.chargeback
            - msa.credit.chargeback.reversal
            - msa.credit.pending
            - msa.credit.pending.reversal
            - msa.credit.reversal
            - msa.debit
            - msa.debit.pending
            - msa.debit.pending.reversal
            - original.credit.auth_plus_capture
            - original.credit.auth_plus_capture.reversal
            - original.credit.authorization
            - original.credit.authorization.clearing
            - original.credit.authorization.reversal
            - pindebit
            - pindebit.atm.withdrawal
            - pindebit.authorization
            - pindebit.authorization.clearing
            - pindebit.authorization.reversal
            - pindebit.authorization.reversal.issuerexpiration
            - pindebit.balanceinquiry
            - pindebit.cashback
            - pindebit.chargeback
            - pindebit.chargeback.completed
            - pindebit.chargeback.provisional.credit
            - pindebit.chargeback.provisional.debit
            - pindebit.chargeback.reversal
            - pindebit.chargeback.writeoff
            - pindebit.credit.adjustment
            - pindebit.quasi.cash
            - pindebit.quasicash
            - pindebit.refund
            - pindebit.refund.reversal
            - pindebit.reversal
            - pindebit.transfer
            - programreserve.credit
            - programreserve.debit
            - pushtocard.debit
            - pushtocard.reversal
            - refund
            - refund.authorization
            - refund.authorization.advice
            - refund.authorization.clearing
            - refund.authorization.reversal
            - reward.earn
            - token.activation-request
            - token.advice
            - transfer.fee
            - transfer.peer
            - transfer.program
            - unknown
        state:
          type: string
          description: |-
            Current state of the transaction.
            For more information about the `state` field, see <</developer-guides/about-transactions#_the_transaction_lifecycle, The transaction lifecycle>>.
          enum:
            - CLEARED
            - COMPLETION
            - DECLINED
            - ERROR
            - PENDING
        token:
          maxLength: 36
          minLength: 1
          type: string
          description: |-
            Unique identifier of the transaction, formatted as a UUID.
            *NOTE:* For subsequent related transactions, this token value appears as the `preceding_related_transaction_token`.
          readOnly: true
          x-faker: datatype.uuid
        user_token:
          maxLength: 36
          minLength: 0
          type: string
          description: Unique identifier of the user who owns the account that funded
            the transaction; subsequent related transactions retain the same `user_token`
            even if the card used to complete the transaction moves to another user.
          x-faker: datatype.uuid
        card_token:
          maxLength: 36
          minLength: 0
          type: string
          description: |-
            Unique identifier of the card.
            Useful when a single account holder has multiple cards.
          x-faker: datatype.uuid
        response:
          $ref: '#/components/schemas/response'
        created_time:
          type: string
          description: |-
            Date and time when the Marqeta platform created the transaction entry, in UTC format.
            For example, when Marqeta processed the clearing record for a refund.
          format: date-time
          x-allowableValues: |-
            date-time
            *Format:*   +
            yyyy-MM-ddThh:mm:ssZ
        user_transaction_time:
          type: string
          description: |-
            Date and time when the user initiated the transaction, in UTC.
            For example, when a merchant performed the original authorization for a refund.
          format: date-time
          x-allowableValues: |-
            date-time
            *Format:*   +
            yyyy-MM-ddThh:mm:ssZ
        settlement_date:
          type: string
          description: |-
            Date and time when funds were moved for a transaction, in UTC.
            For example, in the case of a refund, when funds were credited to the cardholder.
          format: date-time
          x-allowableValues: |-
            date-time
            *Format:*   +
            yyyy-MM-ddThh:mm:ssZ
        amount:
          type: number
          description: Amount of the transaction.
          x-allowableValues: 'Format: 0.00'
          x-faker: finance.amount
        amount_to_be_released:
          type: number
          description: Amount to released following a financial advice.
          x-allowableValues: 'Format: 0.00'
        cash_back_amount:
          type: number
          description: The cashback amount requested.
          x-allowableValues: 'Format: 0.00'
        request_amount:
          type: number
          description: |-
            Merchant-requested amount, including any fees.
            This includes amount and cashback amount.
          x-allowableValues: 'Format: 0.00'
        gpa:
          type: object
          properties:
            ledger_balance:
              type: number
              description: |-
                When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.
                When using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared.
              x-allowableValues: 'Format: 0.00'
              x-faker: finance.amount
            available_balance:
              type: number
              description: |-
                Ledger balance minus any authorized transactions that have not yet cleared.
                Also known as the cardholder's purchasing power.
                When using JIT Funding, this balance is usually equal to $0.00.
              x-allowableValues: 'Format: 0.00'
              x-faker: finance.amount
            impacted_amount:
              type: number
              description: Balance change based on the amount of the transaction.
              x-allowableValues: 'Format: 0.00'
              x-faker: finance.amount
          description: Contains information about the GPA balances and pending credits.
          x-allowableValues: '`available_balance`, `balances`, `cached_balance`, `credit_balance`,
            `currency_code`, `impacted_amount`, `last_updated_time`, `ledger_balance`,
            `pending_credits`'
        currency_code:
          type: string
          description: The three-digit ISO 4217 currency code.
          x-allowableValues: A valid three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO
            4217 currency code, window="_blank"]
          x-faker: finance.currencyCode[]
        currency_conversion:
          $ref: '#/components/schemas/currency_conversion'
        preceding_related_transaction_token:
          type: string
          description: |-
            Returned for final transaction types.
            Unique identifier of the preceding related transaction.
            Useful for identifying the transaction that preceded the current one.
            For example, `authorization`, a temporary transaction type, precedes and is completed by `authorization.clearing`, a final transaction type.
            In this case, the `authorization` token is returned with this field. See <</core-api/event-types#_transaction_events, Transaction events>> for details on which transaction types are temporary or final.
          x-faker: datatype.uuid
          x-allowableValues: UUID
        network:
          type: string
          description: Indicates which card network was used to complete the transaction.
          enum:
            - VISA
            - MASTERCARD
            - PULSE
            - DISCOVER
        subnetwork:
          type: string
          description: Indicates which subnetwork used to complete the transaction.
          enum:
            - VISANET
            - VISANETDEBIT
            - VISAINTERLINK
            - VISAPLUS
            - MAESTRO
            - CIRRUS
            - MASTERCARDDEBIT
        acquirer_fee_amount:
          type: number
          description: |-
            Indicates the amount of the acquirer fee.
            Account holders are sometimes charged an acquirer fee for card use at ATMs, fuel dispensers, and so on.
          x-allowableValues: 'Format: 0.00'
        fees:
          type: array
          description: |-
            List of fees associated with the transaction.
            This array is returned if it exists in the resource.
          items:
            $ref: '#/components/schemas/network_fee_model'
          x-allowableValues: Array of existing `fees` objects
        fraud:
          $ref: '#/components/schemas/fraud_view'
        card_acceptor:
          $ref: '#/components/schemas/transaction_card_acceptor'
        account_funding:
          $ref: '#/components/schemas/account_funding_request'
        gpa_order:
          $ref: '#/components/schemas/gpa_response'
        original_credit:
          $ref: '#/components/schemas/original_credit'
      description: Contains information about the transaction.
      x-allowableValues: Existing `transaction` object
    amount:
      minimum: 0
      type: number
      description: Amount of the transaction.
    DirectDepositSimulationRequest:
      required:
        - account_number
        - amount
        - settlement_date
      type: object
      properties:
        account_number:
          type: string
          description: The account number of the user to debit or credit.
          x-allowableValues: An account number belonging to an active user with an
            active card.
        amount:
          type: number
          description: Amount of the transaction.
          x-allowableValues: |-
            Format: 0.00
            Must be greater than zero
        company_discretionary_data:
          maxLength: 20
          minLength: 0
          type: string
          description: Company-specific data provided by the direct deposit originator.
        company_entry_description:
          maxLength: 10
          minLength: 0
          type: string
          description: Company-specific data provided by the direct deposit originator.
        company_identification:
          maxLength: 10
          minLength: 0
          type: string
          description: Alphanumeric code that identifies the direct deposit originator.
        company_name:
          maxLength: 16
          minLength: 0
          type: string
          description: Name of the direct deposit originator.
        earlyPayEligible:
          type: boolean
          description: Indicates whether the transaction is eligible for early pay.
          default: false
          x-allowableValues: '`true`, `false`'
        individual_identification_number:
          maxLength: 22
          minLength: 0
          type: string
          description: Accounting number by which the recipient is known to the direct
            deposit originator.
        individual_name:
          maxLength: 35
          minLength: 0
          type: string
          description: Identity of the direct deposit recipient.
        settlement_date:
          type: string
          description: Date when the credit or debit is applied.
          format: date-time
          x-allowableValues: 'Format: yyyy-mm-ddThh:mm:ssZ'
        standard_entry_class_code:
          maxLength: 3
          minLength: 0
          type: string
          description: Three-letter code identifying the type of entry.
        token:
          maxLength: 36
          minLength: 0
          type: string
          description: |-
            Unique identifier of this direct deposit transition.
            If you do not include a token, the system generates one automatically.
            This token is used in other API calls, so rather than let the system generate a string, enter a string that you can remember.
            This value cannot be updated.
        type:
          type: string
          description: Whether funds are being debited from or credited to the account.
          readOnly: true
          enum:
            - CREDIT
            - DEBIT
    AbstractPage:
      description: Return paginated entities.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        end_index:
          description: Sort order index of the last resource in the returned array.
          format: int64
          type: integer
        is_more:
          description:
            A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          format: int64
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    AccrualType:
      description: Type of reward accrued.
      enum:
        - CASHBACK
      type: string
    ActivationActions:
      description:
        Contains information on actions that can be performed when a card
        is activated.
      properties:
        swap_digital_wallet_tokens_from_card_token:
          description: |-
            Token of the card from which to move digital wallet tokens.
            All digital wallet tokens are move from the card specified in this field to the new card.

            Not relevant when `reissue_pan_from_card_token` is set.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
          type: string
        terminate_reissued_source_card:
          default: true
          description: |-
            If you are reissuing a card, the source card is terminated by default.
            To prevent the source card from being terminated, set this field to `false`.

            Only relevant when `reissue_pan_from_card_token` is set.
          type: boolean
      type: object
    AddressRequestModel:
      description: Address associated with the business.
      properties:
        address1:
          description: |-
            Street name and number of the address.

            This field is required for KYC verification (US-based accounts only).
            Cannot perform KYC if set to a PO Box.
          maxLength: 35
          minLength: 0
          type: string
        address2:
          description: Additional address information.
          maxLength: 35
          minLength: 0
          type: string
        city:
          description: |-
            City of the address.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 35
          minLength: 0
          type: string
        country:
          description: Country of the address.
          maxLength: 40
          minLength: 0
          type: string
        postal_code:
          description: |-
            Postal code of the address.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: |-
            State of the address.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 35
          minLength: 0
          type: string
        zip:
          description: United States ZIP code of the address.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    AddressResponseModel:
      description: Address associated with the business.
      properties:
        address1:
          description: |-
            Street name and number of the address.

            This field is returned if it exists in the resource.
          maxLength: 35
          minLength: 0
          type: string
        address2:
          description: |-
            Additional address information.

            This field is returned if it exists in the resource.
          maxLength: 35
          minLength: 0
          type: string
        city:
          description: |-
            City of the address.

            This field is returned if it exists in the resource.
          maxLength: 35
          minLength: 0
          type: string
        country:
          description: |-
            Country of the address.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        postal_code:
          description: |-
            Postal code of the address.

            This field is returned if it exists in the resource.
          maxLength: 20
          minLength: 0
          type: string
        state:
          description: |-
            State, province, or territory of the address.

            This field is returned if it exists in the resource.
          maxLength: 35
          minLength: 0
          type: string
        zip:
          description: |-
            United States ZIP code of the address.

            This field is returned if it exists in the resource.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    AmountFilter:
      description:
        Contains information on the minimum and maximum amounts that the
        balance for a billing cycle can be to earn the reward.
      properties:
        greater_than:
          description:
            The minimum amount that a balance for a billing cycle can be
            to earn the reward.
          minimum: 0
          type: number
        less_than:
          description:
            The maximum amount that a balance for a billing cycle can be
            to earn the reward.
          exclusiveMinimum: true
          minimum: 0
          type: number
      type: object
    AndroidPushTokenRequestAddress:
      description: Specifies the cardholder address.
      properties:
        address1:
          description: Street address of the cardholder.
          type: string
        address2:
          description: |-
            Additional address information for the cardholder, such as a suite or apartment number.

            `Suite 600`, for example.
          type: string
        city:
          description: City of the cardholder.
          type: string
        country:
          description: |-
            Two-character link:https://www.iso.org/iso-3166-country-codes.html[ISO alpha-2 country code, window="_blank"].
            `US`, for example.
          type: string
        name:
          description: Name of the cardholder.
          type: string
        phone:
          description: Telephone number of the cardholder.
          type: string
        postal_code:
          description: |-
            Postal code of the cardholder, such as a United States ZIP code.
            `94612`, for example.
          type: string
        state:
          description: |-
            Two-character <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, state or province code>>.
            `CA`, for example.
          type: string
        zip:
          type: string
      type: object
    Application:
      description: Contains client application information.
      properties:
        access_code:
          description: Access code of the client application.
          type: string
        assets_url:
          description: URL of the client application assets.
          type: string
        client_api_base_url:
          description: Base URL of the client API.
          type: string
        environment:
          description: Client application's environment.
          type: string
        program:
          description: Name of the program on the Marqeta platform.
          type: string
        program_short_code:
          description: Short code of the program on the Marqeta platform.
          type: string
        token:
          description: Unique identifier of the `application` object.
          type: string
      type: object
    ApplicationOfCredits:
      description:
        Contains information on the cycle type and billing cycle day when
        credits are applied in the daily balance calculation.
      properties:
        cycle_type:
          $ref: "#/components/schemas/CycleType"
        day:
          description: Day of the billing cycle when credits are applied.
          maximum: 31
          minimum: 1
          type: integer
      required:
        - cycle_type
        - day
      type: object
    ApplicationResourceState:
      description: |-
        State of the application.

        If manually <</core-api/credit-applications#transitionApplication, transitioning an application state>>:

        * `application_state` is the state to which you want to transition the application status; must be `ACCEPTED` or `REJECTED`.
        * `original_status` returns the state of the application before it was manually transitioned.
        * `status` returns the state to which the application was transitioned.
      enum:
        - CREATED
        - DECISIONING
        - MANUAL_REVIEW
        - EXPIRED
        - APPROVED
        - REJECTED
        - ACCEPTED
        - DECLINED
        - ERROR
      type: string
    ApplicationTransitionRequest:
      properties:
        application_state:
          $ref: "#/components/schemas/ApplicationResourceState"
        benefits_disclosure_tracking_token:
          description: |-
            The tracking token of the Benefits Disclosure.

            This is the `tracking_token` returned in the `BENEFITS_DISCLOSURE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.

            Required if transitioning application state to `ACCEPTED`
          type: string
        card_member_agreement_tracking_token:
          description: |-
            The tracking token of the Card Member Agreement.

            This is the `tracking_token` returned in the `CARD_MEMBER_AGREEMENT` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.

            Required if transitioning application state to `ACCEPTED`
          type: string
        rewards_disclosure_post_terms_tracking_token:
          description: |-
            The tracking token of the Rewards Disclosure Post-terms.

            This is the `tracking_token` returned in the `REWARDS_DISCLOSURE_POST_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.

            Required if transitioning application state to `ACCEPTED`
          type: string
        terms_schedule_tracking_token:
          description: |-
            The tracking token of the Terms Schedule.

            This is the `tracking_token` returned in the `TERMS_SCHEDULE` object when sending a `GET` request to the `/credit/applications/files` endpoint before the user makes a decision on their approved application.

            Required if transitioning application state to `ACCEPTED`
          type: string
        token:
          description:
            Main identifier of the resource, also used as the idempotency
            key on the request.
          maxLength: 36
          type: string
      required:
        - application_state
      type: object
    ApplicationTransitionResponse:
      description: Contains information on the transition of an application's state.
      properties:
        application_token:
          description: Unique identifier of the application whose state you transitioned.
          maxLength: 36
          type: string
        created_time:
          description:
            Date and time when the application changed states on the Marqeta
            platform, in UTC.
          format: date-time
          type: string
        original_status:
          $ref: "#/components/schemas/ApplicationResourceState"
        status:
          $ref: "#/components/schemas/ApplicationResourceState"
        token:
          description: Unique identifier of the transition of an application's state.
          maxLength: 36
          type: string
      type: object
    ApplicationType:
      description: Type of application.
      enum:
        - CREDIT_DECISION
        - PREQUALIFICATION
      type: string
    ApplicationsResponse:
      properties:
        account_token:
          description: |-
            Unique identifier of the credit account for which the user is applying.

            Returned when retrieving an application in the `APPROVED` state.
          type: string
        any_non_taxable_income:
          description:
            A value of `true` indicates that the user has a non-taxable
            income source.
          type: boolean
        application_accepted_at:
          description: |-
            Date and time when the application was accepted on the Marqeta platform, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        application_canceled_at:
          description:
            Date and time when the application was canceled on the Marqeta
            platform, in UTC.
          format: date-time
          type: string
        benefits_disclosure_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Benefits Disclosure, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        bundle_token:
          description: Unique identifier of the bundle associated with the application.
          type: string
        card_membership_agreement_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Card Membership Agreement, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        created_date:
          description:
            Date and time when the application was created on the Marqeta
            platform, in UTC.
          format: date-time
          type: string
        decision_model:
          $ref: "#/components/schemas/DecisionsResponse"
        decision_token:
          description: Unique identifier of the decision made on the application.
          type: string
        device_data:
          $ref: "#/components/schemas/DeviceData"
        e_disclosure_accepted_at:
          description: |-
            Date and time when Marqeta accepted the e-Disclosure, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        error_details:
          $ref: "#/components/schemas/ErrorDetailsResponse"
        meta_data:
          description: Customer-defined additional information about the application.
          type: object
        monthly_mortgage_or_rent:
          description:
            Monthly amount of the mortgage or rent that the user currently
            pays.
          type: number
        offer_id:
          description: Unique identifier of the offer for a pre-screened applicant.
          type: string
        prequalified_offer_pre_terms_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Pre-qualified Offer Pre-terms, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        primary_income_source:
          description:
            Whether the primary income source comes from the user being
            employed, unemployed, self-employment, or another situation.
          enum:
            - EMPLOYED
            - UNEMPLOYED
            - SELF_EMPLOYED
            - OTHER
          type: string
        privacy_policy_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Privacy Policy, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        residence_type:
          description:
            Whether the user owns or rents their residence, or has another
            situation.
          enum:
            - OWN
            - RENT
            - OTHER
          type: string
        rewards_disclosure_post_terms_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Rewards Disclosure, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        rewards_disclosure_pre_terms_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Rewards Disclosure, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        soct_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Summary of Credit Terms (SOCT), in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        state:
          $ref: "#/components/schemas/ApplicationResourceState"
        term_schedule_information_accepted_at:
          description: |-
            Date and time when Marqeta accepted the Terms Schedule, in UTC.

            Returned if the user accepted their approved application.
          format: date-time
          type: string
        token:
          description: Unique identifier of the application.
          type: string
        total_annual_income:
          description: The total amount of the user's annual income.
          type: number
        type:
          $ref: "#/components/schemas/ApplicationType"
        updated_date:
          description:
            Date and time when the application was last updated on the
            Marqeta platform, in UTC.
          format: date-time
          type: string
        user_token:
          description:
            Unique identifier of the applicant, the user applying for a
            credit account.
          type: string
      required:
        - bundle_token
        - created_date
        - e_disclosure_accepted_at
        - privacy_policy_accepted_at
        - rewards_disclosure_pre_terms_accepted_at
        - soct_accepted_at
        - state
        - token
        - type
        - updated_date
        - user_token
      type: object
    ApplicationsTransitionPage:
      description: Contains information on application transitions.
      properties:
        count:
          description: Number of resources to retrieve.
          type: integer
        data:
          description: An array of application transition objects.
          items:
            $ref: "#/components/schemas/ApplicationTransitionResponse"
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description:
            A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    Authentication:
      description: Contains the cardholder's email address and password information.
      properties:
        email_verified:
          default: false
          description: Specifies whether the email address has been verified.
          type: boolean
        email_verified_time:
          description: Date and time when the email address was verified.
          format: date-time
          type: string
        last_password_update_channel:
          description: Specifies the channel through which the password was last changed.
          enum:
            - USER_CHANGE
            - USER_RESET
          type: string
        last_password_update_time:
          description: Date and time when the password was last changed.
          format: date-time
          type: string
      type: object
    BalanceType:
      description: |-
        Type of balance.

        * `PURCHASE` - The balance on purchases.
      enum:
        - PURCHASE
      type: string
    BusinessCardHolderListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of business objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/business_cardholder"
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    BusinessTransitionListResponse:
      properties:
        count:
          description: |-
            The number of resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of business transition objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/BusinessTransitionResponse"
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    BusinessTransitionRequest:
      properties:
        business_token:
          description:
            Unique identifier of the business whose status you want to
            transition.
          type: string
        channel:
          description: Mechanism by which the transaction was initiated.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        idempotentHash:
          description:
            Unique hashed value that identifies subsequent submissions
            of the business transition request.
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          description: |-
            Identifies the standardized reason for the transition:

            *00:* Object activated for the first time.

            *01:* Requested by you.

            *02:* Inactivity over time.

            *03:* This address cannot accept mail or the addressee is unknown.

            *04:* Negative account balance.

            *05:* Account under review.

            *06:* Suspicious activity was identified.

            *07:* Activity outside the program parameters was identified.

            *08:* Confirmed fraud was identified.

            *09:* Matched with an Office of Foreign Assets Control list.

            *10:* Card was reported lost.

            *11:* Card information was cloned.

            *12:* Account or card information was compromised.

            *13:* Temporary status change while on hold/leave.

            *14:* Initiated by Marqeta.

            *15:* Initiated by issuer.

            *16:* Card expired.

            *17:* Failed KYC.

            *18:* Changed to `ACTIVE` because information was properly validated.

            *19:* Changed to `ACTIVE` because account activity was properly validated.

            *20:* Change occurred prior to the normalization of reason codes.

            *21:* Initiated by a third party, often a digital wallet provider.

            *22:* PIN retry limit reached.

            *23:* Card was reported stolen.

            *24:* Address issue.

            *25:* Name issue.

            *26:* SSN issue.

            *27:* DOB issue.

            *28:* Email issue.

            *29:* Phone issue.

            *30:* Account/fulfillment mismatch.

            *31:* Other reason.
          enum:
            - "00"
            - "01"
            - "02"
            - "03"
            - "04"
            - "05"
            - "06"
            - "07"
            - "08"
            - "09"
            - "10"
            - "11"
            - "12"
            - "13"
            - "14"
            - "15"
            - "16"
            - "17"
            - "18"
            - "19"
            - "20"
            - "21"
            - "22"
            - "23"
            - "24"
            - "25"
            - "26"
            - "27"
            - "28"
            - "29"
            - "30"
            - "31"
            - "32"
          type: string
        status:
          description: Specifies the new status of the business.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        token:
          description: |-
            Unique identifier of the business transition.

            If you do not include a token, the system generates one automatically.
            This token is referenced in other API calls, so we recommend that you define a simple string that is easy to remember.
            This value cannot be updated.
          type: string
      required:
        - business_token
        - channel
        - reason_code
        - status
      type: object
    BusinessTransitionResponse:
      properties:
        business_token:
          description:
            Unique identifier of the business whose status you want to
            transition.
          type: string
        channel:
          description: Mechanism by which the transaction was initiated.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the resource was last updated, in UTC.
          format: date-time
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          description: |-
            Identifies the standardized reason for the transition:

            *00:* Object activated for the first time.

            *01:* Requested by you.

            *02:* Inactivity over time.

            *03:* This address cannot accept mail or the addressee is unknown.

            *04:* Negative account balance.

            *05:* Account under review.

            *06:* Suspicious activity was identified.

            *07:* Activity outside the program parameters was identified.

            *08:* Confirmed fraud was identified.

            *09:* Matched with an Office of Foreign Assets Control list.

            *10:* Card was reported lost.

            *11:* Card information was cloned.

            *12:* Account or card information was compromised.

            *13:* Temporary status change while on hold/leave.

            *14:* Initiated by Marqeta.

            *15:* Initiated by issuer.

            *16:* Card expired.

            *17:* Failed KYC.

            *18:* Changed to `ACTIVE` because information was properly validated.

            *19:* Changed to `ACTIVE` because account activity was properly validated.

            *20:* Change occurred prior to the normalization of reason codes.

            *21:* Initiated by a third party, often a digital wallet provider.

            *22:* PIN retry limit reached.

            *23:* Card was reported stolen.

            *24:* Address issue.

            *25:* Name issue.

            *26:* SSN issue.

            *27:* DOB issue.

            *28:* Email issue.

            *29:* Phone issue.

            *30:* Account/fulfillment mismatch.

            *31:* Other reason.
          enum:
            - "00"
            - "01"
            - "02"
            - "03"
            - "04"
            - "05"
            - "06"
            - "07"
            - "08"
            - "09"
            - "10"
            - "11"
            - "12"
            - "13"
            - "14"
            - "15"
            - "16"
            - "17"
            - "18"
            - "19"
            - "20"
            - "21"
            - "22"
            - "23"
            - "24"
            - "25"
            - "26"
            - "27"
            - "28"
            - "29"
            - "30"
            - "31"
            - "32"
          type: string
        status:
          description: Specifies the status of the business.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        token:
          description: Unique identifier of the business transition.
          type: string
      required:
        - channel
        - reason_code
        - status
        - token
      type: object
    BusinessUserCardHolderListResponse:
      properties:
        count:
          description: |-
            Number of user resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of user objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/user_card_holder_response"
          type: array
        end_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    CalculationType:
      description: |-
        Type of calculation for the reward.

        * `NET_BALANCE` - The reward is calculated based on the net balance for a billing cycle, which is the total amount spent during a billing cycle, minus any refunds or disputes.
      enum:
        - NET_BALANCE
      type: string
    CardCreateReq:
      description: Information to create a credit card.
      properties:
        activation_actions:
          $ref: "#/components/schemas/ActivationActions"
        card_product_token:
          description: Unique identifier of the associated card product.
          type: string
        expiration_offset:
          $ref: "#/components/schemas/ExpirationOffset"
        new_pan_from_card_token:
          description: |-
            Reissues the specified card (known as the "source" card) with a new primary account number (PAN).

            This field reissues a card with a new PAN from the specified source card. The source card is automatically terminated when the card is reissued with the new PAN. Use this field when reissuing a lost or stolen card.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
        reissue_pan_from_card_token:
          description: |-
            Reissues the specified card (known as the "source" card).

            This field reissues a card by copying the PAN and PIN from the specified source card to the newly created card.
            The reissued card has the same PAN and PIN as the source card but a new expiration date and CVV2 number.

            *NOTE:* By default, the source card is automatically terminated when the reissued card is activated.
            However, if your program is configured for multiple active cards, you can prevent the source card from being automatically terminated by setting the `activation_actions.terminate_reissued_source_card` field to `false`.
          maxLength: 36
          type: string
        token:
          description: Unique identifier of the credit card.
          pattern: (?!^ +$)^.+$
          type: string
        translate_pin_from_card_token:
          description: |-
            Copies the PIN from the specified card to the newly created card.

            Both cards must belong to the same user. This field is not allowed if `reissue_pan_from_card_token` is set.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
          maxLength: 36
          type: string
        user_token:
          description: Unique identifier of the credit cardholder.
          type: string
      required:
        - card_product_token
        - user_token
      type: object
    CardFulfillmentRequest:
      description:
        Specifies certain physical characteristics of a card, as well as
        shipment information.
      properties:
        card_fulfillment_reason:
          description: Reason for card fulfillment.
          enum:
            - NEW
            - LOST_STOLEN
            - EXPIRED
          type: string
        card_personalization:
          $ref: "#/components/schemas/card_personalization"
        shipping:
          $ref: "#/components/schemas/shipping"
      required:
        - card_personalization
      type: object
    CardFulfillmentResponse:
      description: Determines physical characteristics of a card and shipment information.
      properties:
        card_fulfillment_reason:
          description: Descriptive reason for the card fulfillment.
          enum:
            - NEW
            - LOST_STOLEN
            - EXPIRED
          type: string
        card_personalization:
          $ref: "#/components/schemas/card_personalization"
        shipping:
          $ref: "#/components/schemas/ShippingInformationResponse"
      required:
        - card_personalization
      type: object
    CardListResponse:
      properties:
        count:
          description: |-
            The number of resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of card objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/card_response"
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    CardProductListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of card product objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/card_product_response"
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    CardResponse:
      description: Information about a credit card.
      properties:
        account_token:
          description: Unique identifier of the associated credit account.
          maxLength: 36
          type: string
        created_time:
          description:
            Date and time when the card was created on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
        token:
          description: Unique identifier of the credit card.
          type: string
        updated_time:
          description:
            Date and time when the card was last modified on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        user_token:
          description: Unique identifier of the credit cardholder.
          type: string
      required:
        - account_token
        - created_time
        - token
        - updated_time
        - user_token
      type: object
    CardTransitionListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of card transition objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/card_transition_response"
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    CardholderAddressListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of address objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/CardholderAddressResponse"
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    ClearingModel:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: "#/components/schemas/card_acceptor_model"
        force_post:
          default: false
          type: boolean
        is_refund:
          default: false
          type: boolean
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          items:
            $ref: "#/components/schemas/network_fee_model"
          type: array
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - original_transaction_token
      type: object
    CreateApplicationsRequest:
      properties:
        any_non_taxable_income:
          description: |-
            A value of `true` indicates that the user has a non-taxable income source.

            Required when retrieving an application.
          type: boolean
        bundle_token:
          description: Unique identifier of the bundle associated with the application.
          maxLength: 36
          type: string
        device_data:
          $ref: "#/components/schemas/DeviceData"
        e_disclosure_tracking_token:
          description: |-
            The tracking token of the eDisclosure.

            This is the `tracking_token` returned in the `E_DISCLOSURE` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
          type: string
        meta_data:
          description: Customer-defined additional information about the application.
          type: object
        monthly_mortgage_or_rent:
          description: |-
            Monthly amount of the mortgage or rent that the user currently pays.

            Required when retrieving an application.
          maximum: 99999.99
          minimum: 0
          type: number
        offer_id:
          description: Unique identifier of the offer for a pre-screened applicant.
          type: string
        prequalified_offer_pre_terms_tracking_token:
          description: |-
            The tracking token of the Pre-qualified Offer Pre-Terms.

            This is the `tracking_token` returned in the `PREQUALIFICATION_PRE_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
          type: string
        primary_income_source:
          description: |-
            Whether the primary income source comes from the user being employed, unemployed, self-employment, or another situation.

            Required when retrieving an application.
          enum:
            - EMPLOYED
            - UNEMPLOYED
            - SELF_EMPLOYED
            - OTHER
          type: string
        privacy_policy_tracking_token:
          description: |-
            The tracking token of the Privacy Policy.

            This is the `tracking_token` returned in the `PRIVACY_POLICY` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
          type: string
        residence_type:
          description: |-
            Whether the user owns or rents their residence, or has another situation.

            Required when retrieving an application.
          enum:
            - OWN
            - RENT
            - OTHER
          type: string
        rewards_disclosure_pre_terms_tracking_token:
          description: |-
            The tracking token of the Rewards Disclosure Pre-terms.

            This is the `tracking_token` returned in the `REWARDS_DISCLOSURE_PRE_TERMS` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
          type: string
        soct_tracking_token:
          description: |-
            The tracking token of the Summary of Credit Terms (SOCT).

            This is the `tracking_token` returned in the `SOCT` object when sending a `GET` request to the `/credit/applications/files` endpoint before a decision on the application is made.
          type: string
        token:
          description: Unique identifier of the application.
          maxLength: 36
          type: string
        total_annual_income:
          description: |-
            The total amount of the user's annual income.

            Required when retrieving an application.
          maximum: 9.999999999E7
          minimum: 0
          type: number
        type:
          $ref: "#/components/schemas/ApplicationType"
        user_token:
          description:
            Unique identifier of the applicant, the user applying for a
            credit account.
          maxLength: 36
          type: string
      required:
        - any_non_taxable_income
        - bundle_token
        - e_disclosure_tracking_token
        - monthly_mortgage_or_rent
        - primary_income_source
        - privacy_policy_tracking_token
        - residence_type
        - soct_tracking_token
        - total_annual_income
        - user_token
      type: object
    CurrencyCode:
      default: USD
      description:
        A valid three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO
        4217 currency code, window="_blank"]
      enum:
        - USD
      type: string
    CycleType:
      description: |-
        Type of cycle.

        * `BEGINNING_REVOLVING` - Account is beginning to revolve and just started carrying a balance
        from the previous month.
        * `REVOLVING` - Account is revolving and has been carrying a balance from month to month for more than one month.
        * `END_REVOLVING` - Account is no longer revolving and the previous month's balance is paid off.
        * `TRANSACTING` - Account is not revolving and the balance is paid off each month.
      enum:
        - BEGINNING_REVOLVING
        - REVOLVING
        - END_REVOLVING
        - TRANSACTING
      type: string
    DDARequest:
      properties:
        dda:
          type: string
      required:
        - dda
      type: object
    DecisionsResponse:
      allOf:
        - $ref: "#/components/schemas/PostDecisionsResponse"
      description: |-
        Contains information on the decision model returned by the issuing bank if a decision has been rendered.

        Returned when retrieving an application after a decision has been rendered.
      properties:
        adverse_action_template_code:
          description: |-
            Indicates the version of the Notice of Adverse Action (NOAA) template used.
            Can have these possible values:

            * `AA0` - score denial with score disclosure
            * `AA1` - individual reason with score disclosure
            * `AA2` - individual reason without score disclosure
            * `AA3` - locked and frozen
            * `AA4` - fraud related
          type: string
        card_product_level:
          description: The tier of the card product.
          enum:
            - PREMIUM
            - TRADITIONAL
          type: string
        created_date:
          description:
            Date and time when the decision model was created on the Marqeta
            platform, in UTC.
          format: date-time
          type: string
        credit_limit:
          description:
            The maximum line of credit extended to the user, also the maximum
            balance the credit account can carry.
          format: int32
          type: integer
        credit_score:
          description: The user's credit score.
          format: int32
          type: integer
        credit_score_date:
          description: Date and time when the credit score went into effect.
          format: date
          type: string
        decision_date:
          description:
            Date and time when the decision on the application was rendered,
            in UTC.
          format: date-time
          type: string
        denial_reasons:
          description: An array of reasons that explain why the application was declined.
          example:
            - CREDIT SCORE BELOW MINIMUM
            - PRIOR BANKRUPTCY
          items:
            type: string
          type: array
        expire_date:
          description: Date when the decision model expires.
          format: date
          type: string
        margin:
          description:
            Number of percentage points added to the prime rate, used to
            calculate the purchase APR.
          format: decimal
          type: number
        prime_rate:
          description: The current prime rate set by the Fed.
          format: decimal
          type: number
        purchase_apr:
          description: The purchase APR approved for the user.
          format: decimal
          type: number
        received_best_rate:
          description: |-
            A value of `true` indicates that the user received the credit product's best APR.

            If `false`, you must display to the user the following: `score_factors`, `credit_score`, `credit_score_date`, `credit_bureau`, `score_range`.
          type: boolean
        score_factors:
          description:
            Factors that the bureau used to determine the user's credit
            score.
          example:
            - TOO FEW ACCOUNTS CURRENTLY PAID AS AGREED
            - LACK OF RECENT INSTALLMENT LOAN INFORMATION
            - TOO MANY ACCOUNTS WITH BALANCES
            - LENGTH OF TIME REVOLVING ACCOUNTS HAVE BEEN ESTABLISHED
          items:
            type: string
          type: array
        score_range:
          description: The range in which the user's credit score falls.
          type: string
      type: object
    DestinationType:
      description: |-
        Destination of the reward redemption.

        * `INVESTMENT` - The redemption is paid into an investment account.

        * `WALLET` - The redemption is paid into a digital wallet.

        * `ACH` - The redemption is paid into an ACH account.

        Required for external redemptions.
      enum:
        - INVESTMENT
        - WALLET
        - ACH
      type: string
    DeviceData:
      description: |-
        Contains information on user's device fingerprint.
        Usually obtained through a component embedded in the application.

        Required if application `type` is `PREQUALIFICATION`.
      properties:
        data:
          description: The data generated by the embedded component.
          type: string
        provider:
          description: The provider of the embedded component.
          type: string
      type: object
    DigitalWalletTokenListResponse:
      properties:
        count:
          description: |-
            Number of resources returned.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of digital wallet token resources.

            Resources are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/digital_wallet_token"
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    DigitalWalletTokenTransitionListResponse:
      properties:
        count:
          description: |-
            Number of resources returned.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of digital wallet token transition resources.

            Resources are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/digital_wallet_token_transition_response"
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    DisputeCategory:
      description: Category to which the dispute belongs.
      enum:
        - FRAUD
        - AUTH
        - PROCESSING_ERROR
        - CONSUMER_DISPUTE
      type: string
    DisputeCreateReq:
      description: Information about a transaction dispute creation request.
      properties:
        amount:
          description: |-
            Amount of the dispute.
            Max value is equal to the value of the original transaction.
          minimum: 0.01
          type: number
        category:
          $ref: "#/components/schemas/DisputeCategory"
        ledger_entry_token:
          description:
            Unique identifier of the journal entry (`authorization.clearing`
            type only) in dispute.
          format: string
          type: string
        notes:
          description:
            Additional information on the dispute (for example, a reason
            for the dispute).
          format: string
          maxLength: 750
          type: string
        token:
          description: Unique identifier of the dispute.
          format: string
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - amount
        - category
        - ledger_entry_token
      type: object
    DisputeModel:
      description: Contains information about a disputed transaction.
      properties:
        case_management_identifier:
          description: The unique identifier of the dispute case.
          type: string
        reason:
          description: The reason for the dispute.
          type: string
      type: object
    DisputeResponse:
      description: Information about a transaction dispute response.
      properties:
        account_token:
          description:
            Unique identifier of the credit account on which the dispute
            was created.
          format: string
          maxLength: 36
          type: string
        amount:
          description: Amount of the dispute.
          type: number
        category:
          $ref: "#/components/schemas/DisputeCategory"
        created_time:
          description:
            Date and time when the dispute was created on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
        ledger_entry_token:
          description:
            Unique identifier of the journal entry (`authorization.clearing`
            type only) in dispute.
          format: string
          type: string
        notes:
          description:
            Additional information on the dispute (for example, a reason
            for the dispute).
          format: string
          type: string
        resolved_at:
          description:
            Date and time when the dispute was resolved and no longer in
            `ACTIVE` status.
          format: date-time
          type: string
        status:
          $ref: "#/components/schemas/DisputeStatus"
        token:
          description: Unique identifier of the dispute.
          format: string
          type: string
        updated_time:
          description:
            Date and time when the dispute was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
      required:
        - account_token
        - amount
        - category
        - created_time
        - ledger_entry_token
        - status
        - token
        - updated_time
      type: object
    DisputeResponsePage:
      description: Return paginated disputes.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more disputes on a credit account.
          items:
            $ref: "#/components/schemas/DisputeResponse"
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description:
            A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    DisputeStatus:
      description: |-
        Status of the dispute.

        * `ACTIVE` - The dispute is active and awaiting resolution.
        * `REVERSED` - The dispute has been reversed and is no longer active.
        * `AH_WON` - The account holder won the dispute.
        * `AH_LOST` - The account holder lost the dispute.
      enum:
        - ACTIVE
        - REVERSED
        - AH_WON
        - AH_LOST
      type: string
    DisputeTransitionReq:
      description: Information about a transaction dispute update request.
      properties:
        amount:
          description: Updated amount of the dispute, based on the resolution.
          type: number
        notes:
          description:
            Additional information on the dispute update (for example,
            a reason for the dispute update).
          format: string
          maxLength: 750
          type: string
        status:
          $ref: "#/components/schemas/DisputeStatus"
        token:
          description: Unique identifier of the dispute update.
          type: string
      required:
        - amount
        - status
      type: object
    DisputeTransitionResponse:
      description: Information about a transaction dispute update request.
      properties:
        account_token:
          description:
            Unique identifier of the credit account on which the dispute
            was updated.
          type: string
        amount:
          description: Amount of the updated dispute, based on the resolution.
          type: number
        created_time:
          description:
            Date and time when the dispute update was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        notes:
          description:
            Additional information on the dispute update (for example,
            a reason for the dispute update).
          format: string
          maxLength: 750
          type: string
        status:
          $ref: "#/components/schemas/DisputeStatus"
        token:
          description: Unique identifier of the dispute update.
          type: string
      required:
        - account_token
        - amount
        - created_time
        - status
        - token
      type: object
    DynamicMccType:
      description: Type of dynamic MCC.
      enum:
        - HIGHEST_SPEND
      type: string
    ErrorDetailsResponse:
      description: Contains details on an application error.
      properties:
        application_token:
          description: Unique identifier of the application that resulted in an error.
          maxLength: 36
          type: string
        message:
          description: Message describing the error.
          type: string
        token:
          description: Unique identifier of the error details.
          maxLength: 36
          type: string
        type:
          description: Type of error.
          enum:
            - VALIDATION
            - TIMEOUT
            - UPSTREAM
            - DOWNSTREAM
            - UNKNOWN
          type: string
      required:
        - application_token
        - message
        - token
        - type
      type: object
    ExpandObjects:
      enum:
        - DEVICE_DATA
        - INCLUDE_DECISION
        - INCLUDE_ERROR
      type: string
    ExpirationOffset:
      description: |-
        Contains information on how long after the date of issue for when the cards are valid.

        If this field is not specified, the card uses the `config.card_life_cycle.expiration_offset` of the bulk card order or card product as appropriate.
      properties:
        unit:
          description: The units for the `value` field.
          type: string
        value:
          description: |-
            Specifies the number of time units (as defined by the `unit` field in this object) that this card is valid.
            In other words, cards expire `value` x `unit` after the date of issue.

            This number is rounded as follows:

            * *YEARS* - Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.

            * *MONTHS* - Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.

            * *DAYS* - Rounds up to the last second of the day of expiration.

            * *HOURS*, *MINUTES*, *SECONDS* - No rounding.
          type: integer
      type: object
    FeeListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            An array of fee objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/fee_response"
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    FeeMethod:
      description: Method used to calculate the fee value.
      enum:
        - FLAT
      type: string
    FeeType:
      description: |-
        Type of fee.

        *NOTE:*
        Only `RETURNED_PAYMENT_FEE`, `LATE_PAYMENT_FEE`, `ANNUAL_FEE`, and `MONTHLY_FEE` are currently supported.
        Do not pass other fees types.
      enum:
        - FOREIGN_TRANSACTION_FEE
        - OVER_LIMIT_FEE
        - LATE_PAYMENT_FEE
        - RETURNED_PAYMENT_FEE
        - CARD_REPLACEMENT_FEE
        - MINIMUM_INTEREST_FEE
        - MINIMUM_INTEREST_FEE_REVERSAL
        - ANNUAL_FEE
        - MONTHLY_FEE
      type: string
    FileLinks:
      description: Contains links to the file in different formats.
      properties:
        html:
          description: Link to the HTML version of the file.
          type: string
        json:
          description: Link to the JSON version of the file.
          type: string
        pdf:
          description: Link to the PDF version of the file.
          type: string
      type: object
    FileResponse:
      properties:
        file_type:
          $ref: "#/components/schemas/FileType"
        links:
          $ref: "#/components/schemas/FileLinks"
        tracking_token:
          description: |-
            Unique identifier used to acknowledge that the file has been disclosed to the applicant.

            If the file was already disclosed, a null value is returned.

            *NOTE*: The tracking token is only valid for 14 calendar days.
          type: string
      required:
        - file_type
        - links
      type: object
    FileType:
      description: |-
        Type of file.

        * `SOCT` - The Summary of Credit Terms (SOCT), which outlines the interest rates, interest charges, and fees associated with the credit account being offered to the user.
        * `REWARDS_DISCLOSURE_PRE_TERMS` - The Rewards Disclosure Pre-terms, which discloses detailed information about the rewards program on the credit account being offered to the user before a decision is rendered on their application.
        * `REWARDS_DISCLOSURE_POST_TERMS` - The Rewards Disclosure Post-terms, which discloses detailed information about the rewards program on the user's credit account if their application is approved.
        * `BENEFITS_DISCLOSURE` - The Benefits Disclosure, which which is given to a user if their application is approved and discloses detailed information about the benefits on the user's credit account.
        * `CARD_MEMBER_AGREEMENT` - The Card Member Agreement, which specifies the terms and conditions of the user's credit account, including the interest rates, interest charges, fees, minimum payment calculations, and more.
        * `PRIVACY_POLICY` - The Privacy Policy, which explains how the information on the user's application is collected, handled, and processed.
        * `E_DISCLOSURE` - The eDisclosure, which states that the user has agreed to receive disclosures electronically.
        * `TERMS_SCHEDULE` - The Terms Schedule, which is given to a user if their application is approved and specifies the interest rate details on the user's credit account.
        * `NOAA` - The Notice of Adverse Action (NOAA), which is given to a user if their application is declined and informs them of the specific reasons why they were denied a credit account.
      enum:
        - SOCT
        - REWARDS_DISCLOSURE_PRE_TERMS
        - REWARDS_DISCLOSURE_POST_TERMS
        - BENEFITS_DISCLOSURE
        - CARD_MEMBER_AGREEMENT
        - PRIVACY_POLICY
        - E_DISCLOSURE
        - TERMS_SCHEDULE
        - NOAA
      type: string
    FulfillmentAddressResponse:
      description: Specifies a fulfillment shipping or return address.
      properties:
        address1:
          description: |-
            Number and street of the address.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: |-
            Additional address information.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        city:
          description: |-
            City of the address.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: |-
            Country of the address.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        first_name:
          description: |-
            First name of the addressee.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        last_name:
          description: |-
            Last name of the addressee.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        middle_name:
          description: |-
            Middle name of the addressee.

            This field is returned if it exists in the resource.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: |-
            Telephone number of the addressee.

            This field is returned if it exists in the resource.
          maxLength: 20
          minLength: 0
          type: string
        postal_code:
          description: |-
            Postal code of the address.

            This field is returned if it exists in the resource.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: |-
            State or province of the address.

            This field is returned if it exists in the resource.
          maxLength: 32
          minLength: 0
          type: string
        zip:
          description: |-
            United States ZIP code of the address.

            This field is returned if it exists in the resource.
          maxLength: 10
          minLength: 0
          type: string
      type: object
    FulfillmentRequest:
      description:
        Specifies certain physical characteristics of a card, as well as
        bulk shipment information.
      properties:
        card_personalization:
          $ref: "#/components/schemas/card_personalization"
        shipping:
          $ref: "#/components/schemas/shipping"
      required:
        - card_personalization
      type: object
    FulfillmentResponse:
      description: |-
        Specifies certain physical characteristics of a card, as well as bulk shipment information.

        This object is returned if it exists in the resource.
      properties:
        card_personalization:
          $ref: "#/components/schemas/card_personalization"
        shipping:
          $ref: "#/components/schemas/ShippingInformationResponse"
      required:
        - card_personalization
      type: object
    IdentificationRequestModel:
      description: Contains identifications associated with the cardholder.
      properties:
        expiration_date:
          description: Expiration date of the identification, if applicable.
          type: string
        type:
          description: |-
            Type of identification.

            *NOTE:* Full Social Security Number (SSN) is required for US-based cardholder KYC verification.
            Nine digits only, no delimiters.
            `123456789`, for example.
          enum:
            - SSN
            - TIN
            - SIN
            - NIN
            - PASSPORT_NUMBER
            - DRIVERS_LICENSE
            - BUSINESS_NUMBER
            - BUSINESS_TAX_ID
            - TAXPAYER_REFERENCE
          readOnly: true
          type: string
        value:
          description: Number associated with the identification.
          readOnly: true
          type: string
      required:
        - type
      type: object
    IdentificationResponseModel:
      description: Contains identifications associated with the cardholder.
      properties:
        expiration_date:
          description: Expiration date for the identification, if applicable.
          readOnly: true
          type: string
        type:
          description: Type of identification.
          enum:
            - SSN
            - TIN
            - SIN
            - NIN
            - PASSPORT_NUMBER
            - DRIVERS_LICENSE
            - BUSINESS_NUMBER
            - BUSINESS_TAX_ID
            - TAXPAYER_REFERENCE
          readOnly: true
          type: string
        value:
          description: Number associated with the identification.
          readOnly: true
          type: string
      type: object
    ImagesCarrier:
      description: Specifies personalized images that appear on the card carrier.
      properties:
        message_1:
          description: Specifies a custom message that appears on the card carrier.
          type: string
        name:
          description: Specifies a PNG image to display on the card carrier.
          type: string
      type: object
    InterestCalculation:
      description: Contains the configurations for interest calculation.
      properties:
        application_of_credits:
          $ref: "#/components/schemas/ApplicationOfCredits"
        day_count:
          description: Day-count convention.
          enum:
            - ACTUAL
          type: string
        exclude_tran_types:
          default:
            - ANNUAL_FEE
            - MONTHLY_FEE
            - LATE_PAYMENT_FEE
            - CASH_BACK_STATEMENT_CREDIT
          description:
            One or more transactions that are excluded from current billing
            period's interest charge, but included in next.
          items:
            enum:
              - LATE_PAYMENT_FEE
              - ANNUAL_FEE
              - MONTHLY_FEE
              - CASH_BACK_STATEMENT_CREDIT
              - RETURNED_PAYMENT_FEE
            type: string
          type: array
        grace_days_application:
          description:
            Determines the last day of grace period based on which interest
            charges are calculated.
          enum:
            - NEXT_CYCLE_DATE
          type: string
        interest_application:
          default:
            - PRINCIPAL
            - FEES
          description: One or more balance types on which interest is applied.
          items:
            enum:
              - PRINCIPAL
              - FEES
              - INTEREST
            type: string
          minItems: 1
          type: array
        interest_on_grace_reactivation:
          $ref: "#/components/schemas/InterestOnGraceReactivationEnum"
        method:
          description: Method of interest calculation.
          enum:
            - AVG_DAILY_BALANCE_WITH_NEW_TRANSACTIONS
          type: string
        minimum_interest:
          description:
            When interest is applied, this value determines the minimum
            amount of interest that can be charged.
          maximum: 9.9999999999999E11
          minimum: 0
          type: number
      required:
        - application_of_credits
        - day_count
        - grace_days_application
        - interest_application
        - interest_on_grace_reactivation
        - method
        - minimum_interest
      type: object
    InterestOnGraceReactivationEnum:
      description:
        Determines whether to charge or waive interest for the billing
        period when the balance is paid off.
      enum:
        - ACCRUE_FULL_CYCLE
        - ACCRUE_PAYMENT_DATE
        - WAIVE
      type: string
    MccDynamicFilter:
      description:
        Contains information on the dynamic merchant category code (MCC)
        for a reward.
      properties:
        includes:
          description: One or more dynamic MCCs.
          items:
            $ref: "#/components/schemas/DynamicMccType"
          minItems: 1
          type: array
      required:
        - includes
      type: object
    Method:
      description: |-
        Method, either a flat amount or a percentage.

        *NOTE:*
        Only `FLAT` is currently supported.
      enum:
        - PERCENTAGE
        - FLAT
      type: string
    PTCAddress:
      properties:
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          maxLength: 3
          minLength: 3
          type: string
        county:
          maxLength: 3
          minLength: 3
          type: string
        line1:
          maxLength: 255
          minLength: 1
          type: string
        line2:
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          type: string
        state:
          type: string
      required:
        - city
        - county
        - line1
        - postal_code
        - state
      type: object
    PTCPhone:
      properties:
        country_code:
          type: string
        number:
          maxLength: 14
          minLength: 4
          type: string
      required:
        - number
      type: object
    PTCSoftDescriptor:
      properties:
        address:
          $ref: "#/components/schemas/PTCAddress"
        email:
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
        phone:
          $ref: "#/components/schemas/PTCPhone"
      required:
        - address
        - name
      type: object
    PaymentAllocationOrderEnum:
      description:
        Ordered list of balance types to which payments are allocated,
        from first to last.
      enum:
        - INTEREST
        - FEES
        - PRINCIPAL
      type: string
    PaymentCreateReq:
      description:
        Created when a user pays a portion or all of their statement balance.
        This is for immediate payments only; Once set to `ACTIVE`, cannot be edited
        or deleted.
      properties:
        amount:
          description: Amount of the payment.
          minimum: 0
          type: number
        currency_code:
          $ref: "#/components/schemas/CurrencyCode"
        description:
          description: Description of the payment.
          type: string
        impact_time:
          description:
            Date and time when the payment impacts the account balance
            and fee calculations.
          format: date-time
          type: string
        metadata:
          description:
            Customer-defined additional information about the payment (for
            example, a check number).
          type: string
        method:
          description: Method of payment.
          enum:
            - ACH
            - CHECK
            - DEBIT
            - CASH
          type: string
        payment_source_token:
          description: Unique identifier of the payment source. Required for ACH payments.
          type: string
        token:
          description: Unique identifier of the payment.
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - amount
        - currency_code
        - description
        - method
      type: object
    PaymentDetailResponse:
      description: Response containing payment details with transition history
      properties:
        account_token:
          description:
            Unique identifier of the credit account on which the payment
            is made.
          maxLength: 36
          type: string
        amount:
          description: Total amount of the payment.
          minimum: 0
          type: number
        created_time:
          description:
            Date and time when the payment was created on Marqeta's credit
            platform, in UTC.
          format: date-time
          type: string
        currency_code:
          $ref: "#/components/schemas/CurrencyCode"
        description:
          description: Description of the payment.
          type: string
        hold_days:
          default: 0
          description:
            After a payment completes, the number of days to hold the available
            credit on the account before increasing it.
          type: integer
        hold_end_time:
          description: Date and time when the available credit hold is released.
          format: date-time
          type: string
        is_manually_released:
          default: false
          description:
            Whether the available credit hold was manually released for
            this payment.
          type: boolean
        metadata:
          description:
            Customer-defined additional information about the payment (for
            example, a check number).
          type: string
        method:
          description: Method of payment.
          enum:
            - ACH
            - CHECK
            - DEBIT
            - CASH
          type: string
        on_hold:
          default: false
          description: Whether the available credit is on hold for this payment.
          type: boolean
        payment_schedule_token:
          description: Unique identifier of the payment schedule.
          type: string
        payment_source_token:
          description: Unique identifier of the payment source. Required for ACH payments.
          type: string
        refund_details:
          $ref: "#/components/schemas/RefundDetailsResponse"
        returned_details:
          $ref: "#/components/schemas/ReturnedDetails"
        status:
          $ref: "#/components/schemas/PaymentStatus"
        token:
          description: |-
            Unique identifier of the payment.

            If in the `detail_object`, unique identifier of the detail object.
          type: string
        transitions:
          description:
            Contains one or more `transitions` objects, which contain information
            on a payment status transition.
          items:
            $ref: "#/components/schemas/PaymentTransitionResponse"
          type: array
        updated_time:
          description:
            Date and time when the payment was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
      required:
        - account_token
        - amount
        - created_time
        - currency_code
        - description
        - hold_days
        - method
        - status
        - token
        - transitions
        - updated_time
      type: object
    PaymentScheduleAmountCategory:
      description: A category used to determine the actual payment amount.
      enum:
        - FIXED
        - MINIMUM_PAYMENT
        - REMAINING_STATEMENT_BALANCE
        - CURRENT_BALANCE
      type: string
    PaymentScheduleCreateReq:
      description: Information to create a payment schedule.
      properties:
        amount:
          description: |-
            Amount of the payment.

            Required if `amount_category` is `FIXED`.
          type: number
        amount_category:
          $ref: "#/components/schemas/PaymentScheduleAmountCategory"
        currency_code:
          $ref: "#/components/schemas/CurrencyCode"
        description:
          description: Description of the payment schedule.
          maxLength: 255
          type: string
        frequency:
          $ref: "#/components/schemas/PaymentScheduleFrequency"
        next_payment_impact_date:
          description: |-
            The date to make a one-time payment.

            Required if frequency is `ONCE`.
          format: date
          type: string
        payment_day:
          description: |-
            Day on which monthly payments are made.

            Required if `frequency` is `MONTHLY`.
          enum:
            - PAYMENT_DUE_DAY
          type: string
        payment_source_token:
          description: Unique identifier of the payment source.
          type: string
        token:
          description: Unique identifier of the payment schedule.
          maxLength: 36
          pattern: (?!^ +$)^.+$
          type: string
      required:
        - amount_category
        - currency_code
        - frequency
        - payment_source_token
      type: object
    PaymentScheduleFrequency:
      description: Defines how often to make a scheduled payment.
      enum:
        - ONCE
        - MONTHLY
      type: string
    PaymentSchedulePage:
      description: Returns paginated information for multiple payment schedules.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: List of payment schedules.
          items:
            $ref: "#/components/schemas/PaymentScheduleResponse"
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description:
            A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PaymentScheduleResponse:
      description: A future one-time or recurring payment schedule.
      properties:
        account_token:
          description:
            Unique identifier of the credit account on which the payment
            schedule is made.
          type: string
        amount:
          description: |-
            Amount of the payment.

            Returned if the `amount_category` is `FIXED`.
          nullable: true
          type: number
        amount_category:
          $ref: "#/components/schemas/PaymentScheduleAmountCategory"
        created_time:
          description:
            Date and time when the payment schedule was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        currency_code:
          $ref: "#/components/schemas/CurrencyCode"
        description:
          description: Description of the payment schedule.
          type: string
        frequency:
          $ref: "#/components/schemas/PaymentScheduleFrequency"
        next_payment_impact_date:
          description: |-
            The date to make a one-time payment.

            Returned if `frequency` is `ONCE`.
          format: date
          type: string
        payment_day:
          description: |-
            Day on which monthly payments are made.

            Returned if the `frequency` is `MONTHLY`.
          enum:
            - PAYMENT_DUE_DAY
          type: string
        payment_source_token:
          description: Unique identifier of a payment source.
          type: string
        status:
          $ref: "#/components/schemas/PaymentScheduleStatus"
        token:
          description: Unique identifier of the payment schedule.
          type: string
        updated_time:
          description:
            Date and time when the payment schedule was last updated on
            Marqeta's credit platform, in UTC.
          format: date-time
          type: string
      required:
        - account_token
        - amount_category
        - currency_code
        - frequency
        - payment_source_token
        - status
        - token
      type: object
    PaymentScheduleStatus:
      description: Status of the payment schedule.
      enum:
        - ACTIVE
        - COMPLETED
        - TERMINATED
      type: string
    PaymentScheduleTransitionCreateReq:
      description: Details to create a payment schedule transition
      properties:
        status:
          $ref: "#/components/schemas/PaymentScheduleStatus"
        token:
          description: Unique identifier of the payment schedule transition.
          maxLength: 36
          type: string
      required:
        - status
      type: object
    PaymentScheduleTransitionPage:
      description: Returns paginated information for multiple payment schedule transitions.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: List of payment schedule transitions.
          items:
            $ref: "#/components/schemas/PaymentScheduleTransitionResponse"
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description:
            A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PaymentScheduleTransitionResponse:
      description: A payment schedule transition on a credit account.
      properties:
        account_token:
          description: |-
            Unique identifier of the credit account on which to transition a payment schedule.

            Send a `GET` request to `/credit/accounts` to retrieve existing credit account tokens.
          type: string
        created_time:
          description:
            Date and time when the payment schedule transition was created
            on Marqeta's credit platform, in UTC.
          format: date-time
          type: string
        payment_schedule_token:
          description: |-
            The unique identifier of the payment schedule whose status is to transition.

            Send a `GET` request to `/credit/accounts/{account_token}/paymentschedules` to retrieve existing payment schedule tokens.
          type: string
        status:
          $ref: "#/components/schemas/PaymentScheduleStatus"
        token:
          description: Unique identifier of the payment schedule transition.
          type: string
        updated_time:
          description:
            Date and time when the payment schedule transition was last
            updated on Marqeta's credit platform, in UTC.
          format: date-time
          type: string
      type: object
    PaymentSourceCreateReq:
      description: Contains information about a payment source.
      properties:
        account_number:
          description: Account number of the payment source.
          type: string
        account_token:
          description: Unique identifier of the credit account receiving the payment.
          maxLength: 36
          type: string
        name:
          description: Name of the individual or business who owns the payment source.
          type: string
        owner:
          description: Type of payment source owner.
          enum:
            - INDIVIDUAL
            - BUSINESS
          type: string
        routing_number:
          description: Routing number of the payment source.
          type: string
        source_type:
          description: Type of payment source.
          enum:
            - CHECKING
            - SAVINGS
            - OTHER
          type: string
        token:
          description: Unique identifier of the payment source.
          pattern: (?!^ +$)^.+$
          type: string
        user_token:
          description: Unique identifier of the user making the payment.
          type: string
        verification_notes:
          description: Additional information on the verification.
          type: string
        verification_override:
          description: Whether to override the verification process.
          type: boolean
      required:
        - account_number
        - account_token
        - name
        - routing_number
        - source_type
        - user_token
        - verification_override
      type: object
    PaymentSourcePage:
      description: Returns paginated information for multiple payment sources.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: List of payment sources.
          items:
            $ref: "#/components/schemas/PaymentSourceResponse"
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description:
            A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PaymentSourceResponse:
      description: Contains information about a payment source.
      properties:
        account_suffix:
          description: Last four digits of the payment source account number.
          maxLength: 4
          type: string
        account_token:
          description: Unique identifier of the credit account receiving the payment.
          maxLength: 36
          type: string
        created_time:
          description:
            Date and time when the payment source was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description:
            Date and time when the payment source was last updated on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        name:
          description: Name of the individual or business who owns the payment source.
          type: string
        owner:
          description: Type of payment source owner.
          enum:
            - INDIVIDUAL
            - BUSINESS
          type: string
        routing_number:
          description: Routing number of the payment source.
          type: string
        source_type:
          description: Type of payment source.
          enum:
            - CHECKING
            - SAVINGS
            - OTHER
          type: string
        status:
          $ref: "#/components/schemas/PaymentSourceStatusEnum"
        token:
          description: Unique identifier of the payment source.
          type: string
        user_token:
          description: Unique identifier of the user making the payment.
          type: string
        verification_notes:
          description:
            Additional information on the verification (for example, an
            external verification identifier that's outside Marqeta's credit platform).
          type: string
        verification_status:
          description: Status of the verification for the payment source.
          enum:
            - ACH_VERIFIED
            - PENDING
          type: string
      type: object
    PaymentSourceStatusEnum:
      description: Current status of the payment source.
      enum:
        - ACTIVE
        - PENDING
        - INACTIVE
      type: string
    PaymentSourceUpdateReq:
      description: Request used to update the status of a payment source.
      properties:
        status:
          $ref: "#/components/schemas/PaymentSourceStatusEnum"
      required:
        - status
      type: object
    PaymentStatus:
      description: Current status of the payment or refund.
      enum:
        - INITIATED
        - PENDING
        - PROCESSING
        - SUBMITTED
        - CANCELLED
        - COMPLETED
        - RETURNED
        - REFUNDED
        - SYS_ERROR
        - ACH_ERROR
      type: string
    PaymentTransitionReq:
      description: Request used to transition the status of a payment.
      properties:
        refund_details:
          $ref: "#/components/schemas/RefundDetails"
        status:
          $ref: "#/components/schemas/PaymentStatus"
        token:
          description: Unique identifier of the payment status transition.
          type: string
      required:
        - status
      type: object
    PaymentTransitionResponse:
      description: Response containing payment transition information.
      properties:
        account_token:
          description:
            Unique identifier of the credit account on which you want to
            transition a payment status.
          type: string
        created_time:
          description:
            Date and time when the payment transition was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        payment_token:
          description: Unique identifier of the payment whose status you want to transition.
          type: string
        status:
          $ref: "#/components/schemas/PaymentStatus"
        token:
          description: Unique identifier of the payment status transition.
          type: string
      required:
        - account_token
        - payment_token
        - status
        - token
      type: object
    PaymentsPage:
      description: Returns paginated payments
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: Contains one or more payments on a credit account.
          items:
            $ref: "#/components/schemas/PaymentDetailResponse"
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description:
            A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PeriodicFeeSchedule:
      description: periodic fee schedules on account
      properties:
        amount:
          description: fee amount
          type: number
        effective_date:
          description: date the fee becomes effective
          format: date
          type: string
        next_fee_impact_date:
          description: date of the next time fee will be charged
          format: date
          type: string
        type:
          description: type of fee to be charged
          enum:
            - ANNUAL_FEE
            - MONTHLY_FEE
          type: string
      type: object
    PeriodicFeeSchedulePage:
      description: Return paginated periodic fee schedules on a credit account.
      properties:
        count:
          description: Number of resources returned.
          type: integer
        data:
          description: List of account periodic fee schedules.
          items:
            $ref: "#/components/schemas/PeriodicFeeSchedule"
          type: array
        end_index:
          description: Sort order index of the last resource in the returned array.
          type: integer
        is_more:
          description:
            A value of `true` indicates that more unreturned resources
            exist.
          type: boolean
        start_index:
          description: Sort order index of the first resource in the returned array.
          type: integer
      required:
        - count
        - data
        - end_index
        - is_more
        - start_index
      type: object
    PostDecisionsResponse:
      properties:
        application_token:
          description: Unique identifier of the application.
          type: string
        decision_id:
          description: |-
            Unique identifier of the decision made based on the decision model.

            See `decision_model.status` for the current state of the application.
          type: string
        status:
          description: Status of the decision on the application.
          enum:
            - SUBMITTED
            - DECISIONING
            - MANUAL_REVIEW
            - APPROVED
            - DECLINED
            - EXPIRED
            - REJECTED
            - ERROR
          type: string
        submitted_date_time:
          description: Date and time when the decision was submitted, in UTC.
          format: date-time
          type: string
        token:
          description: |-
            Unique identifier of the decision model.

            See `decision_model.status` for the current state of the application.
          type: string
        user_token:
          description:
            Unique identifier of the applicant, the user applying for a
            credit account.
          type: string
      required:
        - application_token
        - decision_id
        - status
        - submitted_date_time
        - token
        - user_token
      type: object
    PrimaryContactInfoModel:
      description: Describes the business' primary contact person.
      properties:
        department:
          description: Business department of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        email:
          description: Email address of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        extension:
          description: Phone extension of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        fax:
          description: Fax number of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        full_name:
          description: Full name of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        mobile:
          description: Mobile phone number of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: Phone number of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
        title:
          description: Title of the primary contact.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    PushToCardDisburseListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          items:
            $ref: "#/components/schemas/push_to_card_disbursement_response"
          type: array
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    PushToCardListResponse:
      properties:
        count:
          format: int32
          type: integer
        data:
          items:
            $ref: "#/components/schemas/push_to_card_response"
          type: array
        end_index:
          format: int32
          type: integer
        is_more:
          default: false
          type: boolean
        start_index:
          format: int32
          type: integer
      type: object
    RefundDetails:
      description: Contains details for a refund.
      properties:
        description:
          description: Description of the refund.
          type: string
        method:
          $ref: "#/components/schemas/RefundMethod"
      required:
        - description
        - method
      type: object
    RefundDetailsResponse:
      description: Contains details for a refund.
      nullable: true
      properties:
        description:
          description: Description of the refund.
          type: string
        method:
          $ref: "#/components/schemas/RefundMethod"
        status:
          $ref: "#/components/schemas/RefundStatus"
      required:
        - description
        - method
        - status
      type: object
    RefundMethod:
      description: Method of the refund.
      enum:
        - CHECK
      type: string
    RefundStatus:
      description: Current status of the refund.
      enum:
        - COMPLETED
      type: string
    ResourceStatus:
      description: |-
        Status of the credit product.

        * `DRAFT` - The credit product is in the process of being created.
        * `PENDING_APPROVAL` - The credit product has been created and is awaiting approval.
        * `SENT_FOR_REVISION` - The credit product has been returned for revision.
        * `ACTIVE` - The credit product is active.
        * `REJECTED` - The credit product has been rejected; this status cannot be changed.
        * `ARCHIVED` - The previously active credit product has been archived.
      enum:
        - DRAFT
        - PENDING_APPROVAL
        - SENT_FOR_REVISION
        - ACTIVE
        - REJECTED
        - ARCHIVED
      type: string
    ReturnedDetails:
      description: Contains information on a returned payment.
      nullable: true
      properties:
        return_code:
          description: |-
            Return code for the returned payment.
            For more, see <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA ACH return codes>>.
          type: string
        return_reason:
          description: |-
            Reason the payment was returned.
            For more, see <</developer-guides/ach-origination#_nacha_ach_return_codes, NACHA ACH return codes>>.
          type: string
      required:
        - return_code
        - return_reason
      type: object
    ReversalModel:
      properties:
        amount:
          type: number
        find_original_window_days:
          format: int32
          type: integer
        is_advice:
          default: false
          type: boolean
        network_fees:
          items:
            $ref: "#/components/schemas/network_fee_model"
          type: array
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - original_transaction_token
      type: object
    ShippingInformationResponse:
      description: |-
        Specifies shipping details for the order.

        This object is returned if it exists in the resource.
      properties:
        care_of_line:
          description: |-
            Specifies the value of the care of (C/O) line on the mailing carrier.

            This field is returned if it exists in the resource.
          type: string
        method:
          description: |-
            Specifies the shipping service.

            This field is returned if it exists in the resource.
          enum:
            - LOCAL_MAIL
            - LOCAL_MAIL_PACKAGE
            - GROUND
            - TWO_DAY
            - OVERNIGHT
            - INTERNATIONAL
            - INTERNATIONAL_PRIORITY
            - LOCAL_PRIORITY
            - FEDEX_EXPEDITED
            - FEDEX_REGULAR
            - UPS_EXPEDITED
            - UPS_REGULAR
            - USPS_EXPEDITED
            - USPS_REGULAR
          type: string
        recipient_address:
          $ref: "#/components/schemas/FulfillmentAddressResponse"
        return_address:
          $ref: "#/components/schemas/FulfillmentAddressResponse"
      type: object
    TransactionModelListResponse:
      properties:
        count:
          description: |-
            The number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            An array of transaction objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/transaction_model"
          type: array
        end_index:
          description: |-
            The sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            The sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    UserCardHolderListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of user objects.

            Objects are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/card_holder_model"
          type: array
        end_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    UserCardHolderUpdateModel:
      properties:
        account_holder_group_token:
          description: |-
            Associates the specified account holder group with the cardholder.
            Send a `GET` request to `/accountholdergroups` to retrieve account holder group tokens.
          maxLength: 36
          minLength: 0
          type: string
        address1:
          description: |-
            Cardholder address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
            Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: |-
            Additional address information for the cardholder.

            *NOTE:* Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        birth_date:
          description: |-
            Cardholder date of birth.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          type: string
        city:
          description: |-
            The city that corresponds to the address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        company:
          description: Company name.
          maxLength: 255
          minLength: 0
          type: string
        corporate_card_holder:
          default: false
          description: Specifies if the cardholder holds a corporate card.
          type: boolean
        country:
          description: |-
            Country in which the cardholder resides.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: |-
            Valid email address for the cardholder.

            This value must be unique among cardholders.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: |-
            Cardholder first name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        gender:
          description: Gender of the cardholder.
          enum:
            - F
            - M
          maxLength: 1
          minLength: 0
          type: string
        honorific:
          description: "Cardholder title or prefix: Ms., Mr., Miss, Mrs."
          maxLength: 10
          minLength: 0
          type: string
        id_card_expiration_date:
          description: Expiration date of the cardholder's identification card.
          type: string
        id_card_number:
          description: Cardholder's identification card number.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description:
            One or more objects containing identifications associated with
            the cardholder.
          items:
            $ref: "#/components/schemas/IdentificationRequestModel"
          type: array
        ip_address:
          description: Cardholder IP address.
          maxLength: 39
          minLength: 0
          type: string
        last_name:
          description: |-
            Cardholder last name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
          type: object
        middle_name:
          description: Cardholder middle name.
          maxLength: 40
          minLength: 0
          type: string
        nationality:
          description: Cardholder nationality.
          maxLength: 255
          minLength: 0
          type: string
        notes:
          description: Any additional information pertaining to the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        parent_token:
          description: |-
            Unique identifier of an existing user or business resource.

            Required if `uses_parent_account = true`.
            This account holder is configured as the parent of the current cardholder.

            To unlink a child account from a parent account, update this field to a null value.
          maxLength: 36
          minLength: 1
          type: string
        passport_expiration_date:
          description: Expiration date of the cardholder's passport.
          type: string
        passport_number:
          description: Cardholder passport number.
          maxLength: 40
          minLength: 0
          type: string
        password:
          description: Cardholder's user account password on the Marqeta platform.
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: |-
            Cardholder telephone number (including area code), prepended by the `+` symbol and the 1- to 3-digit country calling code.
            Do not include hyphens, spaces, or parentheses.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: |-
            Postal code of the cardholder's address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 10
          minLength: 0
          type: string
        ssn:
          description: Cardholder's Social Security Number (SSN).
          type: string
        state:
          description: |-
            State where the cardholder resides.

            *NOTE:* <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid two-character abbreviation>> required for KYC verification (US-based cardholders only).
          maxLength: 32
          minLength: 0
          type: string
        token:
          description: Unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
        uses_parent_account:
          default: false
          description: |-
            Indicates whether the child shares balances with the parent (`true`), or the child's balances are independent of the parent (`false`).

            If set to `true`, you must also include a `parent_token` in the request.
            This value cannot be updated.
          type: boolean
      type: object
    UserTransitionListResponse:
      properties:
        count:
          description: |-
            Number of resources retrieved.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of user transition resources.

            Resources are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/UserTransitionResponse"
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    UserTransitionRequest:
      properties:
        channel:
          description: Mechanism by which the transaction was initiated.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        idempotentHash:
          description:
            Unique hashed value that identifies subsequent submissions
            of the user transition request.
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          description: |-
            Identifies the standardized reason for the transition:

            *00:* Object activated for the first time.

            *01:* Requested by you.

            *02:* Inactivity over time.

            *03:* This address cannot accept mail or the addressee is unknown.

            *04:* Negative account balance.

            *05:* Account under review.

            *06:* Suspicious activity was identified.

            *07:* Activity outside the program parameters was identified.

            *08:* Confirmed fraud was identified.

            *09:* Matched with an Office of Foreign Assets Control list.

            *10:* Card was reported lost.

            *11:* Card information was cloned.

            *12:* Account or card information was compromised.

            *13:* Temporary status change while on hold/leave.

            *14:* Initiated by Marqeta.

            *15:* Initiated by issuer.

            *16:* Card expired.

            *17:* Failed KYC.

            *18:* Changed to `ACTIVE` because information was properly validated.

            *19:* Changed to `ACTIVE` because account activity was properly validated.

            *20:* Change occurred prior to the normalization of reason codes.

            *21:* Initiated by a third party, often a digital wallet provider.

            *22:* PIN retry limit reached.

            *23:* Card was reported stolen.

            *24:* Address issue.

            *25:* Name issue.

            *26:* SSN issue.

            *27:* DOB issue.

            *28:* Email issue.

            *29:* Phone issue.

            *30:* Account/fulfillment mismatch.

            *31:* Other reason.
          enum:
            - "00"
            - "01"
            - "02"
            - "03"
            - "04"
            - "05"
            - "06"
            - "07"
            - "08"
            - "09"
            - "10"
            - "11"
            - "12"
            - "13"
            - "14"
            - "15"
            - "16"
            - "17"
            - "18"
            - "19"
            - "20"
            - "21"
            - "22"
            - "23"
            - "24"
            - "25"
            - "26"
            - "27"
            - "28"
            - "29"
            - "30"
            - "31"
            - "32"
          type: string
        status:
          description: Specifies the new status of the user.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        token:
          description: |-
            Unique identifier of the user transition.

            If you do not include a token, the system generates one automatically.
            This token is referenced in other API calls, so we recommend that you define a simple string that is easy to remember.
            This value cannot be updated.
          type: string
        user_token:
          description: Unique identifier of the user whose status you want to transition.
          type: string
      required:
        - channel
        - reason_code
        - status
        - user_token
      type: object
    UserTransitionResponse:
      properties:
        channel:
          description: Mechanism by which the transaction was initiated.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        reason:
          description: Additional information about the status change.
          type: string
        reason_code:
          description: |-
            Identifies the standardized reason for the transition:

            *00:* Object activated for the first time.

            *01:* Requested by you.

            *02:* Inactivity over time.

            *03:* This address cannot accept mail or the addressee is unknown.

            *04:* Negative account balance.

            *05:* Account under review.

            *06:* Suspicious activity was identified.

            *07:* Activity outside the program parameters was identified.

            *08:* Confirmed fraud was identified.

            *09:* Matched with an Office of Foreign Assets Control list.

            *10:* Card was reported lost.

            *11:* Card information was cloned.

            *12:* Account or card information was compromised.

            *13:* Temporary status change while on hold/leave.

            *14:* Initiated by Marqeta.

            *15:* Initiated by issuer.

            *16:* Card expired.

            *17:* Failed KYC.

            *18:* Changed to `ACTIVE` because information was properly validated.

            *19:* Changed to `ACTIVE` because account activity was properly validated.

            *20:* Change occurred prior to the normalization of reason codes.

            *21:* Initiated by a third party, often a digital wallet provider.

            *22:* PIN retry limit reached.

            *23:* Card was reported stolen.

            *24:* Address issue.

            *25:* Name issue.

            *26:* SSN issue.

            *27:* DOB issue.

            *28:* Email issue.

            *29:* Phone issue.

            *30:* Account/fulfillment mismatch.

            *31:* Other reason.
          enum:
            - "00"
            - "01"
            - "02"
            - "03"
            - "04"
            - "05"
            - "06"
            - "07"
            - "08"
            - "09"
            - "10"
            - "11"
            - "12"
            - "13"
            - "14"
            - "15"
            - "16"
            - "17"
            - "18"
            - "19"
            - "20"
            - "21"
            - "22"
            - "23"
            - "24"
            - "25"
            - "26"
            - "27"
            - "28"
            - "29"
            - "30"
            - "31"
            - "32"
          type: string
        status:
          description: Specifies the new status of the user.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        token:
          description: Unique identifier of the user transition.
          type: string
        user_token:
          description: Unique identifier of the user whose status was transitioned.
          type: string
      required:
        - channel
        - reason_code
        - status
        - token
      type: object
    UserValidationRequest:
      description: Contains information about the user.
      properties:
        birth_date:
          description: Date of birth of the user associated with this card.
          format: date-time
          type: string
        phone:
          description: Telephone number of the user associated with this card.
          maxLength: 255
          minLength: 0
          type: string
        random_name_line1_postfix:
          description: |-
            Random six-digit numeric postfix generated for some bulk card orders.

            See <</core-api/bulk-card-orders, Bulk Card Orders>> for more information about numeric postfixes.
          maxLength: 6
          minLength: 6
          type: string
        ssn:
          description:
            Social Security Number (SSN) of the user associated with this
            card.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    UserValidationResponse:
      description: Contains information about the user.
      properties:
        birth_date:
          default: false
          description:
            Indicates whether the `birth_date` field in the request was
            validated.
          type: boolean
        phone:
          default: false
          description: Indicates whether the `phone` field in the request was validated.
          type: boolean
        random_name_line1_postfix:
          default: false
          description:
            Indicates whether the `random_name_line1_postfix` field in
            the request was validated.
          type: boolean
        ssn:
          default: false
          description: Indicates whether the `ssn` field in the request was validated.
          type: boolean
      required:
        - birth_date
        - phone
        - random_name_line1_postfix
        - ssn
      type: object
    ValidationsRequest:
      description: Contains information about the user.
      properties:
        user:
          $ref: "#/components/schemas/UserValidationRequest"
      type: object
    ValidationsResponse:
      description: Contains information about the user.
      properties:
        user:
          $ref: "#/components/schemas/UserValidationResponse"
      required:
        - user
      type: object
    WebhookEventResendContainerResponse:
      description: Contains information about a webhook event.
      properties:
        unused:
          description: The event notification that was resent to your webhook endpoint.
          type: string
      type: object
    WebhookResponseModelListResponse:
      properties:
        count:
          description: |-
            Number of resources to retrieve.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        data:
          description: |-
            Array of webhooks resources.

            Resources are returned as appropriate to your query.
          items:
            $ref: "#/components/schemas/webhook_response_model"
          type: array
        end_index:
          description: |-
            Sort order index of the last resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
        is_more:
          default: false
          description: |-
            A value of `true` indicates that more unreturned resources exist.
            A value of `false` indicates that no more unreturned resources exist.

            This field is returned if there are resources in your returned array.
          type: boolean
        start_index:
          description: |-
            Sort order index of the first resource in the returned array.

            This field is returned if there are resources in your returned array.
          format: int32
          type: integer
      type: object
    WebhookUpdateCustomHeaderRequest:
      properties:
        custom_header:
          additionalProperties:
            type: string
          description: |-
            Additional custom information included in the HTTP header.
            For example, this might contain security information, along with Basic Authentication, when making a JIT Funding request.
          type: object
      type: object
    YearToDate:
      description: Contains information about year-to-date totals for an account.
      properties:
        account_token:
          description: Unique identifier of the associated credit account.
          maxLength: 36
          type: string
        created_time:
          description:
            Date and time when the year-to-date total was created on Marqeta's
            credit platform, in UTC.
          format: date-time
          type: string
        statement_token:
          description:
            Unique identifier of the statement summary from which to retrieve
            year-to-date totals.
          format: uuid
          type: string
        token:
          description: Unique identifier of the year-to-date total.
          format: uuid
          type: string
        total_fees:
          description: Total fees charged year-to-date.
          type: number
        total_interest:
          description: Total interest charged year-to-date.
          type: number
      required:
        - account_token
        - statement_token
        - total_fees
        - total_interest
      type: object
    accepted_countries_model:
      properties:
        country_codes:
          description:
            Comma-delimited list of accepted countries by ISO 3166 three-digit
            country code.
          items:
            description: ISO 3166 three-digit numeric country code.
            type: string
          type: array
        created_time:
          description: |-
            Date and time when the accepted countries object was created, in UTC.
            This field is returned when included in your query.
          format: date-time
          type: string
        is_whitelist:
          default: false
          description: |-
            Specifies if the list of accepted countries in this object is an allow list.
            If set to `true`, transactions are accepted for all countries included in the object's `country_codes` array.
            If set to `false`, transactions are prohibited for all countries included in the object's `country_codes` array.
          type: boolean
        last_modified_time:
          description: |-
            Date and time when the accepted countries object was last updated, in UTC.
            This field is returned when included in your query.
          format: date-time
          type: string
        name:
          description: Name of the `acceptedcountries` object.
          type: string
        token:
          description: |-
            The unique identifier of the `acceptedcountries` object.

            This field is always returned.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - country_codes
        - is_whitelist
        - name
      type: object
    access_token_response:
      description: Contains a cardholder's login access information.
      properties:
        accesstoken_id:
          type: string
        application:
          $ref: "#/components/schemas/Application"
        expires:
          description: Date and time when the access token expires.
          format: date-time
          type: string
        master_roles:
          description: Array of master roles.
          items:
            type: string
          type: array
        one_time:
          description: Indicates whether the access token is a single-use token.
          type: boolean
        token:
          description: Unique identifier of the access token.
          type: string
        token_type:
          description: Specifies the type of access token.
          type: string
        user_token:
          description: Unique identifier of the user resource.
          type: string
      required:
        - expires
      type: object
    account:
      description:
        Contains information related to the cardholder and provided by
        the digital wallet provider.
      properties:
        email_address:
          description: Digital wallet provider's email address for the cardholder.
          type: string
        id:
          description: Digital wallet provider's identity number for the cardholder.
          type: string
        score:
          description: Score from the digital wallet provider.
          type: string
      type: object
    account_funding:
      properties:
        funding_source:
          enum:
            - CREDIT
            - DEBIT
            - PREPAID
            - DEPOSIT_ACCOUNT
            - CASH
            - MOBILE_MONEY_ACCOUNT
            - NON_VISA_CREDIT
            - CHECK
            - ACH
          type: string
        receiver_account_type:
          enum:
            - OTHER
            - RTN_BANK_ACCOUNT
            - IBAN
            - CARD_ACCOUNT
            - EMAIL
            - PHONE_NUMBER
            - BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE
            - WALLET_ID
            - SOCIAL_NETWORK_ID
          type: string
        receiver_name:
          type: string
        screening_score:
          type: string
        transaction_purpose:
          type: string
        transaction_type:
          enum:
            - ACCOUNT_TO_ACCOUNT
            - PERSON_TO_PERSON
            - WALLET_TRANSFER
            - MONEY_TRANSFER_BY_BANK
            - BUSINESS_TO_BUSINESS
            - DISBURSEMENT
            - GOVERNMENT_DISBURSEMENT
            - GAMBLING_PAYOUT
            - LOYALTY
            - MERCHANT_DISBURSEMENT
            - ONLINE_GAMBLING_PAYOUT
            - PENSION_DISBURSEMENT
            - PREPAID_LOADS
            - CARD_BILL_PAYMENT
            - BILL_PAYMENT
            - CASH_CLAIM
            - CASH_IN
            - CASH_OUT
            - MOBILE_AIR_TIME_PAYMENT
            - MONEY_TRANSFER_BY_MERCHANT
            - FACE_TO_FACE_MERCHANT_PAYMENT
            - GOVERNMENT_PAYMENT
            - PAYMENTS_GOODS_SERVICES
            - FUNDS_TRANSFER
            - GENERAL_BUSINESS_TO_BUSINESS_TRANSFER
            - BUSINESS_TO_BUSINESS_TRANSFER
            - CASH_DEPOSIT
            - PURCHASE_REPAYMENT
          type: string
      type: object
    account_holder_group_config:
      description: Contains configuration fields for the account holder group.
      properties:
        is_reloadable:
          default: false
          description: |-
            If set to `false`, this control prohibits an account holder's account from being reloaded with funds after the initial load.

            This restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments.
          type: boolean
        kyc_required:
          description:
            If set to `ALWAYS`, new account holders are created in an `UNVERIFIED`
            status and must pass identity verification (KYC) before they can be active;
            if set to `CONDITIONAL`, new account holders begin in a `LIMITED` status
            and have limited actions available before passing identity verification;
            if set to `NEVER`, new account holders are created in an active state.
          enum:
            - ALWAYS
            - CONDITIONAL
            - NEVER
          type: string
        pre_kyc_controls:
          $ref: "#/components/schemas/pre_kyc_controls"
        real_time_fee_group_token:
          description:
            Associates the specified real-time fee group with the members
            of the account holder group.
          maxLength: 36
          minLength: 0
          type: string
      type: object
    account_holder_group_request:
      properties:
        config:
          $ref: "#/components/schemas/account_holder_group_config"
        name:
          description: Descriptive name for the account holder group.
          maxLength: 40
          minLength: 1
          type: string
        token:
          description: Unique identifier of the account holder group.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    account_holder_group_response:
      properties:
        config:
          $ref: "#/components/schemas/account_holder_group_config"
        name:
          description: |-
            Descriptive name for the account holder group.

            This field is returned if it exists in the resource.
          type: string
        token:
          description: |-
            Unique identifier of the account holder group.

            This field is always returned.
          type: string
      type: object
    account_holder_group_update_request:
      properties:
        config:
          $ref: "#/components/schemas/account_holder_group_config"
        name:
          description: Descriptive name for the account holder group.
          maxLength: 40
          minLength: 1
          type: string
      type: object
    acquirer:
      description: Contains information about the merchant's financial institution.
      properties:
        institution_country:
          description: Country code of the merchant's financial institution.
          type: string
        institution_id_code:
          description: Identifier code of the merchant's financial institution.
          type: string
        network_international_id:
          description: The international network identifier.
          type: string
        retrieval_reference_number:
          description: Retrieval reference number of the merchant's financial institution.
          type: string
        system_trace_audit_number:
          description: System trace audit number of the merchant's financial institution.
          type: string
      type: object
    activation_actions:
      description: |-
        Defines actions to execute when the card is activated.
        The fields in this object are mutually exclusive.
      properties:
        swap_digital_wallet_tokens_from_card_token:
          description: |-
            Moves all digital wallet tokens from the specified card to the new card.

            Not relevant when `reissue_pan_from_card_token` is set.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
          maxLength: 36
          minLength: 1
          type: string
        terminate_reissued_source_card:
          default: true
          description: |-
            If you are reissuing a card, the source card is terminated by default.
            To prevent the source card from being terminated, set this field to `false`.

            Only relevant when `reissue_pan_from_card_token` is set.
          type: boolean
      type: object
    address_verification:
      description: Contains address verification information.
      properties:
        name:
          description: Name of the cardholder.
          type: string
        postal_code:
          description: Postal code.
          type: string
        street_address:
          description: Street address provided by the cardholder.
          type: string
        zip:
          description: United States ZIP code.
          type: string
      type: object
    address_verification_model:
      description:
        Contains address verification data consisting of address data entered
        by the cardholder, address data held by the Marqeta platform, and an assertion
        by the Marqeta platform as to whether the two sets of data match.
      properties:
        on_file:
          $ref: "#/components/schemas/avs_information"
        request:
          $ref: "#/components/schemas/avs_information"
        response:
          $ref: "#/components/schemas/response"
      type: object
    address_verification_source:
      description:
        Contains address verification data consisting of address data entered
        by the cardholder, address data held by the Marqeta platform, and an assertion
        by the Marqeta platform as to whether the two sets of data match.
      properties:
        on_file:
          $ref: "#/components/schemas/avs_information"
        response:
          $ref: "#/components/schemas/response"
      type: object
    airline:
      description: Contains information about airline-related transactions.
      properties:
        depart_date:
          description: The date and time of departure.
          format: date-time
          type: string
        origination_city:
          description: The city where the flight originates.
          type: string
        passenger_name:
          description: The name of the passenger.
          type: string
      type: object
    android_push_tokenize_request_data:
      description: Contains details about a card tokenization push request.
      properties:
        display_name:
          description: |-
            Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).
            `Visa 5678`, for example.
          type: string
        last_digits:
          description:
            Last four digits of the primary account number of the physical
            or virtual card.
          type: string
        network:
          description: Specifies the card network of the physical or virtual card.
          type: string
        opaque_payment_card:
          description:
            Encrypted data field created by the issuer and passed to Google
            Wallet during the push provisioning process.
          type: string
        token_service_provider:
          description:
            Specifies the network that provides the digital wallet token
            service.
          type: string
        user_address:
          $ref: "#/components/schemas/AndroidPushTokenRequestAddress"
      type: object
    atc_information:
      properties:
        atc_discrepancy_indicator:
          type: string
        atc_discrepancy_value:
          type: number
        atc_value:
          type: number
      type: object
    auth_control_exempt_mids_request:
      properties:
        association:
          $ref: "#/components/schemas/spend_control_association"
        end_time:
          description: Date and time when the exception ends, in UTC.
          format: date-time
          type: string
        merchant_group_token:
          description: |-
            Unique identifier of the merchant group to be exempted.
            This field is required if there is no entry in the `mid` field.
            Pass either this field or the `mid` field, not both.

            For information about merchant groups, see <</core-api/merchant-groups, Merchant Groups>>.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: |-
            Merchant to be exempted.
            This field is required if there is no entry in the `merchant_group_token` field.
            Use either this field or the `merchant_group_token` field, not both.
          maxLength: 36
          minLength: 1
          type: string
        name:
          description: Name of the merchant identifier authorization control exemption.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: Date and time when the exception starts, in UTC.
          format: date-time
          type: string
        token:
          description: |-
            Unique identifier of the merchant identifier authorization control exemption.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          type: string
      required:
        - name
      type: object
    auth_control_exempt_mids_response:
      properties:
        active:
          default: false
          description: |-
            Indicates whether the merchant identifier authorization control exception is active.

            This field is returned if it exists in the resource.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        created:
          description: |-
            Date and time when the resource was created, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        end_time:
          description: |-
            Date and time when the exception ends, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        last_updated:
          description: |-
            Date and time when the resource was last updated, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        merchant_group_token:
          description: |-
            Unique identifier of the merchant group to be exempted.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: |-
            Merchant to be exempted.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
        name:
          description: Name of the merchant identifier authorization control exemption.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: |-
            Date and time when the exception starts, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        token:
          description: |-
            Unique identifier of the merchant identifier authorization control exemption.

            This field is always returned.
          type: string
      required:
        - name
      type: object
    auth_control_exempt_mids_update_request:
      properties:
        active:
          default: false
          description:
            Indicates whether the merchant identifier authorization control
            exception is active.
          type: boolean
      type: object
    auth_control_merchant_scope:
      description: |-
        Defines the group of merchants to which the authorization control applies.
        This object is required if the `association` object is not included in your request.
        Your request can include both the `merchant_scope` and `association` objects.

        If you include this object in your request, you must populate one or more of its fields.
        If no fields are populated, the authorization control applies to all merchants.
      properties:
        mcc:
          description: |-
            Merchant Category Code (MCC).
            Identifies the type of goods or services provided by the merchant.

            Enter a value to control access to a particular type of product or service.

            See <</developer-guides/controlling-spending, Controlling Spending>> for links to more information about merchant category codes.
          maxLength: 4
          minLength: 1
          type: string
        mcc_group:
          description: |-
            Token identifying a group of MCCs.

            Enter a value to control access to a group of product or service types.
          maxLength: 36
          minLength: 1
          type: string
        merchant_group_token:
          description: |-
            Unique identifier of a merchant group.

            Enter a value to control access to a group of merchants.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: |-
            Merchant identifier (MID).
            Identifies a specific merchant.

            Enter a value to control access to a particular merchant.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    auth_control_request:
      properties:
        active:
          default: true
          description: Indicates whether the authorization control is active.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        end_time:
          description: Date and time when the exception ends, in UTC.
          format: date-time
          type: string
        merchant_scope:
          $ref: "#/components/schemas/auth_control_merchant_scope"
        name:
          description: Name of the authorization control.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: Date and time when the exception goes into effect, in UTC.
          format: date-time
          type: string
        token:
          description: |-
            Unique identifier of the authorization control.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    auth_control_response:
      properties:
        active:
          default: true
          description: |-
            Indicates whether the authorization control is active.

            This field is returned if it exists in the resource.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        end_time:
          description: |-
            Date and time when the exception ends, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        merchant_scope:
          $ref: "#/components/schemas/auth_control_merchant_scope"
        name:
          description: Name of the authorization control.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: |-
            Date and time when the exception goes into effect, in UTC.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        token:
          description: |-
            Unique identifier of the authorization control.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    auth_control_update_request:
      properties:
        active:
          default: true
          description: Indicates whether the authorization control is active.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        end_time:
          description: Date and time when the exception ends, in UTC.
          format: date-time
          type: string
        merchant_scope:
          $ref: "#/components/schemas/merchant_scope"
        name:
          description: Name of the authorization control.
          maxLength: 255
          minLength: 0
          type: string
        start_time:
          description: Date and time when the exception goes into effect, in UTC.
          format: date-time
          type: string
        token:
          description: Unique identifier of the authorization control.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    auth_request_model:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: "#/components/schemas/card_acceptor_model"
        card_options:
          $ref: "#/components/schemas/card_options"
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        cash_back_amount:
          type: number
        is_pre_auth:
          default: false
          type: boolean
        mid:
          maxLength: 50
          minLength: 1
          type: string
        network_fees:
          items:
            $ref: "#/components/schemas/network_fee_model"
          type: array
        network_metadata:
          $ref: "#/components/schemas/network_metadata"
        pin:
          maxLength: 50
          minLength: 1
          type: string
        transaction_options:
          $ref: "#/components/schemas/transaction_options"
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - card_token
        - mid
      type: object
    authorization_advice_model:
      properties:
        amount:
          type: number
        network_fees:
          items:
            $ref: "#/components/schemas/network_fee_model"
          type: array
        original_transaction_token:
          maxLength: 36
          minLength: 1
          type: string
        transaction_options:
          $ref: "#/components/schemas/transaction_options"
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - original_transaction_token
      type: object
    authorization_controls:
      description: |-
        Controls the expiration of authorizations and automatic increases to the authorization amount for MCCs specified in this group.

        By default, these authorization controls apply program-wide, meaning that they apply to every card in your program.
        You can, however, exempt cards associated with any particular card product by setting that card product's `allow_mcc_group_authorization_controls` field to `false`.
      properties:
        hold_expiration_days:
          default: 7
          description:
            Specifies the number of days after which an authorization associated
            with this group expires.
          format: int32
          type: integer
        hold_increase:
          $ref: "#/components/schemas/hold_increase"
      type: object
    auto_reload_association:
      description: |-
        Specifies the scope of the auto reload.

        Input no more than one field.
        If no value is supplied, the auto reload applies at the program level.
      properties:
        business_token:
          description: |-
            Unique identifier of the business for which the auto reload is configured.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        card_product_token:
          description: |-
            Unique identifier of the card product for which the auto reload is configured.

            Send a `GET` request to `/cardproducts` to retrieve card product tokens.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the user for which the auto reload is configured.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    auto_reload_model:
      description: |-
        Contains information about an auto reload.
        See <</core-api/auto-reload, Auto Reloads>> for more information.

        Returned if an auto reload was executed.
      properties:
        active:
          default: true
          description: |-
            Specifies whether the auto reload is active.

            Only one auto reload per level, per object, can be active.
          type: boolean
        association:
          $ref: "#/components/schemas/auto_reload_association"
        currency_code:
          description:
            Three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO
            4217 currency code, window="_blank"].
          type: string
        funding_source_address_token:
          description: |-
            Unique identifier of the funding source address to use for this auto reload.

            If your funding source is an ACH account, then a `funding_source_address_token` is not required.
            If your funding source is a payment card, you must have at least one funding source address in order to create a GPA order.

            Send a `GET` request to `/fundingsources/addresses/user/{user_token}` to retrieve address tokens for a user.

            Send a `GET` request to `/fundingsources/addresses/business/{business_token}` to retrieve address tokens for a business.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description: |-
            Unique identifier of the funding source to use for this auto reload.

            Send a `GET` request to `/fundingsources/user/{user_token}` to retrieve funding source tokens for a user.

            Send a `GET` request to `/fundingsources/business/{business_token}` to retrieve funding source tokens for a business.
          maxLength: 36
          minLength: 1
          type: string
        order_scope:
          $ref: "#/components/schemas/order_scope"
        token:
          description: |-
            Unique identifier of the auto reload.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - currency_code
        - order_scope
      type: object
    auto_reload_response_model:
      properties:
        active:
          default: true
          description: |-
            Specifies whether the auto reload is active.

            This field is returned if it exists in the resource.
          type: boolean
        association:
          $ref: "#/components/schemas/auto_reload_association"
        created_time:
          description: Date and time when the auto reload object was created, in UTC.
          format: date-time
          type: string
        currency_code:
          description:
            Three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO
            4217 currency code, window="_blank"].
          type: string
        funding_source_address_token:
          description: |-
            Unique identifier of the funding source address to use for this auto reload.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description: |-
            Unique identifier of the funding source to use for this auto reload.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 1
          type: string
        last_modified_time:
          description:
            Date and time when the auto reload object was last modified,
            in UTC.
          format: date-time
          type: string
        order_scope:
          $ref: "#/components/schemas/order_scope"
        token:
          description: |-
            Unique identifier of the auto reload.

            This field is always returned.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - currency_code
        - last_modified_time
        - order_scope
      type: object
    auto_reload_update_model:
      properties:
        active:
          default: true
          description: |-
            Specifies whether the auto reload is active.

            Only one auto reload per level, per object, can be active.
          type: boolean
        association:
          $ref: "#/components/schemas/auto_reload_association"
        currency_code:
          description:
            Three-digit link:https://www.iso.org/iso-4217-currency-codes.html[ISO
            4217 currency code, window="_blank"].
          type: string
        funding_source_address_token:
          description: |-
            Unique identifier of the funding source address to use for this auto reload.

            If your funding source is an ACH account, then a `funding_source_address_token` is not required.
            If your funding source is a payment card, you must have at least one funding source address in order to create a GPA order.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description:
            Unique identifier of the funding source to use for this auto
            reload.
          maxLength: 36
          minLength: 1
          type: string
        order_scope:
          $ref: "#/components/schemas/order_scope"
        token:
          description:
            The token in the path parameter takes precedence over the `token`
            body field.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    available:
      description: |-
        Specifies the available balances of the velocity controls associated with a user.

        This object is not returned if the velocity control window is `TRANSACTION`, because available balances do not apply to single-transaction velocity windows.
      properties:
        amount:
          description: Total amount of spend remaining in the velocity control.
          exclusiveMinimum: false
          minimum: 0
          type: number
        days_remaining:
          description: Number of days remaining in the velocity control time window.
          format: int32
          type: integer
        uses:
          default: 0
          description: Number of uses remaining in the velocity control.
          format: int32
          type: integer
      required:
        - amount
        - uses
      type: object
    avs_control_options:
      properties:
        decline_on_address_number_mismatch:
          default: false
          description: |-
            Set to `true` to decline account verification or authorization messages whose address number does not match the address number on file.

            Set to `false` to not decline account verification or authorization messages whose address number does not match the address number on file.

            This field is functional only if `validate = true`.
          type: boolean
        decline_on_postal_code_mismatch:
          default: true
          description: |-
            Set to `true` to decline account verification or authorization messages whose postal code does not match the postal code on file.

            Set to `false` to not decline account verification or authorization messages whose postal code does not match the postal code on file.

            This field is functional only if `validate = true`.
          type: boolean
        validate:
          default: true
          description: |-
            Set to `true` to require validation of account verification or authorization messages.

            Set to `false` to forgo validation and approve all account verification and authorization messages.
          type: boolean
      type: object
    avs_controls:
      properties:
        auth_messages:
          $ref: "#/components/schemas/avs_control_options"
        av_messages:
          $ref: "#/components/schemas/avs_control_options"
      type: object
    avs_information:
      description: Contains address verification information.
      properties:
        postal_code:
          description: Postal code of the address.
          type: string
        street_address:
          description: Street name and number of the address.
          type: string
        zip:
          description: United States ZIP code of the address.
          type: string
      type: object
    bank_account_funding_source_model:
      allOf:
        - $ref: "#/components/schemas/funding_source_model"
        - properties:
            account_suffix:
              type: string
            account_type:
              type: string
            business_token:
              description: Required if 'user_token' is null
              type: string
            name_on_account:
              type: string
            routing_number:
              type: string
            user_token:
              description: Required if 'business_token' is null
              type: string
            verification_status:
              type: string
          required:
            - account_suffix
            - account_type
            - name_on_account
            - routing_number
            - verification_status
          type: object
    beneficial_owner_request:
      description: |-
        Contains information about the beneficial owner of the business, if applicable.

        This object is required for KYC verification in the United States if the business is private and has a beneficial owner.
        This object is not required for publicly held businesses.

        Do not include information about the proprietor or business officer in a `beneficial_owner` object.
        If the proprietor or officer of the business is also a beneficial owner, you must indicate that in the `proprietor_is_beneficial_owner` field in the body field details of the business.
      properties:
        dob:
          description: Date of birth of the beneficial owner.
          format: date-time
          type: string
        first_name:
          description: First name of the beneficial owner.
          type: string
        home:
          $ref: "#/components/schemas/AddressRequestModel"
        last_name:
          description: Last name of the beneficial owner.
          type: string
        middle_name:
          description: Middle name of the beneficial owner.
          type: string
        phone:
          description: Ten-digit phone number of the beneficial owner.
          type: string
        ssn:
          description: Nine-digit Social Security Number (SSN) of the beneficial owner.
          type: string
        title:
          description: Title of the beneficial owner.
          type: string
      type: object
    beneficial_owner_response:
      description:
        Contains information about the beneficial owner of the business,
        if applicable.
      properties:
        first_name:
          description: |-
            First name of the beneficial owner.

            This field is returned if it exists in the resource.
          type: string
        getdob:
          description: |-
            Date of birth of the beneficial owner.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        home:
          $ref: "#/components/schemas/AddressResponseModel"
        last_name:
          description: |-
            Last name of the beneficial owner.

            This field is returned if it exists in the resource.
          type: string
        middle_name:
          description: |-
            Middle name of the beneficial owner.

            This field is returned if it exists in the resource.
          type: string
        phone:
          description: |-
            Ten-digit phone number of the beneficial owner.

            This field is returned if it exists in the resource.
          type: string
        title:
          description: |-
            Title of the beneficial owner.

            This field is returned if it exists in the resource.
          type: string
      type: object
    business_card_holder_response:
      properties:
        account_holder_group_token:
          description: |-
            Associates the specified account holder group with the business.

            This field is returned if it exists in the resource.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: false
          description: |-
            Specifies if the business is in the `ACTIVE` state on the Marqeta platform.

            This field is returned if it exists in the resource.
          type: boolean
        attestation_consent:
          default: false
          description: |-
            Indicates that the attester agrees that the information provided is correct and truthful.

            This field is returned if it exists in the resource.
          type: boolean
        attestation_date:
          description: |-
            Timestamp of the attestation.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        attester_name:
          description: |-
            Name of the attester for KYC verification.

            This field is returned if it exists in the resource.
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          description: |-
            Title of the attester for KYC verification.

            This field is returned if it exists in the resource.
          maxLength: 64
          minLength: 0
          type: string
        authentication:
          $ref: "#/components/schemas/Authentication"
        beneficial_owner1:
          $ref: "#/components/schemas/beneficial_owner_response"
        beneficial_owner2:
          $ref: "#/components/schemas/beneficial_owner_response"
        beneficial_owner3:
          $ref: "#/components/schemas/beneficial_owner_response"
        beneficial_owner4:
          $ref: "#/components/schemas/beneficial_owner_response"
        business_name_dba:
          description: |-
            Fictitious business name ("Doing Business As" or DBA).

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          description: |-
            Legal name of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          description: |-
            Indicates the type of business, for example B2B (business-to-business) or B2C (business-to-consumer).

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        created_time:
          description: Date and time when the business was created, in UTC.
          format: date-time
          type: string
        date_established:
          description: |-
            Date and time when the business was established.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        duns_number:
          description: |-
            Data Universal Numbering System (DUNS) number of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          description: |-
            General description of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        history:
          description: |-
            History of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description: |-
            One or more objects containing identifications associated with the business.

            Objects are returned if they exist in the resource.
          items:
            $ref: "#/components/schemas/IdentificationResponseModel"
          type: array
        in_current_location_since:
          description: |-
            Date on which the business office opened in its current location.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        incorporation:
          $ref: "#/components/schemas/business_incorporation_response"
        international_office_locations:
          description: |-
            Locations of the business' offices outside the US.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          description: |-
            IP address of the business.

            This field is returned if it exists in the resource.
          maxLength: 39
          minLength: 0
          type: string
        last_modified_time:
          description: Date and time when the business was last modified, in UTC.
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          description: |-
            Associates any additional metadata you provide with the business.

            Metadata is returned if it exists in the resource.
          type: object
        notes:
          description: |-
            Any additional information pertaining to the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: "#/components/schemas/AddressResponseModel"
        password:
          description: |-
            Password for the business account on the Marqeta platform.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 1
          type: string
        phone:
          description: |-
            10-digit telephone number of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: "#/components/schemas/PrimaryContactInfoModel"
        proprietor_is_beneficial_owner:
          default: false
          description: |-
            Indicates that the proprietor or officer of the business is also a beneficial owner.

            This field is returned if it exists in the resource.
          type: boolean
        proprietor_or_officer:
          $ref: "#/components/schemas/business_proprietor_response"
        status:
          description: |-
            Specifies the state of the business on the Marqeta platform.

            This field is returned if it exists in the resource.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        taxpayer_id:
          description: |-
            Taxpayer identifier of the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the business resource.

            This field is always returned.
          maxLength: 36
          minLength: 1
          type: string
        website:
          description: |-
            URL of the business' website.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    business_card_holder_update:
      properties:
        account_holder_group_token:
          description: Associates the specified account holder group with the business.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: true
          description:
            Specifies if the business is in the `ACTIVE` state on the Marqeta
            platform.
          type: boolean
        attestation_consent:
          default: false
          description: |-
            Indicates that the attester agrees that the information provided is correct and truthful.

            This field is required for KYC verification (US-based accounts only).
          type: boolean
        attestation_date:
          description: |-
            Timestamp of the attestation.

            This field is required for KYC verification (US-based accounts only).
          format: date-time
          type: string
        attester_name:
          description: |-
            Name of the attester for KYC verification.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          description: Title of the attester for KYC verification.
          maxLength: 64
          minLength: 0
          type: string
        beneficial_owner1:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner2:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner3:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner4:
          $ref: "#/components/schemas/beneficial_owner_request"
        business_name_dba:
          description: |-
            Fictitious business name ("Doing Business As" or DBA).

            This field is required for KYC verification (US-based accounts only).
            If your business does not use a fictitious business name, enter your legal business name again in this field.
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          description: |-
            Legal name of business.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          description:
            Indicates the type of business, for example business-to-business
            (B2B) or business-to-consumer (B2C).
          maxLength: 255
          minLength: 0
          type: string
        date_established:
          description: |-
            Date the business was established.

            This field is required for KYC verification (US-based accounts only).
          format: date-time
          type: string
        duns_number:
          description: Data Universal Numbering System (DUNS) number of the business.
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          description: General description of the business.
          maxLength: 255
          minLength: 0
          type: string
        history:
          description: History of the business.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description:
            One or more objects containing identifications associated with
            the business.
          items:
            $ref: "#/components/schemas/IdentificationRequestModel"
          type: array
        in_current_location_since:
          description: Date on which the business office opened in its current location.
          format: date-time
          type: string
        incorporation:
          $ref: "#/components/schemas/business_incorporation"
        international_office_locations:
          description: Locations of the business' offices outside the United States.
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          description: IP address of the business.
          maxLength: 39
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the business.
          type: object
        notes:
          description: Any additional information pertaining to the business.
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: "#/components/schemas/AddressRequestModel"
        password:
          description: Password for the business account on the Marqeta platform.
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: 10-digit telephone number of business.
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: "#/components/schemas/PrimaryContactInfoModel"
        proprietor_is_beneficial_owner:
          default: false
          description: |-
            Indicates that the proprietor or officer of the business is also a beneficial owner.

            This field is required for KYC verification in the United States if the business proprietor or officer is also a beneficial owner.
            If the proprietor or business officer is a beneficial owner, use this field to indicate their beneficial ownership.
            Do not include information about the proprietor or business officer in a `beneficial_owner` object.
          type: boolean
        proprietor_or_officer:
          $ref: "#/components/schemas/business_proprietor"
        taxpayer_id:
          description: Taxpayer identifier of the business.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the business.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        website:
          description: URL of the business' website.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_cardholder:
      properties:
        account_holder_group_token:
          description: |-
            Existing account holder group token that associates the specified account holder group with the business.
            Send a `GET` request to `/accountholdergroups` to retrieve account holder group tokens.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: true
          description:
            Specifies if the business is in the `ACTIVE` state on the Marqeta
            platform.
          type: boolean
        attestation_consent:
          default: false
          description: |-
            Indicates that the attester agrees that the information provided is correct and truthful.

            This field is required for KYC verification (US-based accounts only).
          type: boolean
        attestation_date:
          description: |-
            Timestamp of the attestation.

            This field is required for KYC verification (US-based accounts only).
          format: date-time
          type: string
        attester_name:
          description: |-
            Name of the attester for KYC verification.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 64
          minLength: 0
          type: string
        attester_title:
          description: Title of the attester for KYC verification.
          maxLength: 64
          minLength: 0
          type: string
        beneficial_owner1:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner2:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner3:
          $ref: "#/components/schemas/beneficial_owner_request"
        beneficial_owner4:
          $ref: "#/components/schemas/beneficial_owner_request"
        business_name_dba:
          description: |-
            Fictitious business name ("Doing Business As" or DBA).

            This field is required for KYC verification (US-based accounts only).
            If your business does not use a fictitious business name, enter your legal business name again in this field.
          maxLength: 255
          minLength: 0
          type: string
        business_name_legal:
          description: |-
            Legal name of business.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 255
          minLength: 0
          type: string
        business_type:
          description:
            Indicates the type of business, for example B2B (business-to-business)
            or B2C (business-to-consumer).
          maxLength: 255
          minLength: 0
          type: string
        date_established:
          description: |-
            Date the business was established.

            This field is required for KYC verification (US-based accounts only).
          format: date-time
          type: string
        duns_number:
          description: Data Universal Numbering System (DUNS) number of the business.
          maxLength: 255
          minLength: 0
          type: string
        general_business_description:
          description: General description of the business.
          maxLength: 255
          minLength: 0
          type: string
        history:
          description: History of the business.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description:
            One or more objects containing identifications associated with
            the business.
          items:
            $ref: "#/components/schemas/IdentificationRequestModel"
          type: array
        in_current_location_since:
          description: Date on which the business office opened in its current location.
          format: date-time
          type: string
        incorporation:
          $ref: "#/components/schemas/business_incorporation"
        international_office_locations:
          description: Locations of the business' offices outside the US.
          maxLength: 255
          minLength: 0
          type: string
        ip_address:
          description: IP address of the business.
          maxLength: 39
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the business.
          type: object
        notes:
          description: Any additional information pertaining to the business.
          maxLength: 255
          minLength: 0
          type: string
        office_location:
          $ref: "#/components/schemas/AddressRequestModel"
        password:
          description: Password for the business account on the Marqeta platform.
          maxLength: 255
          minLength: 1
          type: string
        phone:
          description: 10-digit telephone number of business.
          maxLength: 255
          minLength: 0
          type: string
        primary_contact:
          $ref: "#/components/schemas/PrimaryContactInfoModel"
        proprietor_is_beneficial_owner:
          default: false
          description: |-
            Indicates that the proprietor or officer of the business is also a beneficial owner.

            This field is required for KYC verification if the business proprietor or officer is also a beneficial owner.
          type: boolean
        proprietor_or_officer:
          $ref: "#/components/schemas/business_proprietor"
        taxpayer_id:
          description: Taxpayer identifier of the business.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the business resource.

            If you do not include a token, the system generates one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        website:
          description: URL of the business' website.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_incorporation:
      description: |-
        Contains information about the organizational structure of the business.

        This object is required for KYC verification (US-based accounts only).
      properties:
        address_registered_under:
          $ref: "#/components/schemas/AddressRequestModel"
        incorporation_type:
          description: |-
            Organizational structure of the business, such as corporation or sole proprietorship.

            This field is required for KYC verification (US-based accounts only).
          enum:
            - LLC
            - CORPORATION
            - SOLE_PROPRIETORSHIP
            - PARTNERSHIP
            - COOPERATIVE
            - OTHER
          maxLength: 255
          minLength: 0
          type: string
        is_public:
          default: false
          description: A value of `true` indicates that the business is publicly held.
          type: boolean
        name_registered_under:
          description: Name under which the business is registered.
          maxLength: 255
          minLength: 0
          type: string
        state_of_incorporation:
          description: |-
            State where the business is incorporated.

            This field is required for KYC verification (US-based accounts only).
          maxLength: 255
          minLength: 0
          type: string
        stock_symbol:
          description: Business stock symbol.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_incorporation_response:
      description:
        Contains information about the organizational structure of the
        business.
      properties:
        address_registered_under:
          $ref: "#/components/schemas/AddressResponseModel"
        incorporation_type:
          description: |-
            Organizational structure of the business (corporation or sole proprietorship, for example).

            This field is returned if it exists in the resource.
          enum:
            - LLC
            - CORPORATION
            - SOLE_PROPRIETORSHIP
            - PARTNERSHIP
            - OTHER
          maxLength: 255
          minLength: 0
          type: string
        is_public:
          default: false
          description: |-
            A value of `true` indicates that the business is publicly held.

            This field is returned if it exists in the resource.
          type: boolean
        name_registered_under:
          description: |-
            Name under which the business is registered.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        state_of_incorporation:
          description: |-
            State where the business is incorporated.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        stock_symbol:
          description: |-
            Stock symbol associated with the business.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
      type: object
    business_metadata:
      description:
        Contains customer-provided information about the business that
        funded the transaction.
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the business.
          type: object
      type: object
    business_proprietor:
      description: |-
        Contains information about the proprietor or officer of the business.

        This object is required for KYC verification of proprietors or officers of privately held businesses in the United States.
        This object is not required for publicly held businesses.
      properties:
        alternative_names:
          description: Alternate names of the business proprietor or officer.
          type: string
        dob:
          description: |-
            Business proprietor or officer's date of birth.

            This field is required for KYC verification (US-based accounts only).
          format: date-time
          type: string
        email:
          description: Email address of the business proprietor or officer.
          type: string
        first_name:
          description: First name of business proprietor or officer.
          type: string
        home:
          $ref: "#/components/schemas/AddressRequestModel"
        identifications:
          description:
            One or more objects containing personal identifications of
            the business proprietor or officer.
          items:
            $ref: "#/components/schemas/IdentificationRequestModel"
          type: array
        last_name:
          description: Last name of business proprietor or officer.
          type: string
        middle_name:
          description: Middle name of business proprietor or officer.
          type: string
        phone:
          description: Telephone number of the business proprietor or officer.
          type: string
        ssn:
          description:
            Social Security Number (SSN) of the business proprietor or
            officer.
          type: string
        title:
          description: Title of business proprietor or officer.
          type: string
      required:
        - first_name
        - last_name
      type: object
    business_proprietor_response:
      description: Contains information about the proprietor or officer of the business.
      properties:
        alternative_names:
          description: |-
            Alternate names of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        dob:
          description: |-
            Business proprietor or officer's date of birth.

            This field is returned if it exists in the resource.
          format: date-time
          type: string
        email:
          description: |-
            Email address of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        first_name:
          description: |-
            First name of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        home:
          $ref: "#/components/schemas/AddressResponseModel"
        identifications:
          description: |-
            One or more objects containing personal identifications of the business proprietor or officer.

            This field is returned if it exists in the resource.
          items:
            $ref: "#/components/schemas/IdentificationResponseModel"
          type: array
        last_name:
          description: |-
            Last name of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        middle_name:
          description: |-
            Middle name of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        phone:
          description: |-
            Telephone number of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        ssn:
          description: |-
            Social Security Number (SSN) of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
        title:
          description: |-
            Title of the business proprietor or officer.

            This field is returned if it exists in the resource.
          type: string
      type: object
    card_acceptor_model:
      properties:
        address:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        country:
          type: string
        customer_service_phone:
          type: string
        ecommerce_security_level_indicator:
          type: string
        mcc:
          maxLength: 5
          minLength: 0
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
        partial_approval_capable:
          default: false
          type: boolean
        phone:
          type: string
        state:
          type: string
        url:
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
      type: object
    card_holder_address_model:
      properties:
        active:
          default: true
          description: Specifies whether the address is active.
          type: boolean
        address_1:
          description: Street name and number of the address.
          maxLength: 255
          minLength: 0
          type: string
        address_2:
          description: Additional address information.
          maxLength: 255
          minLength: 0
          type: string
        business_token:
          description: |-
            Unique identifier of the business account holder.
            This token is required if a `user_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        city:
          description: City of the address.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country of the address.
          maxLength: 40
          minLength: 1
          type: string
        first_name:
          description: First name or given name of the account holder.
          maxLength: 40
          minLength: 0
          type: string
        is_default_address:
          default: false
          description: |-
            A value of `true` specifies that this address is the default address used by the account holder's funding source.
            If this is the account holder's only address, it is used as the default regardless of this field's setting.
          type: boolean
        last_name:
          description: Last name or family name of the account holder.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Telephone number of the account holder.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the address.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: |-
            Two-character state, province, or territorial abbreviation.

            For a complete list of valid state and province abbreviations, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.
          maxLength: 2
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the address.
            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the user account holder.
            This token is required if a `business_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        zip:
          description: |-
            United States ZIP code.
            This field is required if `postal_code` is not specified.
          maxLength: 10
          minLength: 0
          type: string
      required:
        - address_1
        - city
        - country
        - first_name
        - last_name
        - state
      type: object
    card_holder_address_update_model:
      properties:
        active:
          default: true
          description: Specifies whether the address is active.
          type: boolean
        address_1:
          description: Street name and number of the address.
          maxLength: 255
          minLength: 0
          type: string
        address_2:
          description: Additional address information.
          maxLength: 255
          minLength: 0
          type: string
        city:
          description: City of the address.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country of the address.
          maxLength: 40
          minLength: 0
          type: string
        first_name:
          description: First name or given name of the account holder.
          maxLength: 40
          minLength: 0
          type: string
        is_default_address:
          default: false
          description: |-
            A value of `true` specifies that this address is the default address used by the account holder's funding source.
            If this is the account holder's only address, it is used as the default regardless of this field's setting.
          type: boolean
        last_name:
          description: Last name or family name of the account holder.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Telephone number of the account holder.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the address.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: |-
            Two-character state, province, or territorial abbreviation.

            For a complete list, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.
          maxLength: 2
          minLength: 0
          type: string
        zip:
          description: United States ZIP code of the address.
          maxLength: 10
          minLength: 0
          type: string
      type: object
    card_holder_model:
      description: Contains information about a cardholder.
      properties:
        account_holder_group_token:
          description: |-
            Associates the specified account holder group with the cardholder.

            Send a `GET` request to `/accountholdergroups` to retrieve account holder group tokens.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: true
          description: |-
            Specifies if the cardholder is in the `ACTIVE` state on the Marqeta platform.

            *NOTE:* Do not set the value of the `user.active` field directly.
            Instead, use the `/usertransitions` endpoints to transition user resources between statuses.
            For more information on status changes, see <</core-api/user-transitions#postUsertransitions, Create User Transition>>.
          type: boolean
        address1:
          description: |-
            Cardholder's address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
            Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: |-
            Additional address information for the cardholder.

            *NOTE:* Cannot perform KYC if set to a PO Box.
          maxLength: 255
          minLength: 0
          type: string
        birth_date:
          description: |-
            Cardholder's date of birth.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          type: string
        city:
          description: |-
            City where the cardholder resides.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        company:
          description: Company name.
          maxLength: 255
          minLength: 0
          type: string
        corporate_card_holder:
          default: false
          description: Specifies if the cardholder holds a corporate card.
          type: boolean
        country:
          description: |-
            Country where the cardholder resides.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        email:
          description: |-
            Valid email address of the cardholder.

            This value must be unique among users.

            *NOTE:* Required for KYC verification by certain banks (US-based cardholders only).
            To determine if you must provide an email address, contact your Marqeta representative.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: |-
            Cardholder's first name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        gender:
          description: Gender of the cardholder.
          enum:
            - F
            - M
          maxLength: 1
          minLength: 0
          type: string
        honorific:
          description:
            "Cardholder's title or prefix: Dr., Miss, Mr., Ms., and so
            on."
          maxLength: 10
          minLength: 0
          type: string
        id_card_expiration_date:
          description: Expiration date of the cardholder's identification card.
          type: string
        id_card_number:
          description: Cardholder's identification card number.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description:
            One or more objects containing identifications associated with
            the cardholder.
          items:
            $ref: "#/components/schemas/IdentificationRequestModel"
          type: array
        ip_address:
          description: Cardholder's IP address.
          maxLength: 39
          minLength: 0
          type: string
        last_name:
          description: |-
            Cardholder's last name.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 40
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
          type: object
        middle_name:
          description: Cardholder's middle name.
          maxLength: 40
          minLength: 0
          type: string
        nationality:
          description: Cardholder's nationality.
          maxLength: 255
          minLength: 0
          type: string
        notes:
          description: Any additional information pertaining to the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        parent_token:
          description: |-
            Unique identifier of the parent user or business resource.
            Send a `GET` request to `/users` to retrieve user resource tokens or to `/businesses` to retrieve business resource tokens.

            Required if `uses_parent_account = true`.
            This user or business is configured as the parent of the current user.
          maxLength: 36
          minLength: 1
          type: string
        passport_expiration_date:
          description: Expiration date of the cardholder's passport.
          type: string
        passport_number:
          description: Cardholder's passport number.
          maxLength: 40
          minLength: 0
          type: string
        password:
          description: |-
            Password to the cardholder's user account on the Marqeta platform.

            * Must contain at least one numeral +
            * Must contain at least one lowercase letter +
            * Must contain at least one uppercase letter +
            * Must contain at least one of these symbols: `@ # $ % ! ^ & * ( ) \ _ + ~ ` - = [ ] { } , ; : ' " , . / < > ?`
          maxLength: 255
          minLength: 0
          type: string
        phone:
          description: |-
            Telephone number of the cardholder (including area code), prepended by the `+` symbol and the 1- to 3-digit country calling code.
            Do not include hyphens, spaces, or parentheses.

            *NOTE:* Required for KYC verification by certain banks (US-based cardholders only).
            To determine if you must provide a phone number, contact your Marqeta representative.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: |-
            Postal code of the cardholder's address.

            *NOTE:* Required for KYC verification (US-based cardholders only).
          maxLength: 10
          minLength: 0
          type: string
        ssn:
          description: Cardholder's Social Security Number (SSN).
          type: string
        state:
          description: |-
            State or province where the cardholder resides.

            *NOTE:* <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid two-character abbreviation>> required for KYC verification (US-based cardholders only).
          maxLength: 32
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the cardholder.
            If you do not include a token, the system generates one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        uses_parent_account:
          default: false
          description: |-
            Indicates whether the child shares balances with the parent (`true`), or the child's balances are independent of the parent (`false`).

            If set to `true`, you must also include a `parent_token` in the request.
            This value cannot be updated.
          type: boolean
      type: object
    card_life_cycle:
      description:
        Defines characteristics of the lifecycle of cards of this card
        product type.
      properties:
        activate_upon_issue:
          default: false
          description:
            A value of `true` indicates that cards of this card product
            type are active once they are issued.
          type: boolean
        card_service_code:
          default: 101
          description: |-
            Sequence of three digits that defines various services, differentiates card usage in international or domestic interchange, designates personal identification number (PIN) and authorization requirements, and identifies card restrictions.
            The following values are commonly used:

            *First digit*

            * *1* — International interchange OK
            * *2* — International interchange, use IC (chip) where feasible
            * *5* — National interchange only except under bilateral agreement
            * *6* — National interchange only except under bilateral agreement, use IC (chip) where feasible
            * *7* — No interchange except under bilateral agreement (closed loop)
            * *9* — Test

            *Second digit*

            * *0* — Normal
            * *2* — Contact issuer via online means
            * *4* — Contact issuer via online means except under bilateral agreement

            *Third digit*

            * *0* — No restrictions, PIN required
            * *1* — No restrictions
            * *2* — Goods and services only (no cash)
            * *3* — ATM only, PIN required
            * *4* — Cash only
            * *5* — Goods and services only (no cash), PIN required
            * *6* — No restrictions, use PIN where feasible
            * *7* — Goods and services only (no cash), use PIN where feasible
          format: int32
          type: integer
        expiration_offset:
          $ref: "#/components/schemas/expiration_offset_with_minimum"
        update_expiration_upon_activation:
          default: false
          description: |-
            Normally, the `expiration_offset` is measured from the date of issue.
            Set this field to `true` to measure `expiration_offset` from the date of activation instead.
          type: boolean
      type: object
    card_metadata:
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-injected metadata with the card.
          type: object
      type: object
    card_personalization:
      description: Specifies personalized attributes to be added to the card.
      properties:
        carrier:
          $ref: "#/components/schemas/carrier"
        images:
          $ref: "#/components/schemas/images"
        perso_type:
          description: Specifies the type of card personalization.
          enum:
            - EMBOSS
            - LASER
            - FLAT
          type: string
        text:
          $ref: "#/components/schemas/text"
      required:
        - text
      type: object
    card_product_config:
      description: |-
        Defines the characteristics of the card product.
        Configurations are conditionally required based on program setup.

        For more information, contact your Marqeta representative.
      properties:
        card_life_cycle:
          $ref: "#/components/schemas/card_life_cycle"
        clearing_and_settlement:
          $ref: "#/components/schemas/clearing_and_settlement"
        digital_wallet_tokenization:
          $ref: "#/components/schemas/digital_wallet_tokenization"
        fulfillment:
          $ref: "#/components/schemas/card_product_fulfillment"
        jit_funding:
          $ref: "#/components/schemas/jit_funding"
        poi:
          $ref: "#/components/schemas/poi"
        selective_auth:
          $ref: "#/components/schemas/selective_auth"
        special:
          $ref: "#/components/schemas/special"
        transaction_controls:
          $ref: "#/components/schemas/transaction_controls"
      type: object
    card_product_fulfillment:
      description:
        Determines physical characteristics of a card, along with its bulk
        shipment information.
      properties:
        all_zero_card_security_code:
          default: false
          description:
            If `true`, an all zero code (000) is allowed as a valid value
            in an authorization request.
          type: boolean
        allow_card_creation:
          default: true
          description: |-
            Controls the ability to create cards from this card product; `true` allows and `false` disallows the creation of cards.

            *NOTE:* The card product's `active` field has no effect on card creation or the behavior of this field.
          type: boolean
        bin_prefix:
          description: Prefix of the bank identification number.
          type: string
        bulk_ship:
          default: false
          description:
            Enables bulk ordering of cards of this card product type using
            the `/bulkissuances` endpoint.
          type: boolean
        card_personalization:
          $ref: "#/components/schemas/card_personalization"
        enable_offline_pin:
          default: false
          description:
            Enables offline personal identification number (PIN) verification
            for Europay Mastercard and Visa (EMV, or "chip-and-PIN") card payments.
          type: boolean
        fulfillment_provider:
          default: PERFECTPLASTIC
          description: |-
            Specifies the fulfillment provider.

            *NOTE:* Expedited processing is available for cards that are fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window="_blank"], link:http://www.idemia.com[IDEMIA, window="_blank"], and link:https://www.arroweye.com/[Arroweye Solutions, window="_blank"].
            You can expedite an order's processing by using the `expedite` field of the <</core-api/cards, card>> or <</core-api/bulk-card-orders, bulkissuance>> object.
            Contact your Marqeta representative for information regarding the cost of expedited service.
          enum:
            - PERFECTPLASTIC
            - ARROWEYE
            - IDEMIA
            - IDEMIA_UK
            - IDEMIA_FR
            - IDEMIA_CZ
            - IDEMIA_APAC
            - IDEMIA_PL
            - IDEMIA_AU
            - IDEMIA_LA
            - GEMALTO
            - NITECREST
            - OBERTHUR
            - ALLPAY
          type: string
        package_id:
          default: "0"
          description: Card fulfillment provider's package ID.
          maxLength: 50
          minLength: 1
          type: string
        pan_length:
          default: "16"
          description: Specifies the length of the primary account number (PAN).
          type: string
        payment_instrument:
          default: PHYSICAL_MSR
          description:
            Specifies the physical form cards of this card product type
            will take.
          enum:
            - PHYSICAL_MSR
            - PHYSICAL_ICC
            - PHYSICAL_CONTACTLESS
            - PHYSICAL_COMBO
            - VIRTUAL_PAN
          type: string
        shipping:
          $ref: "#/components/schemas/shipping"
        uppercase_name_lines:
          default: true
          description: |-
            A value of `true` sets the text in the `fulfillment.card_personalization.text.name_line_1` and `name_line_2` fields to all uppercase letters.
            A value of `false` leaves the text in its original state.
          type: boolean
      required:
        - card_personalization
      type: object
    card_product_request:
      properties:
        active:
          default: false
          description: |-
            Indicates whether the card product is active.

            *NOTE:* This field has no effect on the ability to create cards from this card product.
            Use the `config.fulfillment.allow_card_creation` field to allow/disallow card creation.
          type: boolean
        config:
          $ref: "#/components/schemas/card_product_config"
        end_date:
          description: End date of the range over which the card product can be active.
          format: date
          type: string
        name:
          description: |-
            Name of the card product.
            Marqeta recommends that you use a unique string.
          maxLength: 40
          minLength: 1
          type: string
        start_date:
          description: |-
            Date when the card product becomes active.
            If the start date has passed and the card is set to `active = false`, then the card will not be activated.
          format: date
          type: string
        token:
          description: |-
            Unique identifier of the card product.

            If you do not include a token, the system will generate one automatically.
            This token is required in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
        - start_date
      type: object
    card_product_response:
      properties:
        active:
          default: false
          description: |-
            Indicates whether the card product is active.

            This field is returned if it exists in the resource.
          type: boolean
        config:
          $ref: "#/components/schemas/card_product_config"
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        end_date:
          description: |-
            End date of the range over which the card product can be active.

            This field is returned if it exists in the resource.
          format: date
          type: string
        last_modified_time:
          description: Date and time when the resource was last updated, in UTC.
          format: date-time
          type: string
        name:
          description: Name of the card product.
          maxLength: 40
          minLength: 1
          type: string
        start_date:
          description: Date when the card product becomes active.
          format: date
          type: string
        token:
          description: Unique identifier of the card product.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - last_modified_time
        - name
        - start_date
      type: object
    card_product_update_model:
      properties:
        active:
          default: false
          description: |-
            Indicates whether the card product is active.

            *NOTE:* This field has no effect on the ability to create cards from this card product.
            Use the `config.fulfillment.allow_card_creation` field to allow/disallow card creation.
          type: boolean
        config:
          $ref: "#/components/schemas/card_product_config"
        end_date:
          description: End date of the range over which the card product can be active.
          format: date
          type: string
        name:
          description: |-
            Name of the card product.
            Marqeta recommends that you use a unique string.
          maxLength: 40
          minLength: 0
          type: string
        start_date:
          description: |-
            Date the card product becomes active.
            If the start date has passed and the card is set to `active = false`, then the card will not be activated.
          format: date
          type: string
      type: object
    card_request:
      properties:
        activation_actions:
          $ref: "#/components/schemas/activation_actions"
        bulk_issuance_token:
          description: |-
            Associates the card with the specified bulk card order.
            This field cannot be updated.
          type: string
        card_product_token:
          description: Unique identifier of the card product.
          maxLength: 36
          minLength: 1
          type: string
        expedite:
          default: false
          description: |-
            Set to `true` to request expedited processing of the card by your card fulfillment provider.

            This expedited service is available for cards fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window="_blank"], link:http://www.idemia.com[IDEMIA, window="_blank"], and link:https://www.arroweye.com/[Arroweye Solutions, window="_blank"].

            *NOTE:* Contact your Marqeta representative for information regarding the cost of expedited service.
          type: boolean
        expiration_offset:
          $ref: "#/components/schemas/expiration_offset"
        fulfillment:
          $ref: "#/components/schemas/CardFulfillmentRequest"
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
          type: object
        new_pan_from_card_token:
          description: |-
            Reissues the specified card (known as the "source" card) with a new primary account number (PAN).

            This field reissues a card with a new PAN from the specified source card.
            The source card is automatically terminated when the card is reissued with the new PAN.
            Use this field when reissuing a lost or stolen card.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
          maxLength: 36
          minLength: 0
          type: string
        reissue_pan_from_card_token:
          description: |-
            Reissues the specified card (known as the "source" card).

            This field reissues a card by copying the primary account number (PAN) and personal identification number (PIN) from the specified source card to the newly created card.
            The reissued card has the same PAN and PIN as the source card but a new expiration date and CVV2 number.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.

            *NOTE:* By default, the source card is automatically terminated when the reissued card is activated.
            However, if your program is configured for multiple active cards, you can prevent the source card from being automatically terminated by setting the `activation_actions.terminate_reissued_source_card` field to `false`.
          maxLength: 36
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the card.

            If you do not include a token, the system will generate one automatically.
            Other API calls will require this token, so we recommend creating a token that is easy to remember rather than letting the system generate one.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        translate_pin_from_card_token:
          description: |-
            Copies the PIN from the specified card to the newly created card.

            Both cards must belong to the same user.
            Populating this field will raise an error if `reissue_pan_from_card_token` is also set.

            Send a `GET` request to `/cards/user/{token}` to retrieve card tokens for a particular user.
          maxLength: 36
          minLength: 0
          type: string
        user_token:
          description: Unique identifier of the authorized user of the card.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - card_product_token
        - user_token
      type: object
    card_response:
      description: Contains information about the card used in the transaction.
      properties:
        activation_actions:
          $ref: "#/components/schemas/activation_actions"
        barcode:
          description: Barcode printed on the card, expressed as numerals.
          type: string
        bulk_issuance_token:
          description: Unique identifier of the bulk card order.
          type: string
        card_product_token:
          description: Unique identifier of the card product.
          type: string
        chip_cvv_number:
          description:
            Three-digit card verification value (ICVV) stored on the chip
            of the card.
          type: string
        contactless_exemption_counter:
          description: |-
            Running count of the contactless transactions successfully completed since the last strong customer authentication (SCA) challenge was issued.
            You can limit the number of contactless transactions that can be performed without issuing an SCA challenge at the card product level.

            For more information about strong customer authentication, see <</core-api/card-products, Card Products>>.
          format: int32
          type: integer
        contactless_exemption_total_amount:
          description: |-
            Running total of the money spent in contactless transactions successfully completed since the last strong customer authentication (SCA) challenge was issued.
            You can limit the total amount that can be spent in contactless transactions without issuing an SCA challenge at the card product level.

            For more information about strong customer authentication, see <</core-api/card-products, Card Products>>.
          type: number
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        cvv_number:
          description:
            Three-digit card verification value (CVV2 or CVC2) printed
            on the card.
          type: string
        expedite:
          default: false
          description:
            A value of `true` indicates that you requested expedited processing
            of the card from your card fulfillment provider.
          type: boolean
        expiration:
          description: Expiration date in `MMyy` format.
          type: string
        expiration_time:
          description: Expiration date and time, in UTC.
          format: date-time
          type: string
        fulfillment:
          $ref: "#/components/schemas/CardFulfillmentResponse"
        fulfillment_status:
          description: |-
            Card fulfillment status:

            * *ISSUED:* Initial state of all newly created/issued cards.
            * *ORDERED:* Card ordered through the card fulfillment provider.
            * *REORDERED:* Card reordered through the card fulfillment provider.
            * *REJECTED:* Card rejected by the card fulfillment provider.
            * *SHIPPED:* Card shipped by the card fulfillment provider.
            * *DELIVERED:* Card delivered by the card fulfillment provider.
            * *DIGITALLY_PRESENTED:* Card digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards.
          enum:
            - ISSUED
            - ORDERED
            - REORDERED
            - REJECTED
            - SHIPPED
            - DELIVERED
            - DIGITALLY_PRESENTED
          type: string
        instrument_type:
          description: |-
            Instrument type of the card:

            * *PHYSICAL_MSR:* A physical card with a magnetic stripe. This is the default physical card type.
            * *PHYSICAL_ICC:* A physical card with an integrated circuit, or "chip."
            * *PHYSICAL_CONTACTLESS:* A physical card that uses radio frequency identification (RFID) or near-field communication (NFC) to enable payment over a secure radio interface.
            * *PHYSICAL_COMBO:* A physical card with a chip that also supports contactless payments.
            * *VIRTUAL_PAN:* A virtual card with a primary account number (PAN).
          enum:
            - PHYSICAL_MSR
            - PHYSICAL_ICC
            - PHYSICAL_CONTACTLESS
            - PHYSICAL_COMBO
            - VIRTUAL_PAN
          type: string
        last_four:
          description: Last four digits of the card primary account number (PAN).
          type: string
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
          type: object
        new_pan_from_card_token:
          description:
            Reissues the specified card (known as the "source" card) with
            a new primary account number (PAN).
          type: string
        pan:
          description: Primary account number (PAN) of the card.
          type: string
        pin_is_set:
          default: false
          description:
            Specifies if the personal identification number (PIN) has been
            set for the card.
          type: boolean
        reissue_pan_from_card_token:
          description: Reissues the specified card (known as the "source" card).
          type: string
        state:
          description: Indicates the state of the card.
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNSUPPORTED
            - UNACTIVATED
            - LIMITED
          type: string
        state_reason:
          description: |-
            Descriptive reason for why the card is in its current state.
            For example, "Card activated by cardholder".
          type: string
        token:
          description: Unique identifier of the card.
          type: string
        translate_pin_from_card_token:
          description:
            Copies the personal identification number (PIN) from the specified
            source card to the newly created card.
          type: string
        user_token:
          description: Unique identifier of the cardholder.
          type: string
      required:
        - barcode
        - card_product_token
        - created_time
        - expiration
        - expiration_time
        - fulfillment_status
        - last_four
        - last_modified_time
        - pan
        - pin_is_set
        - state
        - state_reason
        - token
        - user_token
      type: object
    card_security_code_verification:
      description:
        Contains information about a verification check performed on the
        card's security code.
      properties:
        response:
          $ref: "#/components/schemas/response"
        type:
          description: |-
            Indicates the type of security code.
            Can have these possible values:

            * *CVV1*  the security code stored in the magnetic stripe on the card.
            * *CVV2*  the security code printed on the card.
            * *ICVV*  the security code stored on the chip of the card.
            * *DCVV*  a dynamic security code used in some contactless payments when a card or device is tapped against the card reader.
          enum:
            - CVV1
            - CVV2
            - ICVV
            - DCVV
          type: string
      required:
        - response
        - type
      type: object
    card_swap_hash:
      description:
        Contains identifiers for swapping digital wallet tokens between
        cards.
      properties:
        new_card_token:
          description:
            Unique identifier of the new card resource to which the digital
            wallet tokens are assigned.
          maxLength: 36
          minLength: 1
          type: string
        previous_card_token:
          description:
            Unique identifier of the existing card resource that has digital
            wallet tokens assigned to it.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - new_card_token
        - previous_card_token
      type: object
    card_transition_request:
      properties:
        card_token:
          description: Identifies the card whose state will transition.
          maxLength: 36
          minLength: 1
          type: string
        channel:
          description: |-
            The mechanism by which the transition was initiated.

            * *ADMIN* - Indicates that the card transition was initiated through the Marqeta Dashboard.
            * *API* - Indicates that the card transition was initiated by you through the Core API.
            Use this value when creating a card transition with an API `POST` request.
            * *FRAUD* - Indicates that either Marqeta or the card network has determined that the card is fraudulent.
            * *IVR* - Indicates that the card transition was initiated through your Interactive Voice Response system.
            * *SYSTEM* - Indicates that the card transition was initiated by Marqeta.
            For example, Marqeta suspended the card due to excessive failed personal identification number (PIN) entries.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        reason:
          description: Additional information about the state change.
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          description: |-
            Standard code describing the reason for the transition.

            *NOTE:* This field is required if your program uses v2 of the `user_card_state_version`, which is a program-specific configuration value that is managed by Marqeta and cannot be accessed via the API.
            To learn more about the `user_card_state_version` program configuration, contact your Marqeta representative.

            * *00:* Object activated for the first time
            * *01:* Requested by you
            * *02:* Inactivity over time
            * *03:* This address cannot accept mail or the addressee is unknown
            * *04:* Negative account balance
            * *05:* Account under review
            * *06:* Suspicious activity was identified
            * *07:* Activity outside the program parameters was identified
            * *08:* Confirmed fraud was identified
            * *09:* Matched with an Office of Foreign Assets Control list
            * *10:* Card was reported lost
            * *11:* Card information was cloned
            * *12:* Account or card information was compromised
            * *13:* Temporary status change while on hold/leave
            * *14:* Initiated by Marqeta
            * *15:* Initiated by issuer
            * *16:* Card expired
            * *17:* Failed KYC
            * *18:* Changed to `ACTIVE` because information was properly validated
            * *19:* Changed to `ACTIVE` because account activity was properly validated
            * *20:* Change occurred prior to the normalization of reason codes
            * *21:* Initiated by a third party, often a digital wallet provider
            * *22:* PIN retry limit reached
            * *23:* Card was reported stolen
            * *24:* Address issue
            * *25:* Name issue
            * *26:* SSN issue
            * *27:* DOB issue
            * *28:* Email issue
            * *29:* Phone issue
            * *30:* Account/fulfillment mismatch
            * *31:* Other reason
          enum:
            - "00"
            - "01"
            - "02"
            - "03"
            - "04"
            - "05"
            - "06"
            - "07"
            - "08"
            - "09"
            - "10"
            - "11"
            - "12"
            - "13"
            - "14"
            - "15"
            - "16"
            - "17"
            - "18"
            - "19"
            - "20"
            - "21"
            - "22"
            - "23"
            - "24"
            - "25"
            - "26"
            - "27"
            - "28"
            - "29"
            - "30"
            - "31"
            - "32"
          type: string
        state:
          description: Specifies the new state.
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
          readOnly: true
          type: string
        sync_state_with_dwts:
          description: |-
            Set this field to `true` to synchronize the state of the card's associated token(s) with the card's new state.
            The digital wallet tokens must be in a valid starting state for the given transition, which will reflect the card's state transition.
            For example, if the card is transitioning from the `ACTIVE` state to the `SUSPENDED` state, only digital wallet tokens in the `ACTIVE` state will be synchronized with the card state transition and therefore be transitioned to the `SUSPENDED` state.

            Leave this field blank or set it to `false` to keep the states of the card and its digital wallet tokens independent.
          readOnly: true
          type: boolean
        token:
          description: |-
            Unique identifier of the card transition.

            If you do not include a token, the system will generate one automatically.
            This token is referenced in other API calls, so we recommend that you define a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        validations:
          $ref: "#/components/schemas/ValidationsRequest"
      required:
        - card_token
        - channel
        - state
      type: object
    card_transition_response:
      properties:
        barcode:
          description: The barcode printed on the card, expressed as digits.
          type: string
        bulk_issuance_token:
          description: The unique identifier of the bulk card order.
          type: string
        card:
          $ref: "#/components/schemas/card_metadata"
        card_product_token:
          description: Unique identifier of the card product.
          maxLength: 36
          minLength: 0
          type: string
        card_token:
          description: Unique identifier of the card.
          maxLength: 36
          minLength: 1
          type: string
        channel:
          description: |-
            The mechanism by which the transition was initiated.

            * *ADMIN* - Indicates that the card transition was initiated through the Marqeta Dashboard.
            * *API* - Indicates that the card transition was initiated by you through the Core API.
            Use this value when creating a card transition with an API `POST` request.
            * *FRAUD* - Indicates that either Marqeta or the card network has determined that the card is fraudulent.
            * *IVR* - Indicates that the card transition was initiated through your Interactive Voice Response system.
            * *SYSTEM* - Indicates that the card transition was initiated by Marqeta.
            For example, Marqeta suspended the card due to excessive failed personal identification number (PIN) entries.
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        expedite:
          default: false
          description:
            A value of `true` indicates that you requested expedited processing
            of the card from your card fulfillment provider.
          type: boolean
        expiration:
          description: Expiration date in `MMyy` format.
          type: string
        expiration_time:
          description: Expiration date and time in UTC format.
          type: string
        fulfillment:
          $ref: "#/components/schemas/CardFulfillmentRequest"
        fulfillment_status:
          description: |-
            Provides status information about the card related to order and delivery.

            The possible fulfillment states are:

            * *ISSUED:* Initial state of all newly created/issued cards
            * *ORDERED:* Card ordered through card fulfillment provider
            * *REJECTED:* Card rejected by card fulfillment provider
            * *SHIPPED:* Card shipped by card fulfillment provider
            * *DELIVERED:* Card delivered by the card fulfillment provider.
            * *DIGITALLY_PRESENTED:* Card digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards
          enum:
            - ISSUED
            - ORDERED
            - REJECTED
            - SHIPPED
            - DELIVERED
            - DIGITALLY_PRESENTED
          type: string
        last_four:
          description: Last four digits of the card primary account number (PAN).
          type: string
        new_pan_from_card_token:
          description:
            Reissues the specified ("source") card with a new primary account
            number (PAN).
          type: string
        pan:
          description: Primary account number (PAN) of the card.
          type: string
        pin_is_set:
          default: false
          description:
            Specifies if the personal identification number (PIN) has been
            set for the card.
          type: boolean
        reason:
          description: Additional information about the state change.
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          description: |-
            A standard code describing the reason for the transition:

            * *00:* Object activated for the first time
            * *01:* Requested by you
            * *02:* Inactivity over time
            * *03:* This address cannot accept mail or the addressee is unknown
            * *04:* Negative account balance
            * *05:* Account under review
            * *06:* Suspicious activity was identified
            * *07:* Activity outside the program parameters was identified
            * *08:* Confirmed fraud was identified
            * *09:* Matched with an Office of Foreign Assets Control list
            * *10:* Card was reported lost
            * *11:* Card information was cloned
            * *12:* Account or card information was compromised
            * *13:* Temporary status change while on hold/leave
            * *14:* Initiated by Marqeta
            * *15:* Initiated by issuer
            * *16:* Card expired
            * *17:* Failed KYC
            * *18:* Changed to `ACTIVE` because information was properly validated
            * *19:* Changed to `ACTIVE` because account activity was properly validated
            * *20:* Change occurred prior to the normalization of reason codes
            * *21:* Initiated by a third party, often a digital wallet provider
            * *22:* PIN retry limit reached
            * *23:* Card was reported stolen
            * *24:* Address issue
            * *25:* Name issue
            * *26:* SSN issue
            * *27:* DOB issue
            * *28:* Email issue
            * *29:* Phone issue
            * *30:* Account/fulfillment mismatch
            * *31:* Other reason
          enum:
            - "00"
            - "01"
            - "02"
            - "03"
            - "04"
            - "05"
            - "06"
            - "07"
            - "08"
            - "09"
            - "10"
            - "11"
            - "12"
            - "13"
            - "14"
            - "15"
            - "16"
            - "17"
            - "18"
            - "19"
            - "20"
            - "21"
            - "22"
            - "23"
            - "24"
            - "25"
            - "26"
            - "27"
            - "28"
            - "29"
            - "30"
            - "31"
            - "32"
          type: string
        reissue_pan_from_card_token:
          description: Reissues the specified ("source") card.
          type: string
        state:
          description: Indicates the state of the card.
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNACTIVATED
          type: string
        token:
          description: Unique identifier of the card transition.
          maxLength: 36
          minLength: 1
          type: string
        type:
          description: |-
            This field cannot be set directly using the `/cardtransitions` endpoint.
            A card transition's `type` is managed by the Marqeta platform, based on the before and after state of the transition, as specified in the request's `state` field.

            This field appears only when populated by the card fulfillment provider.
            The `type` field's possible values are:

            * *fulfillment.delivered:* Card was delivered by the card fulfillment provider
            * *fulfillment.digitally_presented:* Card was digitally presented using the `/cards/{token}/showpan` endpoint; does not affect the delivery of physical cards
            * *fulfillment.issued:* Card was created/issued
            * *fulfillment.ordered:* Card was ordered from the card fulfillment provider
            * *fulfillment.rejected:* Card was rejected by the card fulfillment provider
            * *fulfillment.shipped:* Card was shipped by the card fulfillment provider
            * *state.activated:* Card was activated
            * *state.limited:* Card was limited
            * *state.reinstated:* Card was reinstated from a suspended state
            * *state.suspended:* Card was suspended
            * *state.terminated:* Card was terminated

            //Also appears in /core-api/event-types#_card_transition_events
          enum:
            - fulfillment.issued
            - state.activated
            - state.suspended
            - state.reinstated
            - state.terminated
            - state.limited
            - fulfillment.ordered
            - fulfillment.rejected
            - fulfillment.shipped
            - fulfillment.delivered
            - fulfillment.digitally_presented
          readOnly: true
          type: string
        user:
          $ref: "#/components/schemas/cardholder_metadata"
        user_token:
          description: Unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
        validations:
          $ref: "#/components/schemas/ValidationsResponse"
      required:
        - barcode
        - card_product_token
        - card_token
        - channel
        - expiration
        - expiration_time
        - fulfillment_status
        - last_four
        - pan
        - pin_is_set
        - state
        - token
        - type
        - user_token
      type: object
    card_update_request:
      properties:
        expedite:
          default: false
          description: |-
            Set to `true` to request expedited processing of the card by your card fulfillment provider.

            This expedited service is available for cards fulfilled by link:http://perfectplastic.com/[Perfect Plastic Printing, window="_blank"], link:http://www.idemia.com[IDEMIA, window="_blank"], and link:https://www.arroweye.com/[Arroweye Solutions, window="_blank"].

            *NOTE:* Contact your Marqeta representative for information regarding the cost of expedited service.
          type: boolean
        fulfillment:
          $ref: "#/components/schemas/CardFulfillmentRequest"
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the card.
          type: object
        token:
          description: Unique identifier of the card you want to update.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: Specifies the user you want to associate with the card.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    cardholder_authentication_data:
      description: |-
        Contains 3D Secure authentication data:

        * `electronic_commerce_indicator`  The level of verification performed.
        * `verification_result`  The result of the verification.
        * `verification_value_created_by`  The transaction participant who determined the verification result.
        * `three_ds_message_version`  The 3D Secure message version used for authentication.
        * `authentication_method`  The 3D Secure authentication method.
        * `authentication_status`  The 3D Secure authentication status.
        * `acquirer_exemption`  Indicates a 3D Secure authentication exemption from the acquirer.
        * `issuer_exemption`  Indicates a 3D Secure authentication exemption from the issuer.
      properties:
        acquirer_exemption:
          description: |-
            Indicates 3D Secure authentication exemptions from the acquirer.
            This array is returned if it is included in the transaction data from the card network.
          items:
            type: string
          type: array
        authentication_method:
          description: Specifies the 3D Secure authentication method.
          type: string
        authentication_status:
          description: |-
            Specifies the status of the 3D Secure authentication:

            * `ATTEMPTED`: Indicates that 3D Secure authentication was requested and processed by the card network.
            * `DATA_SHARE_EXEMPTION`: Indicates that 3D Secure authentication was for information only and exempted.
            * `EXEMPTED`: Indicates that 3D Secure authentication was requested but the challenge was exempted.
            * `EXEMPTION_CLAIMED`: Indicates that 3D Secure authentication was exempted because acquirer transaction risk analysis (TRA) was already performed.
            * `SCA_EXEMPTION`: Indicates that 3D Secure authentication was exempted because strong customer authentication (SCA) was already performed.
            * `SUCCESSFUL`: Indicates that 3D Secure authentication was successful.
            * `SUCCESSFUL_NON_PAYMENT`: Indicates that 3D Secure non-payment authentication was successful.
            * `THREEDS_REQUESTER_DATA_SHARE_EXEMPTION`: Status is deprecated and will be removed from a future release of the Marqeta platform.
            After June 2023, use `DATA_SHARE_EXEMPTION` instead.
            * `THREEDS_REQUESTER_SCA_EXEMPTION`: Status is deprecated and will be removed in a June 2023 release of the Marqeta platform.
            After June 2023, use `SCA_EXEMPTION` instead.
            * `THREEDS_REQUESTER_TRA_EXEMPTION`: Status is deprecated and will be removed in a June 2023 release of the Marqeta platform.
            After June 2023, use `EXEMPTION_CLAIMED` instead.
            * `UNAVAILABLE`:
            ** For Visa transactions, this status indicates that 3D Secure authentication was requested, but Marqeta's access control server (ACS) was not available.
            ** For Mastercard transactions, this status indicates that 3D Secure authentication was not available.
          type: string
        cavv_authentication_amount:
          description: |-
            Authentication amount from the cardholder authentication verification value (CAVV) used to validate an authorization.
            This field is returned if it is included in the transaction data from the card network.
          type: string
        electronic_commerce_indicator:
          description: |-
            Status of the 3D Secure authentication attempt, as provided by a transaction participant.

            * `authentication_attempted`: Merchant attempted to authenticate, but either the issuer or the cardholder does not participate in 3D Secure.
            * `authentication_successful`: Cardholder authentication successful.
            * `no_authentication`: Non-authenticated e-commerce transaction.
          type: string
        issuer_exemption:
          description: |-
            Indicates a 3D Secure authentication exemption from the issuer
            This field is returned if it is included in the transaction data from the card network.
          type: string
        raw_cavv_data:
          description: |-
            Raw cardholder authentication verification value provided by the card network.
            This field is returned if it is included in the transaction data from the card network.
          type: string
        three_ds_message_version:
          description: Specifies the 3D Secure message version used for authentication.
          type: string
        verification_result:
          description: |-
            Result of cardholder authentication verification value (CAVV) or accountholder authentication value (AAV) verification performed by the card network.

            * `failed`
            * `not_present`
            * `not_provided`
            * `not_verified`
            * `not_verified_authentication_outage`
            * `verified`
            * `verified_amount_checked`
            * `verified_amount_greater_than_20_percent`: For Mastercard AAV verification, indicates that the original authentication amount and final authorization amount are mismatched, and that the final authorization amount exceeds the original authentication amount by more than 20%.
            This 20% margin falls outside Mastercard's suggested tolerance for what a European cardholder might reasonably expect when the total transaction amount is not known in advance.
            * `verified_amount_less_than_20_percent`: For Mastercard AAV verification, indicates that the original authentication amount and final authorization amount are mismatched, and that the final authorization amount exceeds the original authentication amount by 20% or less.
            This 20% margin falls within Mastercard's suggested tolerance for what a European cardholder might reasonably expect when the total transaction amount is not known in advance.
          type: string
        verification_value_created_by:
          description: Transaction participant who determined the verification result.
          type: string
      type: object
    cardholder_balances:
      description: |-
        Returns general purpose account (GPA) balances for a user or business.
        This object includes a link to balances of related user GPAs.
      properties:
        gpa:
          $ref: "#/components/schemas/cardholder_balance"
        links:
          description: Array of links to balances of related user GPAs.
          items:
            $ref: "#/components/schemas/link"
          type: array
          uniqueItems: true
      required:
        - gpa
        - links
      type: object
    cardholder_metadata:
      description:
        Contains customer-provided information about the cardholder that
        performed the transaction.
      properties:
        metadata:
          additionalProperties:
            type: string
          description: Associates customer-provided metadata with the cardholder.
          type: object
      type: object
    carrier:
      description: Specifies attributes of the card carrier.
      properties:
        logo_file:
          description: Specifies an image to display on the card carrier.
          type: string
        logo_thumbnail_file:
          description:
            Specifies a thumbnail-sized rendering of the image specified
            in the `logo_file` field.
          type: string
        message_file:
          description:
            Specifies a text file containing a custom message to print
            on the card carrier.
          type: string
        message_line:
          description: Specifies a custom message that appears on the card carrier.
          type: string
        template_id:
          description: Specifies the card carrier template to use.
          type: string
      type: object
    chargeback_funding_source_model:
      allOf:
        - $ref: "#/components/schemas/funding_source_model"
        - properties:
            credit:
              type: boolean
            name:
              type: string
          required:
            - credit
            - name
          type: object
    chargeback_response:
      description:
        Contains the chargeback object associated with this transaction
        if a chargeback has been initiated.
      properties:
        amount:
          description: Amount of the chargeback.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        channel:
          description: Channel the chargeback came through.
          enum:
            - GATEWAY
            - GATEWAY_AUTOMATED
            - ISSUER
            - ISSUER_AUTOMATED
          type: string
        created_time:
          description: |-
            Date and time when the chargeback was created.
            Not returned for transactions when the associated chargeback is in the `INITIATED` state.
          format: date-time
          type: string
        credit_user:
          default: false
          description: Whether to credit the user for the chargeback amount.
          type: boolean
        last_modified_time:
          description: |-
            Date and time when the chargeback was last modified.
            Not returned for transactions when the associated chargeback is in the `INITIATED` state.
          format: date-time
          type: string
        memo:
          description: Additional comments about the chargeback.
          maxLength: 1024
          minLength: 1
          type: string
        network:
          description: Network handling the chargeback.
          enum:
            - MARQETA
            - DISCOVER
            - MASTERCARD
            - PULSE
            - VISA
          type: string
        network_case_id:
          description: Network-assigned identifier of the chargeback.
          maxLength: 50
          minLength: 0
          type: string
        reason_code:
          description: Identifies the standardized reason for the chargeback.
          type: string
        state:
          description: State of the case.
          enum:
            - INITIATED
            - REPRESENTMENT
            - PREARBITRATION
            - ARBITRATION
            - CASE_WON
            - CASE_LOST
            - NETWORK_REJECTED
            - WITHDRAWN
          type: string
        token:
          description: Unique identifier of the chargeback.
          maxLength: 36
          minLength: 1
          type: string
        transaction_token:
          description: Unique identifier of the transaction being charged back.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - channel
        - created_time
        - credit_user
        - last_modified_time
        - network
        - state
        - token
        - transaction_token
      type: object
    clearing_and_settlement:
      description: Specifies the destination for overdraft funds.
      properties:
        overdraft_destination:
          default: GPA
          description: |-
            Specifies the destination for overdraft funds.

            This field does not apply if JIT Funding is enabled.
          enum:
            - GPA
            - MSA
            - MERCHANT_CAMPAIGN_ACCOUNT
            - GLOBAL_OVERDRAFT_ACCOUNT
          type: string
      type: object
    client_access_token_request:
      properties:
        application_token:
          description: Unique identifier of the `application` object.
          maxLength: 255
          minLength: 1
          type: string
        card_token:
          description:
            Unique identifier of the card whose sensitive information you
            want to display.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - card_token
      type: object
    client_access_token_response:
      properties:
        application:
          $ref: "#/components/schemas/Application"
        card_token:
          description:
            Unique identifier of the card whose sensitive information you
            want to display.
          type: string
        created:
          description:
            Date and time that the client access token was created, in
            UTC.
          format: date-time
          type: string
        expires:
          description: Date and time that the client access token expires, in UTC.
          format: date-time
          type: string
        token:
          description:
            Value of the client access token to redeem when displaying
            sensitive card data.
          type: string
      required:
        - created
        - expires
      type: object
    commando_mode_enables:
      description: Defines program behavior when Commando Mode is enabled.
      properties:
        auth_controls:
          description:
            Unique identifiers of the authorization controls enabled while
            in Commando Mode.
          items:
            type: string
          type: array
        ignore_card_suspended_state:
          default: false
          description: |-
            If set to `true`, transactions conducted while Commando Mode is enabled proceed even when the card is suspended.
            If set to `false`, transactions conducted while Commando Mode is enabled are declined if the card is suspended.
          type: boolean
        program_funding_source:
          description:
            Unique identifier of the program funding source that substitutes
            for the program gateway funding source upon Commando Mode enablement.
          type: string
        use_cache_balance:
          default: false
          description: This field is not currently in use.
          type: boolean
        velocity_controls:
          description: |-
            Unique identifiers of the velocity controls enabled while in Commando Mode.

            Velocity controls that are enabled in Commando Mode are inactive until a Commando Mode event occurs.
            When Commando Mode velocity controls are activated, they conform to the `velocity_window` specified in that velocity control.
            For example, a `velocity_window` of `DAY` is one calendar day starting at 00:00:00 UTC.
            If a Commando Mode event occurs at 11:59:59 UTC, the `DAY` window includes all transactions that occurred between 00:00:00 and 11:59:59 on that calendar day.
          items:
            type: string
          maxItems: 2147483647
          minItems: 1
          type: array
      required:
        - program_funding_source
      type: object
    commando_mode_nested_transition:
      description: Describes the Commando Mode control set's `current_state` object.
      properties:
        channel:
          description: Mechanism that changed the Commando Mode control set's state.
          enum:
            - API
            - SYSTEM
            - ADMIN
          type: string
        commando_enabled:
          default: false
          description: |-
            Indicates whether Commando Mode is enabled.

            * If `commando_enabled` is `true` and `COMMANDO_MANUAL` is configured, all transactions are processed via Commando Mode.
            * If `commando_enabled` is `true` and `COMMANDO_AUTO` is configured, Commando Mode is ready to intervene only when a transaction times out or encounters an error.
          type: boolean
        reason:
          description:
            Describes the reason why the current state of the Commando
            Mode control set was last changed.
          type: string
        username:
          description:
            Identifies the user who last changed the Commando Mode control
            set's state.
          type: string
      required:
        - channel
        - commando_enabled
      type: object
    commando_mode_response:
      properties:
        commando_mode_enables:
          $ref: "#/components/schemas/commando_mode_enables"
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        current_state:
          $ref: "#/components/schemas/commando_mode_nested_transition"
        last_modified_time:
          description: Date and time when the resource was last updated, in UTC.
          format: date-time
          type: string
        program_gateway_funding_source_token:
          description:
            Unique identifier of the associated program gateway funding
            source.
          type: string
        real_time_standin_criteria:
          $ref: "#/components/schemas/real_time_standin_criteria"
        token:
          description: Unique identifier of the Commando Mode control set.
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    commando_mode_transition_response:
      properties:
        commando_mode_token:
          description: Unique identifier of the Commando Mode control set.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        name:
          description:
            Identifies the user who changed the Commando Mode control set's
            state.
          type: string
        token:
          description:
            Unique identifier of the Command Mode control set transition
            object.
          type: string
        transition:
          $ref: "#/components/schemas/commando_mode_nested_transition"
        type:
          description:
            Specifies the type of event that triggered the Commando Mode
            transition, such as a `connection_error` or `response_timeout`.
          type: string
      required:
        - created_time
      type: object
    config:
      description:
        Allows for configuration options for this group, including control
        over the expiration of authorizations and automatic increases to the authorization
        amount.
      properties:
        authorization_controls:
          $ref: "#/components/schemas/authorization_controls"
      type: object
    control_token_request:
      properties:
        card_token:
          description:
            The unique identifier of the card for which you want to generate
            a control token.
          maxLength: 36
          minLength: 1
          type: string
        controltoken_type:
          description: |-
            Specifies the type of action completed by this request.

            *WARNING:* Sending a request to this endpoint with a `REVEAL_PIN` control token requires PCI DSS compliance.

            The lifespan of the control token depends on the token type:

            * *SET_PIN:* 60 minutes
            * *REVEAL_PIN:* 5 minutes
          enum:
            - SET_PIN
            - SHOW_PIN
          type: string
      required:
        - card_token
      type: object
    control_token_response:
      properties:
        control_token:
          description: |-
            Unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.
            This value cannot be updated.
          type: string
      required:
        - control_token
      type: object
    customer_due_diligence_request:
      properties:
        answer:
          type: string
        question:
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - answer
        - question
      type: object
    customer_due_diligence_response:
      properties:
        account_token:
          type: string
        answer:
          type: string
        bank:
          type: string
        question:
          type: string
        token:
          type: string
        type:
          type: string
      required:
        - account_token
        - answer
        - bank
        - question
        - token
        - type
      type: object
    customer_due_diligence_update_response:
      properties:
        answer:
          type: string
      type: object
    deposit_account:
      properties:
        account_number:
          type: string
        allow_immediate_credit:
          default: false
          type: boolean
        business_token:
          type: string
        routing_number:
          type: string
        token:
          type: string
        user_token:
          type: string
      required:
        - account_number
        - routing_number
        - token
      type: object
    deposit_account_update_request:
      properties:
        allow_immediate_credit:
          default: false
          type: boolean
      type: object
    device:
      description: Contains information related to the device being provisioned.
      properties:
        device_id:
          description: Identity number of the device.
          type: string
        ip_address:
          description: Device's IP address.
          type: string
        language_code:
          description: Language the device is configured to use.
          type: string
        location:
          description: Geographic coordinates of the device.
          type: string
        name:
          description: Name of the device.
          type: string
        phone_number:
          description: Device's telephone number.
          type: string
        token:
          description: Unique identifier of the device object.
          type: string
        type:
          description: Type of device being provisioned.
          type: string
      type: object
    digital_wallet_android_pay_provision_request:
      properties:
        card_token:
          description:
            Unique identifier of the card resource to use for the provisioning
            request.
          maxLength: 36
          minLength: 1
          type: string
        device_id:
          description:
            Unique identifier of the user's Google device, as provided
            by Google during the provisioning process.
          maxLength: 24
          minLength: 1
          type: string
        device_type:
          description:
            Type of device into which the digital wallet token will be
            provisioned.
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
        provisioning_app_version:
          description: |-
            Version of the application making the provisioning request.
            Used for debugging and fraud prevention.
          maxLength: 50
          minLength: 1
          type: string
        wallet_account_id:
          description:
            User's Google Wallet account ID, as provided by Google during
            the provisioning process.
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - wallet_account_id
      type: object
    digital_wallet_android_pay_provision_response:
      properties:
        card_token:
          description:
            Unique identifier of the card resource to use for the provisioning
            request.
          type: string
        created_time:
          description:
            Date and time when the digital wallet provisioning request
            was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description:
            Date and time when the digital wallet token provisioning request
            was last updated, in UTC.
          format: date-time
          type: string
        push_tokenize_request_data:
          $ref: "#/components/schemas/android_push_tokenize_request_data"
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
    digital_wallet_apple_pay_provision_request:
      properties:
        card_token:
          description:
            Unique identifier of the card resource to use for the provisioning
            request.
          maxLength: 36
          minLength: 1
          type: string
        certificates:
          description: |-
            Base64-encoded leaf and sub-CA certificates provided by Apple.

            The first element of the array should be the leaf certificate, followed by the sub-CA.
          items:
            description: |-
              Base64-encoded leaf and sub-CA certificates provided by Apple.

              The first element of the array should be the leaf certificate followed by the sub-CA.
            type: string
          type: array
        device_type:
          description:
            Type of device into which the digital wallet token will be
            provisioned.
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
        nonce:
          description: One-time-use nonce provided by Apple for security purposes.
          type: string
        nonce_signature:
          description: Apple-provided signature to the nonce.
          type: string
        provisioning_app_version:
          description: |-
            Version of the application making the provisioning request.
            Used for debugging and fraud prevention.
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - certificates
        - device_type
        - nonce
        - nonce_signature
        - provisioning_app_version
      type: object
    digital_wallet_apple_pay_provision_response:
      properties:
        activation_data:
          description:
            Cryptographic one-time passcode conforming to the payment network
            operator or service provider specifications.
          type: string
        card_token:
          description:
            Unique identifier of the card resource to use for the provisioning
            request.
          type: string
        created_time:
          description:
            Date and time when the digital wallet provisioning request
            was created, in UTC.
          format: date-time
          type: string
        encrypted_pass_data:
          description:
            Payload encrypted with a shared key derived from the Apple
            Public Certificates and the generated ephemeral private key.
          type: string
        ephemeral_public_key:
          description: Ephemeral public key used for the provisioning attempt.
          type: string
        last_modified_time:
          description:
            Date and time when the digital wallet token provisioning request
            was last updated, in UTC.
          format: date-time
          type: string
      required:
        - activation_data
        - card_token
        - created_time
        - encrypted_pass_data
        - ephemeral_public_key
        - last_modified_time
      type: object
    digital_wallet_samsung_pay_provision_request:
      properties:
        card_token:
          description:
            Unique identifier of the card resource to use for the provisioning
            request.
          maxLength: 36
          minLength: 1
          type: string
        device_id:
          description:
            User's Samsung device unique identifier, as provided by Samsung
            during the provisioning process.
          maxLength: 24
          minLength: 1
          type: string
        device_type:
          description:
            Type of device into which the digital wallet token will be
            provisioned.
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
        provisioning_app_version:
          description: |-
            Version of the application making the provisioning request.
            Used for debugging and fraud prevention.
          maxLength: 50
          minLength: 1
          type: string
        wallet_user_id:
          description:
            User's Samsung Wallet account ID, as provided by Samsung during
            the provisioning process.
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - wallet_user_id
      type: object
    digital_wallet_samsung_pay_provision_response:
      properties:
        card_token:
          description:
            Unique identifier of the card resource to use for the provisioning
            request.
          type: string
        created_time:
          description:
            Date and time when the digital wallet provisioning request
            was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description:
            Date and time when the digital wallet token provisioning request
            was last updated, in UTC.
          format: date-time
          type: string
        push_tokenize_request_data:
          $ref: "#/components/schemas/samsung_push_tokenize_request_data"
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
    digital_wallet_token:
      description: |-
        Contains information about the digital wallet that funded the transaction.

        Returned for all transactions funded by a digital wallet or related to digital wallet token provisioning.

        For more on digital wallets, see the <</core-api/digital-wallets-management, Digital Wallets Management>> API reference and <</developer-guides/digital-wallets-and-tokenization, Digital Wallets and Tokenization>> developer guide.
      properties:
        address_verification:
          $ref: "#/components/schemas/address_verification"
        card_token:
          description: Unique identifier of the card.
          type: string
        created_time:
          description:
            Date and time when the digital wallet token object was created,
            in UTC.
          format: date-time
          type: string
        device:
          $ref: "#/components/schemas/device"
        fulfillment_status:
          description: |-
            Digital wallet token's provisioning status.

            For fulfillment status descriptions, see <</core-api/digital-wallets-management#postDigitalwallettokentransitions, Create digital wallet token transition>>.
          type: string
        issuer_eligibility_decision:
          description: |-
            The Marqeta platform's decision as to whether the digital wallet token should be provisioned.

            * *0000*  The token should be provisioned.

            * *token.activation.verification.required*  Provisioning is pending; further action is required for completion.

            For all other values, check the value of the `fulfillment_status` field to definitively ascertain the provisioning outcome.

            *NOTE:* The value `invalid.cid` indicates an invalid CVV2 number.
          type: string
        last_modified_time:
          description:
            Date and time when the digital wallet token object was last
            modified, in UTC.
          format: date-time
          type: string
        metadata:
          $ref: "#/components/schemas/digital_wallet_token_metadata"
        state:
          description: |-
            State of the digital wallet token.

            For state descriptions, see <</developer-guides/managing-the-digital-wallet-token-lifecycle#_transitioning_token_states, Transitioning Token States>>.
          type: string
        state_reason:
          description:
            Reason why the digital wallet token transitioned to its current
            state.
          type: string
        token:
          description: Unique identifier of the digital wallet token.
          type: string
        token_service_provider:
          $ref: "#/components/schemas/token_service_provider"
        user:
          $ref: "#/components/schemas/user_card_holder_response"
        wallet_provider_profile:
          $ref: "#/components/schemas/wallet_provider_profile"
      type: object
    digital_wallet_token_address_verification:
      properties:
        validate:
          default: true
          description:
            Specifies whether or not the address used for address verification
            is valid.
          type: boolean
      type: object
    digital_wallet_token_hash:
      description:
        Contains identifiers of the digital wallet token resource and the
        card resource.
      properties:
        card_token:
          description:
            Unique identifier of the card resource to use for the provisioning
            request.
          maxLength: 36
          minLength: 1
          type: string
        token:
          description: Unique identifier of the digital wallet token resource.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    digital_wallet_token_metadata:
      description: Contains additional information about the digital wallet token.
      properties:
        cardproduct_preferred_notification_language:
          description: |-
            Language specified in the `config.transaction_controls.notification_language` field of the card product:
            `ces` (Czech), `deu` (German), `eng` (English), `fra` (French), `ita` (Italian), `pol` (Polish), `spa` (Spanish), `swe` (Swedish)

            The ISO maintains the link:https://www.iso.org/iso-3166-country-codes.html[full list of ISO 3166 two- and three-digit numeric country codes, window="_blank"].
          type: string
        issuer_product_config_id:
          description:
            Unique identifier of the product configuration on the Marqeta
            platform.
          type: string
      type: object
    digital_wallet_token_transition_request:
      properties:
        channel:
          description: Mechanism by which the transition was initiated.
          enum:
            - TOKEN_SERVICE_PROVIDER
            - TOKEN_SERVICE_PROVIDER_API
            - DIGITAL_WALLET
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
          type: string
        digital_wallet_token:
          $ref: "#/components/schemas/digital_wallet_token_hash"
        reason:
          description: The reason for the transition.
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          description: |-
            Standard code describing the reason for the transition.

            *NOTE:* This field is required if your program uses v2 of the `user_card_state_version`, which is a program-specific configuration value that is managed by Marqeta and cannot be accessed via the API.
            To learn more about the `user_card_state_version` program configuration, contact your Marqeta representative.

            * *00:* Object activated for the first time
            * *01:* Requested by you
            * *02:* Inactivity over time
            * *03:* This address cannot accept mail or the addressee is unknown
            * *04:* Negative account balance
            * *05:* Account under review
            * *06:* Suspicious activity was identified
            * *07:* Activity outside the program parameters was identified
            * *08:* Confirmed fraud was identified
            * *09:* Matched with an Office of Foreign Assets Control list
            * *10:* Card was reported lost
            * *11:* Card information was cloned
            * *12:* Account or card information was compromised
            * *13:* Temporary status change while on hold/leave
            * *14:* Initiated by Marqeta
            * *15:* Initiated by issuer
            * *16:* Card expired
            * *17:* Failed KYC
            * *18:* Changed to `ACTIVE` because information was properly validated
            * *19:* Changed to `ACTIVE` because account activity was properly validated
            * *20:* Change occurred prior to the normalization of reason codes
            * *21:* Initiated by a third party, often a digital wallet provider
            * *22:* PIN retry limit reached
            * *23:* Card was reported stolen
            * *24:* Address issue
            * *25:* Name issue
            * *26:* SSN issue
            * *27:* DOB issue
            * *28:* Email issue
            * *29:* Phone issue
            * *30:* Account/fulfillment mismatch
            * *31:* Other reason
          enum:
            - "00"
            - "01"
            - "02"
            - "03"
            - "04"
            - "05"
            - "06"
            - "07"
            - "08"
            - "09"
            - "10"
            - "11"
            - "12"
            - "13"
            - "14"
            - "15"
            - "16"
            - "17"
            - "18"
            - "19"
            - "20"
            - "21"
            - "22"
            - "23"
            - "24"
            - "25"
            - "26"
            - "27"
            - "28"
            - "29"
            - "30"
            - "31"
            - "32"
          type: string
        state:
          description: |-
            Specifies the state to which the digital wallet token will transition.

            The original state is `REQUESTED`. You cannot modify the state if its current value is either `REQUEST_DECLINED` or `TERMINATED`.
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
          type: string
        token:
          description: |-
            The unique identifier of the digital wallet token transition (not the identifier of the digital wallet token itself).

            If you do not include a value for the `token` field, the system will generate one automatically.
            This value is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        token_reference_id:
          description: |-
            The unique identifier of the digital wallet token within the card network.
            The `token_reference_id` is unique at the card network level.
          type: string
      required:
        - digital_wallet_token
        - state
      type: object
    digital_wallet_token_transition_response:
      properties:
        card_swap:
          $ref: "#/components/schemas/card_swap_hash"
        channel:
          description: Mechanism by which the transition was initiated.
          enum:
            - TOKEN_SERVICE_PROVIDER
            - DIGITAL_WALLET
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
            - TOKEN_SERVICE_PROVIDER_API
          type: string
        created_time:
          description:
            Date and time when the digital wallet provisioning request
            was created, in UTC.
          format: date-time
          type: string
        digital_wallet_token:
          $ref: "#/components/schemas/digital_wallet_token_hash"
        fulfillment_status:
          description: Provisioning status of the digital wallet token.
          enum:
            - DECISION_RED
            - DECISION_YELLOW
            - DECISION_GREEN
            - REJECTED
            - PROVISIONED
          type: string
        reason:
          description: Reason for the transition.
          maxLength: 255
          minLength: 0
          type: string
        reason_code:
          description: |-
            Standard code describing the reason for the transition:

            * *00:* Object activated for the first time
            * *01:* Requested by you
            * *02:* Inactivity over time
            * *03:* This address cannot accept mail or the addressee is unknown
            * *04:* Negative account balance
            * *05:* Account under review
            * *06:* Suspicious activity was identified
            * *07:* Activity outside the program parameters was identified
            * *08:* Confirmed fraud was identified
            * *09:* Matched with an Office of Foreign Assets Control list
            * *10:* Card was reported lost
            * *11:* Card information was cloned
            * *12:* Account or card information was compromised
            * *13:* Temporary status change while on hold/leave
            * *14:* Initiated by Marqeta
            * *15:* Initiated by issuer
            * *16:* Card expired
            * *17:* Failed KYC
            * *18:* Changed to `ACTIVE` because information was properly validated
            * *19:* Changed to `ACTIVE` because account activity was properly validated
            * *20:* Change occurred prior to the normalization of reason codes
            * *21:* Initiated by a third party, often a digital wallet provider
            * *22:* PIN retry limit reached
            * *23:* Card was reported stolen
            * *24:* Address issue
            * *25:* Name issue
            * *26:* SSN issue
            * *27:* DOB issue
            * *28:* Email issue
            * *29:* Phone issue
            * *30:* Account/fulfillment mismatch
            * *31:* Other reason
          enum:
            - "00"
            - "01"
            - "02"
            - "03"
            - "04"
            - "05"
            - "06"
            - "07"
            - "08"
            - "09"
            - "10"
            - "11"
            - "12"
            - "13"
            - "14"
            - "15"
            - "16"
            - "17"
            - "18"
            - "19"
            - "20"
            - "21"
            - "22"
            - "23"
            - "24"
            - "25"
            - "26"
            - "27"
            - "28"
            - "29"
            - "30"
            - "31"
            - "32"
          type: string
        state:
          description: Specifies the state to which the digital wallet token is transitioning.
          enum:
            - REQUESTED
            - REQUEST_DECLINED
            - ACTIVE
            - SUSPENDED
            - TERMINATED
          type: string
        token:
          description:
            Unique identifier of the digital wallet token transition, and
            not the identifier of the digital wallet token itself.
          maxLength: 36
          minLength: 1
          type: string
        type:
          description: |-
            Type of digital wallet token transition.
            `state.activated`, for example.
          maxLength: 36
          minLength: 0
          readOnly: true
          type: string
      required:
        - channel
        - digital_wallet_token
        - fulfillment_status
        - state
        - token
        - type
      type: object
    digital_wallet_tokenization:
      description: Controls characteristics related to digital wallets.
      properties:
        card_art_id:
          description: |-
            Specifies the digital wallet card art identifier for the card product.
            Digital wallets display the card art after the initial token has been provisioned and activated.
            Digital wallet card art is updated for all wallets automatically whenever a tokenized card is reissued or replaced.

            * If your card program is Managed by Marqeta, Marqeta populates this field on your behalf.
            * If your card program is Powered by Marqeta, you can obtain the correct card art identifier directly from Visa or Mastercard.

            If this field is left blank, your card product inherits the card art assigned to the account BIN range.
          type: string
        provisioning_controls:
          $ref: "#/components/schemas/provisioning_controls"
      type: object
    digital_wallet_x_pay_provision_request:
      properties:
        card_token:
          description:
            Unique identifier of the card resource to use for the provisioning
            request.
          maxLength: 36
          minLength: 1
          type: string
        device_id:
          description:
            Unique identifier of the user's XPay device, as provided by
            XPay during the provisioning process.
          maxLength: 24
          minLength: 1
          type: string
        device_type:
          description:
            Type of device into which the digital wallet token will be
            provisioned.
          enum:
            - MOBILE_PHONE
            - WATCH
            - TABLET
            - WEARABLE_DEVICE
            - HOUSEHOLD_DEVICE
            - AUTOMOBILE_DEVICE
          type: string
        provisioning_app_version:
          description: |-
            Version of the application making the provisioning request.
            Used for debugging and fraud prevention.
          maxLength: 50
          minLength: 1
          type: string
        token_requestor_id:
          description: |-
            Unique numerical identifier of the digital wallet token requestor within the card network.
            These ID numbers map to `token_requestor_name` field values as follows:

            *Mastercard*

            * 50110030273  `APPLE_PAY`
            * 50120834693  `ANDROID_PAY`
            * 50139059239  `SAMSUNG_PAY`

            *Visa*

            * 40010030273  `APPLE_PAY`
            * 40010075001  `ANDROID_PAY`
            * 40010043095  `SAMSUNG_PAY`
            * 40010075196  `MICROSOFT_PAY`
            * 40010075338  `VISA_CHECKOUT`
            * 40010075449  `FACEBOOK`
            * 40010075839  `NETFLIX`
            * 40010077056  `FITBIT_PAY`
            * 40010069887  `GARMIN_PAY`
          maxLength: 11
          minLength: 0
          type: string
        wallet_account_id:
          description:
            User's XPay account identifier, as provided by XPay during
            the provisioning process.
          maxLength: 50
          minLength: 1
          type: string
      required:
        - card_token
        - device_id
        - device_type
        - provisioning_app_version
        - token_requestor_id
        - wallet_account_id
      type: object
    digital_wallet_x_pay_provision_response:
      properties:
        card_token:
          description:
            Unique identifier of the card resource to use for the provisioning
            request.
          type: string
        created_time:
          description:
            Date and time when the digital wallet provisioning request
            was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description:
            Date and time when the digital wallet token provisioning request
            was last updated, in UTC.
          format: date-time
          type: string
        push_tokenize_request_data:
          $ref: "#/components/schemas/xpay_push_tokenize_request_data"
      required:
        - card_token
        - created_time
        - last_modified_time
        - push_tokenize_request_data
      type: object
    direct_deposit_account_request:
      properties:
        allow_immediate_credit:
          default: false
          type: boolean
        business_token:
          description: Required if 'user_token' is null
          maxLength: 36
          minLength: 1
          type: string
        customer_due_diligence:
          description: Required if account type = Checking
          items:
            $ref: "#/components/schemas/customer_due_diligence_request"
          type: array
        token:
          type: string
        type:
          enum:
            - DEPOSIT_ACCOUNT
            - CHECKING
            - SAVINGS
            - INTEREST_BEARING
          type: string
        user_token:
          description: Required if 'business_token' is null
          maxLength: 36
          minLength: 1
          type: string
      type: object
    direct_deposit_account_response:
      properties:
        account_number:
          maxLength: 17
          minLength: 13
          type: string
        allow_immediate_credit:
          default: false
          type: boolean
        business_token:
          maxLength: 36
          minLength: 36
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        routing_number:
          maxLength: 9
          minLength: 9
          type: string
        state:
          maxLength: 10
          minLength: 6
          type: string
        token:
          maxLength: 36
          minLength: 36
          type: string
        type:
          maxLength: 36
          minLength: 7
          type: string
        user_token:
          maxLength: 36
          minLength: 36
          type: string
      required:
        - account_number
        - allow_immediate_credit
        - business_token
        - created_time
        - last_modified_time
        - routing_number
        - state
        - token
        - user_token
      type: object
    direct_deposit_account_transition_request:
      properties:
        account_token:
          maxLength: 36
          minLength: 1
          type: string
        channel:
          enum:
            - API
            - IVR
            - FRAUD
            - ADMIN
            - SYSTEM
            - NETWORK
            - PROD_SUPPORT
            - UNSUPPORTED
          type: string
        reason:
          maxLength: 255
          minLength: 1
          type: string
        state:
          enum:
            - ACTIVE
            - SUSPENDED
            - TERMINATED
            - UNSUPPORTED
            - UNACTIVATED
            - LIMITED
          type: string
        token:
          type: string
      required:
        - account_token
        - channel
      type: object
    direct_deposit_account_transition_response:
      properties:
        account_token:
          maxLength: 36
          minLength: 36
          type: string
        business_token:
          maxLength: 36
          minLength: 36
          type: string
        channel:
          maxLength: 10
          minLength: 6
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        reason:
          maxLength: 255
          minLength: 0
          type: string
        state:
          maxLength: 10
          minLength: 6
          type: string
        token:
          maxLength: 36
          minLength: 36
          type: string
        user_token:
          maxLength: 36
          minLength: 36
          type: string
      required:
        - account_token
        - business_token
        - channel
        - created_time
        - reason
        - state
        - token
        - user_token
      type: object
    direct_deposit_funding_source_model:
      allOf:
        - $ref: "#/components/schemas/funding_source_model"
        - properties:
            name:
              type: string
          required:
            - name
          type: object
    echo_ping_request:
      properties:
        payload:
          description: Payload of the ping request.
          type: string
        token:
          description: Unique identifier of the ping request.
          type: string
      type: object
    echo_ping_response:
      properties:
        id:
          type: string
        payload:
          type: string
        success:
          default: false
          type: boolean
      type: object
    error_message_from_web_push_provisioning_request:
      properties:
        error_code:
          description: Code for the error that occurred.
          example: "400401"
          type: string
        error_message:
          description: Descriptive error message.
          example: "Invalid input(s): invalid user token"
          type: string
      required:
        - error_code
        - error_message
      type: object
    expiration_offset:
      description:
        Specifies the length of time after the date of issue for which
        the cards are valid.
      properties:
        unit:
          description: Specifies the units for the `value` field in this object.
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
        value:
          description: |-
            Specifies the number of time units (as defined by the `unit` field in this object) for which the cards are valid.
            In other words, cards expire `value` x `unit` after the date of issue.

            This number is rounded as follows:

            * *YEARS*  Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.

            * *MONTHS*  Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.

            * *DAYS*  Rounds up to the last second of the day of expiration.

            * *HOURS*, *MINUTES*, *SECONDS*  No rounding.
          format: int32
          type: integer
      type: object
    expiration_offset_with_minimum:
      description:
        Specifies the length of time after the date of issue for which
        cards of this card product type are valid.
      properties:
        min_offset:
          $ref: "#/components/schemas/min_offset"
        unit:
          description: Specifies the units for the `value` field.
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
        value:
          description: |-
            Specifies the number of time units (as defined by the `unit` field in this object) for which cards of this card product type are valid.
            In other words, cards expire `value` x `unit` after the date of issue.

            This number is rounded as follows:

            * *YEARS*  Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.

            * *MONTHS*  Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.

            * *DAYS*  Rounds up to the last second of the day of expiration.

            * *HOURS*, *MINUTES*, *SECONDS*  No rounding.
          format: int32
          type: integer
      type: object
    fee_attributes:
      description: Describes the attributes of a fee.
      properties:
        reason:
          description: Describes the reason for the fee.
          type: string
        region:
          description: Describes the region in which the fee is assessed.
          type: string
        status:
          description: Describes the status of the fee.
          type: string
        transaction_type:
          description: Specifies the transaction type in which the fee was assessed.
          type: string
      type: object
    fee_model:
      description: |-
        Contains attributes that define characteristics of one or more fees.
        This array is returned in the response when it is included in the request.
      properties:
        memo:
          description: Additional text that describes the fee.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Descriptive metadata about the fee.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the fee.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - token
      type: object
    fee_refund_request:
      description: Specifies the fee to refund.
      properties:
        original_fee_transaction_token:
          description:
            "Unique identifier of the fee to be refunded. \n\nYou can find\
            \ this token in the response of the original `/feecharges` or `/gpaorders`\
            \ request used to assess the standalone fee or from the webhook corresponding\
            \ to the original request.\nYou can also send a `GET` request to `/transactions?type=fee.charges`\
            \ to retrieve a list of fee transactions."
          type: string
        tags:
          description: Descriptive metadata about the fee.
          type: string
      type: object
    fee_request:
      properties:
        active:
          default: true
          description: Indicates whether the fee is active.
          type: boolean
        amount:
          description: Amount of the fee.
          type: number
        category:
          description: Specifies if the fee is a standalone fee or a real-time fee.
          enum:
            - STANDALONE
            - REALTIME
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        fee_attributes:
          $ref: "#/components/schemas/fee_attributes"
        name:
          description: Name of the fee request.
          maxLength: 50
          minLength: 1
          type: string
        tags:
          description: Descriptive metadata about the fee.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the fee.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so Marqeta recommends that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        type:
          description:
            Specifies if the fee is a flat fee or a percentage of the transaction
            amount.
          enum:
            - FLAT
            - PERCENTAGE
          type: string
      required:
        - amount
        - currency_code
        - name
      type: object
    fee_response:
      description: Contains details about the fee.
      properties:
        active:
          description: Specifies whether the fee is active.
          readOnly: true
          type: boolean
        amount:
          description: Amount of the fee.
          type: number
        category:
          description: Specifies if the fee is a standalone fee or a real-time fee.
          readOnly: true
          type: string
        created_time:
          description: Date and time when the `fees` object was created, in UTC.
          format: date-time
          readOnly: true
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          readOnly: true
          type: string
        fee_attributes:
          $ref: "#/components/schemas/fee_attributes"
        last_modified_time:
          description:
            Date and time when the `fees` object was last modified, in
            UTC.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the fee.
          type: string
        tags:
          description: Descriptive metadata about the fee.
          type: string
        token:
          description: Unique identifier of the `fees` object.
          type: string
        type:
          description:
            Specifies if the fee is a flat fee or a percentage of the transaction
            amount.
          readOnly: true
          type: string
      required:
        - active
        - amount
        - created_time
        - currency_code
        - last_modified_time
        - name
        - token
      type: object
    fee_transfer_request:
      properties:
        business_token:
          description: |-
            Specifies the business account holder to which the fee applies.

            Pass either `business_token` or `user_token`, not both.
          maxLength: 36
          minLength: 1
          type: string
        fees:
          description:
            Contains attributes that define characteristics of one or more
            fees.
          items:
            $ref: "#/components/schemas/fee_model"
          type: array
        tags:
          description: Metadata about the transfer.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the fee transfer.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Specifies the user account holder to which the fee applies.

            Pass either `user_token` or `business_token`, not both.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - business_token
        - fees
        - user_token
      type: object
    fee_transfer_response:
      description:
        Contains information about a fee charge, including the amount,
        currency code, and user or business token.
      properties:
        business_token:
          description: Specifies the business account holder to which the fee applies.
          maxLength: 36
          minLength: 1
          type: string
        created_time:
          description:
            Date and time when the `fee_charge` object was created, in
            UTC.
          format: date-time
          type: string
        fees:
          description:
            Contains attributes that define characteristics of one or more
            fees.
          items:
            $ref: "#/components/schemas/fee_detail"
          type: array
        tags:
          description: |-
            Metadata about the fee charge.

            This field is returned if it exists in the resource.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the fee transfer.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: Specifies the user account holder to which the fee applies.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - business_token
        - created_time
        - fees
        - token
        - user_token
      type: object
    fee_update_request:
      properties:
        active:
          default: true
          description: Indicates whether the fee is active.
          type: boolean
        amount:
          description: Amount of the fee.
          type: number
        category:
          enum:
            - STANDALONE
            - REALTIME
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        fee_attributes:
          $ref: "#/components/schemas/fee_attributes"
        name:
          description: Name of the fee request.
          maxLength: 50
          minLength: 1
          type: string
        tags:
          description: Descriptive metadata about the fee.
          maxLength: 255
          minLength: 1
          type: string
        type:
          enum:
            - FLAT
            - PERCENTAGE
          type: string
      type: object
    fileMapResponse:
      additionalProperties:
        $ref: "#/components/schemas/FileResponse"
      type: object
    financial_request_model:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: "#/components/schemas/card_acceptor_model"
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        cash_back_amount:
          type: number
        is_pre_auth:
          default: false
          type: boolean
        mid:
          maxLength: 50
          minLength: 1
          type: string
        pin:
          maxLength: 15
          minLength: 1
          type: string
        transaction_options:
          $ref: "#/components/schemas/transaction_options"
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - card_acceptor
        - card_token
        - mid
      type: object
    fraud_view:
      description:
        Contains one or more fraud determinations by the card network that
        apply to either the transaction or the cardholder's account.
      properties:
        issuer_processor:
          $ref: "#/components/schemas/issuer_fraud_view"
        network:
          $ref: "#/components/schemas/network_fraud_view"
        network_account_intelligence_score:
          $ref: "#/components/schemas/network_account_intelligence_score"
      type: object
    fulfillment_address_request:
      description: Specifies a fulfillment shipping or return address.
      properties:
        address1:
          description: Number and street of the address.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: Additional address information.
          maxLength: 255
          minLength: 0
          type: string
        city:
          description: City of the address.
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: Country of the address.
          maxLength: 40
          minLength: 0
          type: string
        first_name:
          description: First name of the addressee.
          maxLength: 40
          minLength: 0
          type: string
        last_name:
          description: Last name of the addressee.
          maxLength: 40
          minLength: 0
          type: string
        middle_name:
          description: Middle name of the addressee.
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Telephone number of the addressee.
          maxLength: 20
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the address.
          maxLength: 10
          minLength: 0
          type: string
        state:
          description: State of the address.
          maxLength: 32
          minLength: 0
          type: string
        zip:
          description: United States ZIP code of the address.
          maxLength: 10
          minLength: 0
          type: string
      type: object
    funding_account_response_model:
      properties:
        account_suffix:
          description: |-
            Account identifier appended to the bank account number.
            This field is returned if it exists in the resource.
          type: string
        account_type:
          description: |-
            Type of account.
            This field is returned if it exists in the resource.
          type: string
        active:
          default: false
          description: |-
            Specifies whether the account is active.
            This field is returned if it exists in the resource.
          type: boolean
        business_token:
          description: |-
            Unique identifier of the business account holder.
            This token is returned if a `user_token` is not specified.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        date_sent_for_verification:
          description: |-
            Date and time when the account was sent for verification, in UTC.
            This field is returned if it exists in the resource.
          format: date-time
          type: string
        date_verified:
          description: |-
            Date and time when the account was verified, in UTC.
            This field is returned if it exists in the resource.
          format: date-time
          type: string
        exp_date:
          description: |-
            Payment card expiration date.
            This field is returned if it exists in the resource.
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.

            This field is returned if it exists in the resource.
          type: boolean
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        link_partner_account_reference_token:
          type: string
        name_on_account:
          description: |-
            Name on the account.
            This field is returned if it exists in the resource.
          type: string
        partner:
          type: string
        token:
          description: |-
            Unique identifier of the funding source.
            This field is returned if it exists in the resource.
          type: string
        type:
          description: Funding source type.
          type: string
        user_token:
          description: |-
            Unique identifier of the user account holder.
            This token is returned if a `business_token` is not specified.
          type: string
        verification_notes:
          description: |-
            Free-form text field for holding notes about verification.
            This field is returned only if `verification_override = true`.
          type: string
        verification_override:
          default: false
          description:
            Allows the ACH funding source to be used regardless of its
            verification status.
          type: boolean
        verification_status:
          description: |-
            Account verification status.
            This field is returned if it exists in the resource.
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    funding_source_model:
      description:
        Contains funding source information for the transaction, including
        the funding type and time.
      discriminator:
        mapping:
          bankaccount: "#/components/schemas/bank_account_funding_source_model"
          chargeback: "#/components/schemas/chargeback_funding_source_model"
          directdeposit: "#/components/schemas/direct_deposit_funding_source_model"
          paymentcard: "#/components/schemas/payment_card_funding_source_model"
          program: "#/components/schemas/program_funding_source_model"
          programgateway: "#/components/schemas/program_gateway_funding_source_model"
        propertyName: type
      properties:
        active:
          default: false
          description: Whether the funding source is active.
          type: boolean
        created_time:
          description: Date and time when the funding source was created, in UTC.
          format: date-time
          type: string
        is_default_account:
          default: false
          description:
            Whether the GPA order unload's funding source is the default
            funding account.
          type: boolean
        last_modified_time:
          description:
            Date and time when the funding source was last modified, in
            UTC.
          format: date-time
          type: string
        token:
          description: Unique identifier of the funding source.
          type: string
        type:
          description: Funding type of the funding source.
          type: string
      required:
        - active
        - created_time
        - is_default_account
        - last_modified_time
        - token
        - type
      type: object
    gateway_log_model:
      description:
        Contains information from the JIT Funding gateway in response to
        a funding request.
      properties:
        duration:
          description:
            Length of time in milliseconds that the gateway took to respond
            to a funding request.
          format: int64
          type: integer
        message:
          description: |-
            Message about the status of the funding request.
            Useful for determining whether it was approved and completed successfully, declined by the gateway, or timed out.
          type: string
        order_number:
          description: Customer order number, same value as `transaction.token`.
          type: string
        response:
          $ref: "#/components/schemas/gateway_response"
        timed_out:
          default: false
          description: Whether the gateway sent a response (`true`) or timed out (`false`).
          type: boolean
        transaction_id:
          description: Customer-defined identifier for the transaction.
          type: string
      required:
        - message
        - order_number
        - transaction_id
      type: object
    gateway_program_custom_header_update_request:
      properties:
        custom_header:
          additionalProperties:
            type: string
          description:
            "Additional custom information included in the HTTP header.\
            \ \nFor example, this might contain security information, along with Basic\
            \ Authentication, when making a JIT Funding request. \nCustom headers\
            \ also appear in the associated webhook's notifications. "
          type: object
      type: object
    gateway_program_funding_source_request:
      properties:
        active:
          description: Indicates whether the program gateway funding source is active.
          type: boolean
        basic_auth_password:
          description: Password for authenticating your environment.
          maxLength: 100
          minLength: 20
          type: string
        basic_auth_username:
          description: Username for authenticating your environment.
          maxLength: 50
          minLength: 1
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: |-
            Additional custom information included in the HTTP header.
            For example, this might contain security information, along with Basic Authentication, when making a JIT Funding request.
            Custom headers also appear in the associated webhook's notifications.
          type: object
        name:
          description: Name of the program gateway funding source.
          maxLength: 50
          minLength: 1
          type: string
        timeout_millis:
          description: Total timeout in milliseconds for gateway processing.
          format: int64
          maximum: 7000
          minimum: 1000
          type: integer
        token:
          description: |-
            Unique identifier of the program gateway funding source.
            If you do not include a token, the system will generate one automatically.
            As this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        url:
          description:
            URL of the gateway endpoint hosted in your environment, to
            which `POST` requests are submitted by the Marqeta platform.
          maxLength: 250
          minLength: 0
          type: string
        use_mtls:
          default: false
          description:
            Specifies whether or not to use mutual transport layer security
            (mTLS) authentication for the funding request.
          type: boolean
      required:
        - basic_auth_password
        - basic_auth_username
        - name
        - url
      type: object
    gateway_program_funding_source_response:
      properties:
        account:
          description: Bank account number.
          type: string
        active:
          description: |-
            Indicates whether the program gateway funding source is active.
            This field is returned if it exists in the resource.
          type: boolean
        basic_auth_password:
          description: Password for authenticating your environment.
          type: string
        basic_auth_username:
          description: Username for authenticating your environment.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: Additional custom information included in the HTTP header.
          type: object
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        name:
          description: Name of the program gateway funding source.
          maxLength: 50
          minLength: 1
          type: string
        timeout_millis:
          description: Total timeout in milliseconds for gateway processing.
          format: int64
          type: integer
        token:
          description: Unique identifier of the program gateway funding source.
          maxLength: 36
          minLength: 1
          type: string
        url:
          description:
            URL of the gateway endpoint hosted in your environment, to
            which `POST` requests are submitted by the Marqeta platform.
          type: string
        use_mtls:
          default: false
          description:
            Specifies whether or not to use mutual transport layer security
            (mTLS) authentication for the funding request.
          type: boolean
        version:
          description: Program gateway funding source object version.
          type: string
      required:
        - account
        - basic_auth_password
        - basic_auth_username
        - created_time
        - custom_header
        - last_modified_time
        - name
        - timeout_millis
        - token
        - url
        - use_mtls
        - version
      type: object
    gateway_program_funding_source_update_request:
      properties:
        active:
          description: Indicates whether the program gateway funding source is active.
          type: boolean
        basic_auth_password:
          description: Password for authenticating your environment.
          maxLength: 100
          minLength: 20
          type: string
        basic_auth_username:
          description: Username for authenticating your environment.
          maxLength: 50
          minLength: 1
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: |-
            Additional custom information included in the HTTP header.
            For example, this might contain security information, along with Basic Authentication, when making a JIT Funding request.
            Custom headers also appear in the associated webhook's notifications.
          type: object
        name:
          description: Name of the program gateway funding source.
          maxLength: 50
          minLength: 1
          type: string
        timeout_millis:
          description: Total timeout in milliseconds for gateway processing.
          format: int64
          maximum: 7000
          minimum: 1000
          type: integer
        url:
          description:
            URL of the gateway endpoint hosted in your environment, to
            which `POST` requests are submitted by the Marqeta platform.
          maxLength: 250
          minLength: 0
          type: string
        use_mtls:
          default: false
          description:
            Specifies whether or not to use mutual transport layer security
            (mTLS) authentication for the funding request.
          type: boolean
      required:
        - basic_auth_password
        - basic_auth_username
        - url
      type: object
    gateway_response:
      description:
        Contains information from the gateway in response to a funding
        request.
      properties:
        code:
          description: Code received from the gateway.
          type: string
        data:
          $ref: "#/components/schemas/jit_program_response"
      required:
        - code
      type: object
    gpa:
      description: Defines the type of order.
      properties:
        reload_amount:
          description: |-
            Available balance on the card after the reload has completed.

            This value must be greater than or equal to the value of `trigger_amount`.
            Note that this is not the same as the amount added to the card, which will vary from reload to reload.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        trigger_amount:
          description: |-
            Threshold that determines when the reload happens.

            The reload is triggered when the card balance falls below this amount.
          exclusiveMinimum: false
          minimum: 0.01
          type: number
      required:
        - reload_amount
        - trigger_amount
      type: object
    gpa_request:
      properties:
        amount:
          description: Amount to fund.
          type: number
        business_token:
          description: |-
            Unique identifier of the business.

            Pass either a `business_token` or a `user_token`, not both.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        fees:
          description: List of fees associated with the funding transaction.
          items:
            $ref: "#/components/schemas/fee_model"
          type: array
        funding_source_address_token:
          description: |-
            Unique identifier of the funding source address to use for this order.
            If your funding source is an ACH account, then a funding source address is not required. If your funding source is a payment card, you must have at least one funding source address in order to create a GPA order.
            Send a `GET` request to `/fundingsources/addresses/user/{token}` to retrieve addresses for a specific user.
          maxLength: 36
          minLength: 1
          type: string
        funding_source_token:
          description: |-
            Unique identifier of the funding source to use for this order.

            You do not have to supply a funding source token value in this call if you have a default funding source set up (verify the funding source's `is_default_account` field).
            If you have only one funding source, then this source is used as the default.
            If you have multiple funding sources and none are configured as the default, then an error is returned.

            Send a `GET` request to `/fundingsources/user/{user_token}` to retrieve funding source tokens for a user or to `/fundingsources/business/{business_token}` to retrieve funding source tokens for a business.
          maxLength: 36
          minLength: 1
          type: string
        memo:
          description: Additional descriptive text.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the GPA order.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the GPA order.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the user.

            Pass either a `user_token` or a `business_token`, not both.

            Send a `GET` request to `/users` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - funding_source_token
      type: object
    gpa_response:
      description: |-
        Contains information about a GPA order, including fees, funding sources, and addresses.
        See <</core-api/gpa-orders, GPA Orders>> for more information.
      properties:
        amount:
          description: Amount funded.
          type: number
        business_token:
          description: |-
            Unique identifier of the business.

            This field is returned if it exists in the resource.
          type: string
        created_time:
          description: Date and time when the GPA order was created, in UTC.
          format: date-time
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        fees:
          description: |-
            List of fees associated with the funding transaction.

            This array is returned if it exists in the resource.
          items:
            $ref: "#/components/schemas/fee_detail"
          type: array
        funding:
          $ref: "#/components/schemas/funding"
        funding_source_address_token:
          description:
            Unique identifier of the funding source address to use for
            this order.
          type: string
        funding_source_token:
          description: Unique identifier of the funding source to use for this order.
          type: string
        gateway_message:
          description: |-
            Message about the status of the funding request.
            Useful for determining whether it was approved and completed successfully, declined by the gateway, or timed out.

            This field is returned if it exists in the resource.
          type: string
        gateway_token:
          description: |-
            Unique identifier of the JIT Funding request and response.

            This field is returned if it exists in the resource.
          format: int64
          type: integer
        jit_funding:
          $ref: "#/components/schemas/jit_funding_api"
        last_modified_time:
          description: Date and time when the GPA order was last modified, in UTC.
          format: date-time
          type: string
        memo:
          description: |-
            Additional descriptive text.

            This field is returned if it exists in the resource.
          type: string
        response:
          $ref: "#/components/schemas/response"
        state:
          description: Current status of the funding transaction.
          type: string
        tags:
          description: |-
            Comma-delimited list of tags describing the GPA order.

            This field is returned if it exists in the resource.
          type: string
        token:
          description: Unique identifier of the GPA order.
          type: string
        transaction_token:
          description: Unique identifier of the transaction being funded.
          type: string
        user_token:
          description: |-
            Unique identifier of the user resource.

            This field is returned if it exists in the resource.
          type: string
      required:
        - amount
        - created_time
        - currency_code
        - funding
        - funding_source_token
        - last_modified_time
        - response
        - state
        - token
        - transaction_token
      type: object
    gpa_returns:
      description: Contains information about a GPA unload order.
      properties:
        amount:
          description: Amount of funds returned to the funding source.
          type: number
        created_time:
          description: Date and time when the GPA unload order was created, in UTC.
          format: date-time
          type: string
        funding:
          $ref: "#/components/schemas/funding"
        funding_source_address_token:
          description: Identifies the funding source used for this order.
          type: string
        funding_source_token:
          description: Identifies the funding source used for this order.
          type: string
        jit_funding:
          $ref: "#/components/schemas/jit_funding_api"
        last_modified_time:
          description:
            Date and time when the GPA unload order was last modified,
            in UTC.
          format: date-time
          type: string
        memo:
          description: Additional descriptive text.
          type: string
        original_order_token:
          description: Identifies the original GPA order.
          type: string
        response:
          $ref: "#/components/schemas/response"
        state:
          description: Current status of the GPA unload order.
          type: string
        tags:
          description: Comma-delimited list of tags describing the GPA order.
          type: string
        token:
          description: Unique identifier of the GPA unload order.
          type: string
        transaction_token:
          description: Unique identifier of the transaction.
          type: string
      required:
        - amount
        - created_time
        - funding
        - funding_source_token
        - last_modified_time
        - response
        - state
        - token
        - transaction_token
      type: object
    hold_increase:
      description:
        Controls automatic increases to the authorization amount for MCCs
        specified in this group.
      properties:
        type:
          default: AMOUNT
          description:
            Controls whether the `value` field represents a fixed amount
            or a percentage of the authorization amount.
          enum:
            - AMOUNT
            - PERCENT
            - UP_TO_LIMIT
          type: string
        value:
          description: |-
            Specifies the amount of the automatic increase to the authorization amount.

            The `type` field controls whether this amount is a fixed amount or a percentage.
          type: number
      required:
        - type
        - value
      type: object
    images:
      description: Specifies personalized images that appear on the card.
      properties:
        card:
          $ref: "#/components/schemas/images_card"
        carrier:
          $ref: "#/components/schemas/ImagesCarrier"
        carrier_return_window:
          $ref: "#/components/schemas/images_carrier_return_window"
        signature:
          $ref: "#/components/schemas/images_signature"
      type: object
    images_card:
      description: Specifies personalized images that appear on the card.
      properties:
        name:
          description: Specifies a PNG image to display on the card.
          type: string
        thermal_color:
          description: Specifies the color of the image displayed on the card.
          type: string
      type: object
    images_carrier_return_window:
      description:
        Specifies a custom image to display in the return address window
        of the card carrier envelope.
      properties:
        name:
          description:
            Specifies a PNG image to display in the return address window
            of envelopes used for sending cards to cardholders.
          type: string
      type: object
    images_signature:
      description: Specifies an image of the cardholder's signature.
      properties:
        name:
          description: Specifies a PNG image of the cardholder's signature.
          type: string
      type: object
    in_app_provisioning:
      properties:
        address_verification:
          $ref: "#/components/schemas/digital_wallet_token_address_verification"
        enabled:
          default: false
          description: Specifies if in-app provisioning is enabled.
          type: boolean
      type: object
    issuer_fraud_view:
      description:
        Contains one or more fraud determinations by the card network that
        apply to either the transaction or the cardholder's account.
      properties:
        fraud_score_reasons:
          items:
            type: string
          type: array
        recommended_action:
          description: The rules violated by the transaction.
          type: string
        risk_level:
          description: The fraud rating, or level of risk associated with the transaction.
          type: string
        riskcontrol_tags:
          description: The RiskControl tags that were triggered by the transaction.
          items:
            $ref: "#/components/schemas/riskcontrol_tags"
          type: array
        rule_violations:
          description: The rules violated by the transaction.
          items:
            type: string
          type: array
        score:
          description: |-
            The risk score generated by RiskControl.
            This is either the Mastercard Decision Intelligence or Visa Advance Authorization transaction risk score.
          format: int32
          type: integer
        triggered_rules:
          description:
            Provides a list of rules triggered by a fraud event, along
            with the information on tags and rule characteristics.
          items:
            $ref: "#/components/schemas/triggered_rule"
          type: array
      type: object
    jit_address_verification:
      description: Contains address verification data used to make JIT funding decisions.
      properties:
        gateway:
          $ref: "#/components/schemas/address_verification_source"
        issuer:
          $ref: "#/components/schemas/address_verification_source"
        request:
          $ref: "#/components/schemas/avs_information"
      type: object
    jit_funding:
      description: Governs the behavior of JIT Funding.
      properties:
        paymentcard_funding_source:
          $ref: "#/components/schemas/jit_funding_paymentcard_funding_source"
        program_funding_source:
          $ref: "#/components/schemas/jit_funding_program_funding_source"
        programgateway_funding_source:
          $ref: "#/components/schemas/jit_funding_programgateway_funding_source"
      type: object
    jit_funding_api:
      description:
        Contains information about the JIT Funding load event, in which
        funds are loaded into an account.
      properties:
        acting_user_token:
          description: |-
            User who conducted the transaction.

            Can be a child user configured to share its parent's account balance.
          maxLength: 36
          minLength: 0
          type: string
        address_verification:
          $ref: "#/components/schemas/jit_address_verification"
        amount:
          description: Requested amount of funding.
          exclusiveMinimum: false
          minimum: 0
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/cardholder_balance"
          description: Contains the GPA's balance details.
          type: object
        business_token:
          description: Holder of the business account that was funded.
          maxLength: 36
          minLength: 0
          type: string
        decline_reason:
          description: Reason why the transaction was declined.
          enum:
            - INVALID_AMOUNT
            - INSUFFICIENT_FUNDS
            - TRANSACTION_NOT_PERMITTED
            - SUSPECTED_FRAUD
            - AMOUNT_LIMIT_EXCEEDED
            - TRANSACTION_COUNT_LIMIT_EXCEEDED
            - DUPLICATE_TRANSACTION
            - INVALID_MERCHANT
            - INVALID_CARD
            - NO_CREDIT_ACCOUNT
            - EXPIRED_CARD
            - NO_CHECKING_ACCOUNT
            - NO_SAVINGS_ACCOUNT
            - STOP_PAYMENT
            - REVOCATION_AUTHORIZATION_ORDER
            - REVOCATION_ALL_AUTHORIZATION_ORDER
            - SOFT_DECLINE_AUTHENTICATION_REQUIRED
            - CLOSED_ACCOUNT
            - SOFT_DECLINE_PIN_REQUIRED
            - CARD_NOT_ACTIVE
            - CARDHOLDER_NOT_ACTIVE
          type: string
        incremental_authorization_jit_funding_tokens:
          description: |-
            Array of tokens referencing the JIT Funding tokens of all previous associated incremental authorization JIT Funding requests.
            Useful for ascertaining the final transaction amount when the original amount was incremented.
          items:
            type: string
          type: array
        memo:
          description: Additional information that describes the JIT Funding transaction.
          maxLength: 99
          minLength: 0
          type: string
        method:
          description: |-
            JIT Funding response type.
            See <</core-api/gateway-jit-funding-messages#_the_jit_funding_object, The jit_funding object>> for the purpose, funding event type, and description of each method.
          enum:
            - pgfs.authorization
            - pgfs.authorization.clearing
            - pgfs.authorization.advice
            - pgfs.authorization.incremental
            - pgfs.authorization.capture
            - pgfs.authorization.reversal
            - pgfs.authorization.cashback
            - pgfs.balanceinquiry
            - pgfs.auth_plus_capture
            - pgfs.refund
            - pgfs.refund.authorization
            - pgfs.refund.authorization.reversal
            - pgfs.refund.authorization.clearing
            - pgfs.force_capture
            - pgfs.authorization.capture.chargeback
            - pgfs.authorization.capture.chargeback.reversal
            - pgfs.pindebit
            - pgfs.pindebit.chargeback
            - pgfs.pindebit.chargeback.reversal
            - pgfs.pindebit.cashback
            - pgfs.pindebit.refund
            - pgfs.pindebit.authorization
            - pgfs.pindebit.authorization.clearing
            - pgfs.pindebit.authorization.reversal
            - pgfs.pindebit.atm.withdrawal
            - pgfs.pindebit.balanceinquiry
            - pgfs.pindebit.quasi.cash
            - pgfs.dispute.credit
            - pgfs.dispute.debit
            - pgfs.directdeposit.credit
            - pgfs.directdeposit.debit
            - pgfs.directdeposit.credit.reversal
            - pgfs.directdeposit.debit.reversal
            - pgfs.adjustment.credit
            - pgfs.adjustment.debit
            - pgfs.auth_plus_capture.standin
            - pgfs.authorization.standin
            - pgfs.network.load
            - pgfs.original.credit.authorization
            - pgfs.original.credit.auth_plus_capture
            - pgfs.original.credit.authorization.clearing
            - pgfs.original.credit.authorization.reversal
            - pgfs.billpayment
            - pgfs.billpayment.capture
            - pgfs.billpayment.reversal
            - pgfs.atm.withdrawal
            - pgfs.atm.clearing.withdrawal
            - pgfs.authorization.quasi.cash
            - pgfs.authorization.clearing.quasi.cash
            - pgfs.authorization.account_verification
          type: string
        original_jit_funding_token:
          description: |-
            Unique identifier of the first associated JIT Funding message.
            Useful for correlating related JIT Funding messages (that is, those associated with the same GPA order).
            Not included in the first of any set of related messages.
          maxLength: 36
          minLength: 0
          type: string
        tags:
          description: Customer-defined tags related to the JIT Funding transaction.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Existing JIT Funding token matching the `funding.gateway_log.transaction_id` field of the associated GPA order.

            *NOTE:* The `transaction_id` field updates if a subsequent JIT Funding message associated with that GPA order is sent.
            If multiple JIT Funding messages are associated with the same GPA order, the `transaction_id` field matches the token of the most recent message.
          maxLength: 36
          minLength: 0
          type: string
        user_token:
          description: Holder of the user account that was funded.
          maxLength: 36
          minLength: 0
          type: string
      required:
        - amount
        - method
        - token
        - user_token
      type: object
    jit_funding_paymentcard_funding_source:
      properties:
        enabled:
          default: false
          description: |-
            Specifies whether JIT Funding is enabled or disabled for the payment card funding source.
            A value of `true` indicates that the payment card funding source is enabled and will be debited when swipes occur.
          type: boolean
        refunds_destination:
          description:
            Specifies the return destination for refunds in the case of
            a transaction reversal.
          enum:
            - GATEWAY
            - GPA
            - WATERFALL
          maxLength: 50
          minLength: 0
          type: string
      type: object
    jit_funding_program_funding_source:
      properties:
        enabled:
          default: false
          description: |-
            Specifies whether JIT Funding is enabled or disabled for the program funding source.
            A value of `true` indicates that the program funding source is enabled and will be debited when swipes occur.
          type: boolean
        funding_source_token:
          description: |-
            Unique identifier of the already existing funding source.
            Required if JIT Funding is enabled.
          maxLength: 36
          minLength: 0
          type: string
        refunds_destination:
          description: |-
            Specifies the return destination for refunds in the case of a transaction reversal.
            `PROGRAM_FUNDING_SOURCE` returns funds to the program funding source.
            `GPA` returns the funds to the user's GPA.
          enum:
            - PROGRAM_FUNDING_SOURCE
            - GPA
            - WATERFALL
          maxLength: 50
          minLength: 0
          type: string
      type: object
    jit_funding_programgateway_funding_source:
      properties:
        always_fund:
          default: false
          description:
            If set to `true`, this card product is always funded from this
            program gateway funding source.
          type: boolean
        enabled:
          default: false
          description: |-
            Specifies whether JIT Funding is enabled or disabled for the program gateway funding source.
            A value of `true` indicates that the program gateway funding source is enabled and will be debited when swipes occur.
          type: boolean
        funding_source_token:
          description: |-
            Unique identifier of the already existing funding source.
            Required if JIT Funding is enabled.
          maxLength: 36
          minLength: 0
          type: string
        refunds_destination:
          description: |-
            Specifies the return destination for refunds in the case of a transaction reversal.
            In most cases, you should set the value to `GATEWAY`, which returns funds to the program gateway funding source.
            Setting to `GPA` returns the funds to the user's GPA, which creates a positive account balance and introduces the potential of a transaction being authorized without a JIT Funding request being sent to the gateway.
          enum:
            - GATEWAY
            - GPA
            - WATERFALL
          maxLength: 50
          minLength: 0
          type: string
      type: object
    jit_program_response:
      description: Contains the gateway's information about the JIT Funding transaction.
      properties:
        jit_funding:
          $ref: "#/components/schemas/jit_funding_api"
        network_metadata:
          $ref: "#/components/schemas/network_metadata"
      required:
        - jit_funding
      type: object
    kyc_request:
      properties:
        business_token:
          description: |-
            Specifies the business account holder on which to perform the identity check.
            Do not pass this field if your request includes the `user_token` field.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        manual_override:
          default: false
          description: |-
            Set to `true` to designate a user account holder as having passed a verification check without Marqeta performing the check through one of its KYC providers.

            Use this override when you perform verification through another mechanism, such as with an alternative KYC provider or directly with the account holder.
            You must obtain explicit, written approval from Marqeta before using the `manual_override` field for KYC verification.
            Consult your Customer Success representative for more information.
          type: boolean
        notes:
          description: |-
            Notes pertaining to a manual override.
            This field is returned in the response only when the `manual_override` field is set to `true`.
          maxLength: 255
          minLength: 0
          type: string
        reference_id:
          description: |-
            Can be specified only if `manual_override=true`.
            If you verified a user account holder's identity by performing a KYC verification outside of the Marqeta platform, you can use the `reference_id` field to store the reference number returned by that KYC provider.

            *NOTE:* When you submit a KYC verification request with `manual_override=false`, the Marqeta platform performs the verification through one of its KYC providers.
            If the KYC provider responds with a reference identifier, that identifier is passed to you by way of this field in the response.
          maxLength: 32
          minLength: 0
          type: string
        token:
          description: |-
            The unique identifier of the identity check.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Specifies the user account holder on which to perform the identity check.
            Do not pass this field if your request includes the `business_token` field.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    kyc_response:
      properties:
        business_token:
          description:
            The business account holder on which the identity check was
            performed.
          type: string
        created_time:
          description: Time when the KYC verification was performed.
          format: date-time
          type: string
        last_modified_time:
          description: Time when the KYC verification was last updated.
          format: date-time
          type: string
        manual_override:
          default: false
          description: |-
            If `true`, the user account holder is designated as having passed a verification check without Marqeta performing the check.

            This override is used when verification is performed through another mechanism, such as with an alternative KYC provider or directly with the account holder.
          readOnly: true
          type: boolean
        notes:
          description: |-
            Notes pertaining to a manual override.
            This field is included in the response only when the `manual_override` field is set to `true`.
          readOnly: true
          type: string
        reference_id:
          description: |-
            If you verified the account holder's identity by performing a KYC verification outside of the Marqeta platform, you can use the `reference_id` field to store the reference number returned by that KYC provider.
            This field is included in the response only when the `manual_override` field is set to `true`.

            *NOTE:* When you submit a KYC verification request with `manual_override=false`, the Marqeta platform performs the verification through one of its KYC providers.
            If the KYC provider responds with a reference identifier, that identifier is passed to you by way of this field in the response.
          type: string
        result:
          $ref: "#/components/schemas/result"
        token:
          description: The unique identifier of the identity check.
          type: string
        user_token:
          description: The user account holder on which the identity check was performed.
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    link:
      description: Link to balances of related user GPAs.
      properties:
        href:
          description: URL of the requested `/balances` resource.
          readOnly: true
          type: string
        method:
          description: The HTTP method of the link.
          type: string
        rel:
          description:
            Specifies the relationship between the current resource and
            the linked resource.
          type: string
      required:
        - href
        - method
        - rel
      type: object
    login_request_model:
      properties:
        email:
          description: Cardholder email address.
          type: string
        password:
          description: Password to the cardholder's user account on the Marqeta platform.
          maxLength: 255
          minLength: 1
          type: string
        user_token:
          description: |-
            Identifies the cardholder to log in.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    login_response_model:
      properties:
        access_token:
          $ref: "#/components/schemas/access_token_response"
        user:
          $ref: "#/components/schemas/user_card_holder_response"
      type: object
    manual_entry:
      properties:
        address_verification:
          $ref: "#/components/schemas/digital_wallet_token_address_verification"
        enabled:
          default: false
          description: Specifies if manual entry is enabled.
          type: boolean
      type: object
    mcc_group_model:
      properties:
        active:
          default: false
          description: Indicates if the group is active or inactive.
          type: boolean
        config:
          $ref: "#/components/schemas/config"
        mccs:
          description: |-
            The set of merchant category codes that you want to include in this group.
            For each element, valid characters are 0-9, and the length must be 4 digits.
            You can also specify a range like "9876-9880".
            An MCC can belong to more than one group.
          items:
            properties: {}
            type: object
          maxItems: 500
          minItems: 0
          type: array
          uniqueItems: true
        name:
          description: The name of the group.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            The unique identifier of the group.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - mccs
        - name
      type: object
    mcc_group_update_model:
      properties:
        active:
          default: false
          description: Indicates whether the MCC group is active or inactive.
          type: boolean
        config:
          $ref: "#/components/schemas/config"
        mccs:
          description: |-
            The set of merchant category codes that you want to include in this group.
            For each element, valid characters are 0-9, and the length must be 4 digits.
            You can also specify a range like "9876-9880".
            An MCC can belong to more than one group.

            Updating the merchant category codes for the group completely replaces the group's existing codes.
            For example, if the current MCC group is `["1234"]` and you want to add the 2345 code (while retaining the existing code), you must specify `["1234", "2345"]` in this field.
          items:
            type: string
          maxItems: 500
          minItems: 1
          type: array
          uniqueItems: true
        name:
          description: The name of the MCC group.
          type: string
      type: object
    merchant_group_request:
      properties:
        active:
          default: false
          description: Indicates if the merchant group is active or not.
          type: boolean
        mids:
          description: |-
            Comma-separated list of alphanumeric merchant identifiers.
            You can include merchant identifiers in multiple merchant groups.
          items:
            type: string
          maxItems: 4000
          minItems: 1
          type: array
          uniqueItems: true
        name:
          description: Name of the merchant group.
          maxLength: 40
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the group.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    merchant_group_response:
      properties:
        active:
          default: false
          description: Indicates if the merchant group is active or not.
          type: boolean
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        mids:
          description: Comma-separated list of alphanumeric merchant identifiers.
          items:
            type: string
          type: array
        name:
          description: Name of the merchant group.
          type: string
        token:
          description: Unique identifier of the merchant group.
          type: string
      type: object
    merchant_group_update_request:
      properties:
        active:
          default: false
          description: Indicates if the merchant group is active or not.
          type: boolean
        mids:
          description: |-
            Comma-separated list of alphanumeric merchant identifiers.
            You can include merchant identifiers in multiple merchant groups.
          items:
            type: string
          maxItems: 4000
          minItems: 1
          type: array
          uniqueItems: true
        name:
          description: Name of the merchant group.
          maxLength: 40
          minLength: 1
          type: string
      type: object
    merchant_response_model:
      properties:
        active:
          default: true
          type: boolean
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        latitude:
          format: float
          type: number
        longitude:
          format: float
          type: number
        name:
          maxLength: 40
          minLength: 0
          type: string
        partial_auth_flag:
          default: true
          type: boolean
        phone:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 2
          minLength: 0
          type: string
        token:
          description: The unique identifier of the merchant
          maxLength: 36
          minLength: 1
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
      required:
        - created_time
        - last_modified_time
        - name
      type: object
    merchant_scope:
      description: |-
        Defines the group of merchants to which the velocity control applies.

        Populate no more than one field of the `merchant_scope` object.
        If no fields are populated, the velocity control applies to all merchants.
      properties:
        mcc:
          description: |-
            Merchant Category Code (MCC).
            Identifies the type of products or services provided by the merchant.

            Enter a value to control spending on a particular type of product or service.
          maxLength: 4
          minLength: 1
          type: string
        mcc_group:
          description: |-
            Token identifying a group of MCCs.
            Enter a value to control spending on a group of product or service types.

            Send a `GET` request to `/mccgroups` to retrieve MCC group tokens.
          maxLength: 36
          minLength: 1
          type: string
        mid:
          description: |-
            Merchant identifier (MID).
            Identifies a specific merchant.

            Enter a value to control spending with a particular merchant.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    min_offset:
      description:
        Specifies the minimum length of time after the date of issue for
        which the cards are valid.
      properties:
        unit:
          description: Specifies the time unit of the `value` field.
          enum:
            - YEARS
            - MONTHS
            - DAYS
            - HOURS
            - MINUTES
            - SECONDS
          type: string
        value:
          description: |-
            Specifies the number of time units (as defined by the `unit` field) for which cards of this card product type are valid.
            Cards expire `value` x `unit` after the date of issue.

            This number is rounded as follows:

            * *YEARS*  Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 Jan 2021 and `value = 1`, the cards expire on the last day of Jan 2022.

            * *MONTHS*  Rounds up to the last second of the last day of the month of expiration.
            For example, if the issue date is 1 May 2022 and `value = 1`, the cards expire on the last day of June 2022.

            * *DAYS*  Rounds up to the last second of the day of expiration.

            * *HOURS*, *MINUTES*, *SECONDS*  No rounding.
          format: int32
          type: integer
      type: object
    money_in_transaction:
      description:
        Defines the original credit transaction (OCT) types that are subject
        to velocity control.
      properties:
        include_credits_types:
          description:
            Specifies the types of credits to include in the original credit
            transaction (OCT).
          items:
            type: string
          type: array
        include_network_load_types:
          description:
            Indicates whether or not cash and check network load transactions
            will be subject to velocity control.
          items:
            type: string
          type: array
      type: object
    msa:
      properties:
        campaign_token:
          type: string
        reload_amount:
          exclusiveMinimum: false
          minimum: 0.01
          type: number
        trigger_amount:
          exclusiveMinimum: false
          minimum: 0.01
          type: number
      required:
        - campaign_token
        - reload_amount
        - trigger_amount
      type: object
    msa_aggregated_balances:
      properties:
        available_balance:
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/msa_aggregated_balances"
          type: object
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          format: date-time
          type: string
        ledger_balance:
          type: number
        pending_credits:
          type: number
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
    msa_balances:
      properties:
        available_balance:
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/msa_balances"
          type: object
        cached_balance:
          type: number
        credit_balance:
          type: number
        currency_code:
          type: string
        impacted_amount:
          type: number
        last_updated_time:
          format: date-time
          type: string
        ledger_balance:
          type: number
        pending_credits:
          type: number
      required:
        - available_balance
        - balances
        - cached_balance
        - credit_balance
        - currency_code
        - last_updated_time
        - ledger_balance
        - pending_credits
      type: object
    msa_returns:
      properties:
        active:
          default: false
          type: boolean
        aggregated_balances:
          $ref: "#/components/schemas/msa_aggregated_balances"
        amount:
          type: number
        business_token:
          type: string
        campaign_token:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        currency_code:
          type: string
        end_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        funding:
          $ref: "#/components/schemas/funding"
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_transaction_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        order_balances:
          $ref: "#/components/schemas/msa_balances"
        original_order_token:
          type: string
        reward_amount:
          type: number
        reward_trigger_amount:
          type: number
        start_date:
          description: yyyy-MM-ddThh:mm:ssZ
          format: date-time
          type: string
        token:
          type: string
        transaction_token:
          type: string
        unloaded_amount:
          type: number
        user_token:
          type: string
      required:
        - active
        - aggregated_balances
        - amount
        - campaign_token
        - created_time
        - currency_code
        - funding
        - last_modified_time
        - last_transaction_date
        - order_balances
        - original_order_token
        - reward_amount
        - reward_trigger_amount
        - transaction_token
      type: object
    network:
      description:
        Contains information from the card network about currency conversion,
        including the original currency of the transaction, the amount of the transaction
        in the original currency, and the conversion rate.
      properties:
        conversion_rate:
          description: |-
            Conversion rate between the origination currency and the settlement currency.

            Returned when the transaction currency is different from the origination currency.
          type: number
        dynamic_currency_conversion:
          default: false
          description:
            Indicates whether currency conversion was performed dynamically
            at the point of sale.
          type: boolean
        original_amount:
          description: Amount of the transaction in the currency in which it originated.
          type: number
        original_currency_code:
          description: Currency type of the origination currency.
          type: string
        settlement_data:
          $ref: "#/components/schemas/settlement_data"
      type: object
    network_account_intelligence_score:
      description:
        Account intelligence score information, as provided by the Mastercard
        network.
      properties:
        name:
          description: The name, as provided by the Mastercard network.
          type: string
        service_type:
          description: The service type, as provided by the Mastercard network.
          type: string
        value:
          description: The value, as provided by the Mastercard network.
          type: string
      type: object
    network_fee_model:
      description: Contains card network fees assessed against the cardholder.
      properties:
        amount:
          description: The amount of the network fee.
          type: number
        credit_debit:
          description: |-
            Indicates whether the fee is a credit or a debit.

            * *C* indicates a credit
            * *D* indicates a debit
          enum:
            - C
            - D
          type: string
        type:
          description: The type of fee assessed by the card network.
          enum:
            - ISSUER_FEE
            - SWITCH_FEE
            - PINDEBIT_ASSOC_FEE
            - ACQUIRER_FEE
            - INTERCHANGE_FEE
            - CUR_CONV_CARDHOLDER_FEE
            - CUR_CONV_ISSUER_FEE
            - CROSS_BORDER_ISSUER_FEE
          type: string
      type: object
    network_metadata:
      description: |-
        Contains network-related metadata for the transaction, including details about the card program and the card product.
        Returned if provided by the card network
      properties:
        account_identification_1:
          type: string
        incoming_response_code:
          description:
            Visa Risk Management esponse code `59`, indicating suspected
            fraud.
          type: string
        product_id:
          description: |-
            Product identification value assigned by the card network to each card product.
            Can be used to track card-level activity by individual account number for premium card products.
          type: string
        program_id:
          description:
            Program identification number used with `product_id` that identifies
            the programs associated with a card within a program registered by the
            issuer with the card network.
          type: string
        spend_qualifier:
          description:
            Indicates whether or not the base spend-assessment threshold
            defined by the card network has been met.
          type: string
        surcharge_free_atm_network:
          description:
            Name of the surcharge-free ATM network used to complete the
            transaction.
          type: string
      type: object
    one_time_request_model:
      properties:
        email:
          description: |-
            Cardholder email address.

            Required when neither the user token nor the admin access token is provided as the Basic Authentication password (case #3).
          maxLength: 255
          minLength: 1
          type: string
        password:
          description: |-
            Password to the cardholder's user account on the Marqeta platform.

            Required when neither the user token nor the admin access token is provided as the Basic Authentication password (case #3).
          maxLength: 255
          minLength: 1
          type: string
        user_token:
          description: |-
            Identifies the cardholder whose data is accessed.
            Send a `GET` request to `/users` to retrieve cardholder tokens.

            Required when the Basic Authentication password is set to an admin access token (case #2).
          maxLength: 36
          minLength: 1
          type: string
      type: object
    order_scope:
      description: Defines the balance threshold and reload amounts.
      properties:
        gpa:
          $ref: "#/components/schemas/gpa"
        msa:
          $ref: "#/components/schemas/msa"
      type: object
    original_credit:
      description:
        Contains information about an original credit transaction (OCT),
        which enables the cardholder to receive funds on the specified card from an
        external source via the card network.
      properties:
        deferred_hold_by:
          enum:
            - absent
            - visa
            - originator
          type: string
        fast_funds_enabled:
          description: |-
            Indicates that Fast Funds are enabled for dual-message original credit transactions.
            If the value of this field is `true`, you must make the funds available to your cardholder within 30 minutes of the transaction.
          type: boolean
        funding_source:
          description: Sender's account from which the OCT draws funds.
          enum:
            - CREDIT
            - DEBIT
            - PREPAID
            - DEPOSIT_ACCOUNT
            - CASH
            - MOBILE_MONEY_ACCOUNT
            - NON_VISA_CREDIT
            - CHECK
            - ACH
          type: string
        screening_score:
          description: |-
            Sanctions screening score to assist with meeting Anti-Money Laundering (AML) obligations.

            Higher scores indicate that the sender's data more closely resembles an entry on the regulatory watchlist.

            A value of 999 means that no screening score is available.
          type: string
        sender_account_type:
          description: The type of account from which the OCT draws funds.
          enum:
            - OTHER
            - RTN_BANK_ACCOUNT
            - IBAN
            - CARD_ACCOUNT
            - EMAIL
            - PHONE_NUMBER
            - BANK_ACCOUNT_NUMBER_AND_BANK_IDENTIFICATION_CODE
            - WALLET_ID
            - SOCIAL_NETWORK_ID
          type: string
        sender_address:
          description: Sender's street address.
          type: string
        sender_city:
          description: Sender's city.
          type: string
        sender_country:
          description: Sender's country.
          type: string
        sender_name:
          description: Full name of the sender.
          type: string
        sender_state:
          description: Sender's state.
          type: string
        transaction_purpose:
          description: The purpose of the original credit transaction.
          type: string
        transaction_type:
          description: Type of original credit transaction.
          enum:
            - account_to_account
            - person_to_person
            - wallet_transfer
            - money_transfer_by_bank
            - business_to_business
            - disbursement
            - government_disbursement
            - gambling_payout
            - loyalty
            - merchant_disbursement
            - online_gambling_payout
            - pension_disbursement
            - prepaid_loads
            - card_bill_payment
            - bill_payment
            - cash_claim
            - cash_in
            - cash_out
            - mobile_air_time_payment
            - money_transfer_by_merchant
            - face_to_face_merchant_payment
            - government_payment
            - payments_goods_services
            - funds_transfer
            - general_business_to_business_transfer
            - business_to_business_transfer
            - cash_deposit
            - purchase_repayment
          type: string
      type: object
    original_credit_sender_data:
      properties:
        deferred_hold_by:
          enum:
            - absent
            - visa
            - originator
          type: string
        fast_funds_enabled:
          type: boolean
        funding_source:
          enum:
            - credit
            - debit
            - prepaid
            - deposit_account
            - cash
            - mobile_money_payment
            - non_visa_credit
            - check
            - ach
          type: string
        sender_account_number:
          type: string
        sender_account_type:
          enum:
            - other
            - rtn_bank_account
            - iban
            - card_account
            - email
            - phone_number
            - bank_account_number_and_identification_code
            - wallet_id
            - social_network_id
          type: string
        sender_address:
          type: string
        sender_city:
          type: string
        sender_country:
          type: string
        sender_name:
          type: string
        sender_reference_number:
          type: string
        sender_state:
          type: string
        transaction_purpose:
          enum:
            - family_support
            - labor_transfers
            - travel
            - education
            - medical_treatment
            - emergency_need
            - savings
            - gifts
            - other
            - salary
            - lending
            - crypto_currency
          type: string
        unique_transaction_reference_number:
          maxLength: 17
          minLength: 1
          type: string
        visa_transaction_purpose:
          type: string
      required:
        - funding_source
      type: object
    orignalcredit_request_model:
      properties:
        amount:
          type: number
        card_acceptor:
          $ref: "#/components/schemas/card_acceptor_model"
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        screening_score:
          type: string
        sender_data:
          $ref: "#/components/schemas/original_credit_sender_data"
        transactionPurpose:
          type: string
        type:
          enum:
            - account_to_account
            - person_to_person
            - prepaid
            - wallet_transfer
            - money_transfer_by_bank
            - business_to_business
            - disbursement
            - government_disbursement
            - gambling_payout
            - loyalty
            - merchant_disbursement
            - online_gambling_payout
            - pension_disbursement
            - prepaid_loads
            - card_bill_payment
            - bill_payment
            - cash_claim
            - cash_in
            - cash_out
            - mobile_air_time_payment
            - money_transfer_by_merchant
            - face_to_face_merchant_payment
            - government_payment
            - payments_goods_services
            - purchase_repayment
          type: string
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - card_token
        - mid
        - type
      type: object
    other_poi:
      description:
        Allows for configuration of points of interaction other than ecommerce
        or ATMs, such as points of sale (POS).
      properties:
        allow:
          default: true
          description: |-
            If set to `true`, card transactions at points of interaction other than e-commerce or ATMs are allowed.
            This group includes points of sale (POS).
          type: boolean
        card_presence_required:
          default: false
          description:
            If set to `true`, cards of this card product type are required
            to be present during the transaction, such as in IVR scenarios.
          type: boolean
        cardholder_presence_required:
          default: false
          description:
            If set to `true`, the cardholder is required to be present
            during the transaction, such as in a restaurant where the card is present
            but the cardholder might not be present when the card is swiped.
          type: boolean
        track1_discretionary_data:
          type: string
        track2_discretionary_data:
          type: string
        use_static_pin:
          default: false
          type: boolean
      type: object
    pan_request:
      properties:
        cvv_number:
          description: |-
            Three-digit card verification value (CVV2) included on the back of the card.

            This value cannot be updated.
          type: string
        expiration:
          description: Card expiration date.
          type: string
        pan:
          description: |-
            Primary account number (PAN) of the card whose information you want to retrieve.

            Send a `GET` request to `/cards/{token}/showpan` to retrieve the PAN for a specific card.
          type: string
      required:
        - pan
      type: object
    pan_response:
      properties:
        card_token:
          description: Unique identifier of the card.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        user_token:
          description: Unique identifier of the cardholder.
          type: string
      required:
        - card_token
        - created_time
        - last_modified_time
        - user_token
      type: object
    password_update_model:
      properties:
        current_password:
          description:
            Current password to the cardholder's user account on the Marqeta
            platform.
          maxLength: 255
          minLength: 1
          type: string
        new_password:
          description: |-
            New password to the cardholder's user account on the Marqeta platform.

            * Must contain at least one numeral +
            * Must contain at least one lowercase letter +
            * Must contain at least one uppercase letter +
            * Must contain at least one of these symbols: `@ # $ % ! ^ & * ( ) \ _ + ~ ` - = [ ] { } , ; : ' " , . / < > ?`
          maxLength: 255
          minLength: 1
          type: string
      required:
        - current_password
        - new_password
      type: object
    payment_card_funding_source_model:
      allOf:
        - $ref: "#/components/schemas/funding_source_model"
        - properties:
            account_suffix:
              type: string
            account_type:
              type: string
            business_token:
              description: Required if 'user_token' is null
              type: string
            exp_date:
              type: string
            user_token:
              description: Required if 'business_token' is null
              type: string
          required:
            - account_suffix
            - account_type
            - exp_date
          type: object
    payment_card_response_model:
      properties:
        account_suffix:
          description: Account identifier appended to the payment card number.
          type: string
        account_type:
          description: Type of payment card account.
          type: string
        active:
          default: false
          description: Specifies whether the account is active.
          type: boolean
        business_token:
          description: |-
            Unique identifier of the business account holder.
            This token is returned if a `user_token` is not specified.
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        exp_date:
          description: Payment card expiration date.
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.
          type: boolean
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        token:
          description: Unique identifier of the funding source.
          type: string
        type:
          description: Funding source type.
          type: string
        user_token:
          description: |-
            Unique identifier of the user account holder.
            This token is returned if a `business_token` is not specified.
          type: string
      required:
        - account_suffix
        - account_type
        - active
        - created_time
        - exp_date
        - is_default_account
        - last_modified_time
        - token
        - type
      type: object
    peer_transfer_request:
      properties:
        amount:
          description: Amount of the transfer.
          type: number
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        memo:
          description: Additional descriptive text about the transfer.
          maxLength: 99
          minLength: 1
          type: string
        recipient_business_token:
          description: |-
            Specifies the business account holder that receives funds.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        recipient_user_token:
          description: |-
            Specifies the user account holder that receives funds.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
        sender_business_token:
          description: |-
            Specifies the business account holder that sends funds.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        sender_user_token:
          description: |-
            Specifies the user account holder that sends funds.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
        tags:
          description: Metadata about the peer transfer.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the peer transfer request.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
      type: object
    peer_transfer_response:
      description:
        Contains information about a peer transfer, including sender and
        recipient tokens, transfer amount, and currency code.
      properties:
        amount:
          description: Amount of the transfer.
          type: number
        created_time:
          format: date-time
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        memo:
          description: Additional descriptive text about the peer transfer.
          type: string
        recipient_business_token:
          description: Specifies the business account holder that receives funds.
          type: string
        recipient_user_token:
          description: Specifies the user account holder that receives funds.
          type: string
        sender_business_token:
          description: Specifies the business account holder that sends funds.
          type: string
        sender_user_token:
          description: Specifies the user account holder that sends funds.
          type: string
        tags:
          description: Metadata about the peer transfer.
          type: string
        token:
          description: Unique identifier of the peer transfer request.
          type: string
      required:
        - amount
        - created_time
        - currency_code
        - token
      type: object
    pin_request:
      properties:
        control_token:
          description: |-
            Unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        pin:
          description: Four-digit number to associate with the card.
          type: string
      required:
        - control_token
        - pin
      type: object
    pin_reveal_request:
      properties:
        cardholder_verification_method:
          description: |-
            The supplemental method used to verify the cardholder's identity before revealing the card's personal identification number (PIN).

            The possible cardholder verification methods are:

            * *BIOMETRIC_FACE:* In-app authentication via facial recognition
            * *BIOMETRIC_FINGERPRINT:* In-app authentication via biometric fingerprint
            * *EXP_CVV:* In-app authentication by entering the card's expiration date and card verification value (CVV)
            * *LOGIN:* In-app authentication by re-entering the app password
            * *OTP:* Two-factor authentication involving a one-time password (OTP)
            * *OTP_CVV:* Two-factor authentication involving the card's CVV and an OTP
            * *OTHER:* Authentication that relies on other secure methods
          enum:
            - BIOMETRIC_FACE
            - BIOMETRIC_FINGERPRINT
            - LOGIN
            - EXP_CVV
            - OTP_CVV
            - OTP
            - OTHER
          type: string
        control_token:
          description: |-
            Unique value generated as a result of issuing a `POST` request to the `/pins/controltoken` endpoint.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - cardholder_verification_method
        - control_token
      type: object
    ping_response:
      properties:
        env:
          type: string
        id:
          type: string
        revision:
          type: string
        success:
          type: boolean
        timestamp:
          type: string
        version:
          type: string
      type: object
    poi:
      description: Governs the point of interaction.
      properties:
        atm:
          default: false
          description:
            If set to `true`, cards can be used for withdrawing cash at
            an ATM and for receiving cash back at a point of sale (POS).
          type: boolean
        ecommerce:
          default: true
          description: If set to `true`, cards can be used for online purchases.
          type: boolean
        other:
          $ref: "#/components/schemas/other_poi"
      type: object
    pos:
      description: |-
        Contains information about the point of sale, including details on how the card was presented.

        Returned if provided by the card network, and the request uses Transaction Model v2 of the Marqeta Core API.
        Not returned for Transaction Model v1 requests.
      properties:
        card_data_input_capability:
          description: How the terminal accepts card data.
          enum:
            - UNKNOWN
            - NO_TERMINAL
            - MAG_STRIPE
            - MAG_STRIPE_CONTACTLESS
            - MAG_STRIPE_KEY_ENTRY
            - CHIP
            - CHIP_CONTACTLESS
            - CHIP_MAG_STRIPE
            - CHIP_MAG_STRIPE_KEY_ENTRY
            - KEY_ENTRY
            - OCR
            - MICR
            - BAR_CODE
          type: string
        card_holder_presence:
          default: false
          description: Whether the cardholder was present during the transaction.
          type: boolean
        card_presence:
          default: false
          description: Whether the card was present during the transaction.
          type: boolean
        cardholder_authentication_method:
          description: Method used to authenticate the cardholder.
          enum:
            - UNSPECIFIED
            - NON_AUTHENTICATED
            - SIGNATURE
            - PIN
            - ID_VERIFIED
          type: string
        country_code:
          description: Country code of the card acceptor or terminal.
          type: string
        is_installment:
          default: false
          description: Whether the transaction is an installment payment.
          type: boolean
        is_recurring:
          default: false
          description: Whether the transaction is recurring.
          type: boolean
        pan_entry_mode:
          description:
            Method used for capturing the card primary account number (PAN)
            during the transaction.
          enum:
            - UNKNOWN
            - MANUAL
            - MAG_STRIPE
            - MAG_STRIPE_CONTACTLESS
            - BAR_CODE
            - OCR
            - MICR
            - CHIP
            - CHIP_CONTACTLESS
            - CARD_ON_FILE
            - CHIP_FALLBACK
            - OTHER
          type: string
        partial_approval_capable:
          default: false
          description:
            Indicates whether the card acceptor or terminal supports partial-approval
            transactions.
          type: boolean
        pin_entry_mode:
          description: |-
            Indicates whether the card acceptor or terminal can capture card personal identification numbers (PINs).

            *NOTE:* This field does not indicate whether a PIN was entered.
          enum:
            - UNKNOWN
            - "TRUE"
            - "FALSE"
            - DEFECTIVE
          type: string
        pin_present:
          default: false
          description: Indicates whether the cardholder entered a PIN during the transaction.
          type: boolean
        purchase_amount_only:
          default: false
          description:
            Indicates whether the card acceptor or terminal supports purchase-only
            approvals.
          type: boolean
        special_condition_indicator:
          description: |-
            Indicates a higher-risk operation, such as a quasi-cash or cryptocurrency transaction.

            These transactions typically involve non-financial institutions.
          enum:
            - UNSPECIFIED
            - CRYPTOCURRENCY_PURCHASE
            - QUASI_CASH
            - DEBT_PAYMENT
          type: string
        terminal_attendance:
          description: Whether the card acceptor/terminal was attended.
          enum:
            - UNSPECIFIED
            - ATTENDED
            - UNATTENDED
            - NO_TERMINAL
          type: string
        terminal_id:
          description: Card acceptor or terminal identification number.
          type: string
        terminal_location:
          description: Location of the card acceptor/terminal.
          enum:
            - ON_PREMISE
            - OFF_PREMISE_MERCHANT
            - OFF_PREMISE_CARDHOLDER
            - NO_TERMINAL
          type: string
        terminal_type:
          description: Type of card acceptor/terminal.
          enum:
            - AUTO_DISPENSER_WITH_PIN
            - SELF_SERVICE
            - LIMITED_AMOUNT
            - IN_FLIGHT
            - ECOMMERCE
            - TRANSPONDER
          type: string
        zip:
          description: United States ZIP code of the card acceptor or terminal.
          type: string
      type: object
    pre_kyc_controls:
      description: |-
        Contains configuration fields for a number of controls.

        *NOTE:* These controls are in effect only if `kyc_required` is `ALWAYS` or `CONDITIONAL` and the account holder has not yet passed KYC.
      properties:
        balance_max:
          description:
            Specifies the maximum ledger balance allowed for members of
            the account holder group.
          exclusiveMinimum: false
          minimum: 0
          type: number
        cash_access_enabled:
          default: false
          description: |-
            If set to `false`, this control prohibits an account holder's cards from being used at an ATM.

            *NOTE:* If a card product's `config.poi.atm` field is set to `false`, associated cards are prohibited from being used at an ATM regardless of this control's setting.
          type: boolean
        enable_non_program_loads:
          default: false
          description: |-
            If set to `true`, funds can only be loaded from a program funding source.

            This restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments.
          type: boolean
        international_enabled:
          default: false
          description: |-
            If set to `false`, this control prohibits an account holder from conducting transactions with a non-domestic country code.

            *NOTE:* If a card product is configured to prohibit non-domestic transactions, its associated cards are prohibited from such transactions regardless of this control's setting.
          type: boolean
        is_reloadable_pre_kyc:
          default: false
          description: |-
            If set to `false`, this control prohibits an account holder's account from being reloaded with funds after an initial load.

            This restriction applies to GPA orders, peer transfers, and direct deposits, but does not apply to operator adjustments.
          type: boolean
      type: object
    preceding_transaction:
      description: |-
        Returned for `authorization.clearing` transaction types following a financial advice.

        Contains information about the preceding transaction.
      properties:
        amount:
          description: Amount of the preceding transaction.
          type: number
        token:
          description: Unique identifier of the preceding transaction.
          type: string
      type: object
    program:
      description: Information about the program on the Marqeta platform.
      properties:
        long_code:
          description: The program long code on the Marqeta platform.
          type: string
        program_id:
          description: The program identifier on the Marqeta platform.
          type: string
        short_code:
          description: The program short code on the Marqeta platform.
          type: string
      required:
        - long_code
        - program_id
        - short_code
      type: object
    program_funding_source_model:
      allOf:
        - $ref: "#/components/schemas/funding_source_model"
        - properties:
            name:
              type: string
          required:
            - name
          type: object
    program_funding_source_request:
      properties:
        active:
          description: Indicates whether the program funding source is active.
          type: boolean
        name:
          description: Name of the program funding source.
          maxLength: 50
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the funding source.
            If you do not include a token, the system will generate one automatically.
            As this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    program_funding_source_response:
      properties:
        account:
          description: The account identifier.
          type: string
        active:
          description: |-
            Indicates whether the program funding source is active.
            This field is returned if it exists in the resource.
          type: boolean
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description: Date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        name:
          description: Name of the program funding source.
          maxLength: 50
          minLength: 1
          type: string
        token:
          description: Unique identifier of the funding source.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - account
        - created_time
        - last_modified_time
        - name
        - token
      type: object
    program_funding_source_update_request:
      properties:
        active:
          description: Indicates whether the program funding source is active.
          type: boolean
        name:
          description: Name of the program funding source.
          maxLength: 50
          minLength: 1
          type: string
      type: object
    program_gateway_funding_source_model:
      allOf:
        - $ref: "#/components/schemas/funding_source_model"
        - properties:
            name:
              type: string
          required:
            - name
          type: object
    program_reserve_account_balance:
      properties:
        available_balance:
          description: |-
            Ledger balance, minus any authorized transactions that have not yet cleared.
            When using JIT Funding, this balance is usually equal to $0.00.
          readOnly: true
          type: number
        balances:
          additionalProperties:
            $ref: "#/components/schemas/program_reserve_account_balance"
          description: |-
            Contains program reserve account balance information, organized by currency code.
            Sometimes referred to as a _program funding account_.
          type: object
        credit_balance:
          description: Not currently in use.
          readOnly: true
          type: number
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        ledger_balance:
          description: |-
            When using standard funding: The funds that are available to spend immediately, including funds from any authorized transactions that have not yet cleared.
            When using Just-in-Time (JIT) Funding: Authorized funds that are currently on hold, but not yet cleared.
          readOnly: true
          type: number
        pending_credits:
          description:
            ACH loads that have been accepted, but for which the funding
            time has not yet elapsed.
          readOnly: true
          type: number
      type: object
    program_reserve_transaction_response:
      properties:
        amount:
          description: |-
            Amount of the program reserve account credit or debit.
            Sometimes referred to as a _program funding account_.
          type: number
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        is_collateral:
          type: boolean
        last_modified_time:
          description: The date and time when the resource was last modified, in UTC.
          format: date-time
          type: string
        memo:
          description: Memo or note describing the transaction.
          type: string
        state:
          description: Transaction state.
          enum:
            - PENDING
            - COMPLETE
          type: string
        tags:
          description: Comma-delimited list of tags describing the transaction.
          type: string
        token:
          description: The unique identifier of the transaction response.
          type: string
        transaction_token:
          description: Unique identifier of the transaction.
          type: string
        type:
          description: Transaction type.
          enum:
            - CREDIT
            - DEBIT
            - PENDING_CREDIT
            - PENDING_DEBIT
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    program_transfer:
      properties:
        amount:
          description: Amount of program transfer.
          type: number
        business_token:
          description: |-
            Unique identifier of the business.
            Pass either a `business_token` or a `user_token`, not both.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        fees:
          description: |-
            Contains attributes that define characteristics of one or more fees.
            This array is returned in the response when it is included in the request.
          items:
            $ref: "#/components/schemas/fee_model"
          type: array
        memo:
          description: Memo or note describing the program transfer.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the program transfer.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the program transfer.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        type_token:
          description: |-
            Unique identifier of the program transfer type.

            Send a `GET` request to `/programtransfers/types` to retrieve program transfer type tokens.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the user.
            Pass either a `user_token` or a `business_token`, not both.

            Send a `GET` request to `/users` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - type_token
      type: object
    program_transfer_response:
      description:
        Contains information about a program transfer, which moves funds
        from an account holder's GPA to a program funding source.
      properties:
        amount:
          description: Amount of program transfer.
          type: number
        business_token:
          description: |-
            Unique identifier of the business account holder.
            Returned if `user_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
        created_time:
          description:
            Date and time when the program transfer object was created,
            in UTC.
          format: date-time
          type: string
        currency_code:
          description: Three-digit ISO 4217 currency code.
          type: string
        fees:
          description:
            Contains attributes that define characteristics of one or more
            fees.
          items:
            $ref: "#/components/schemas/fee_detail"
          type: array
        jit_funding:
          $ref: "#/components/schemas/jit_funding_api"
        memo:
          description: Additional description of the program transfer.
          maxLength: 99
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the program transfer.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: Unique identifier of the program transfer.
          maxLength: 36
          minLength: 1
          type: string
        transaction_token:
          description: Unique identifier of the transaction.
          type: string
        type_token:
          description: Unique identifier of the program transfer type.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the user account holder.
            Returned if `business_token` is not specified.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - transaction_token
        - type_token
      type: object
    program_transfer_type_request:
      properties:
        memo:
          description: Memo or note describing the program transfer type.
          maxLength: 99
          minLength: 1
          type: string
        program_funding_source_token:
          description: |-
            Unique identifier of the program funding source to which program transfers will be credited.

            Send a `GET` request to `/fundingsources/program` to retrieve program funding source tokens.
          maxLength: 36
          minLength: 1
          type: string
        tags:
          description:
            Comma-delimited list of tags describing the program transfer
            type.
          maxLength: 255
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the program transfer type.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - memo
        - program_funding_source_token
      type: object
    program_transfer_type_response:
      properties:
        created_time:
          description:
            The date and time when the program transfer type object was
            created, in UTC.
          format: date-time
          type: string
        last_modified_time:
          description:
            Date and time when the program transfer type object was last
            modified, in UTC.
          format: date-time
          type: string
        memo:
          description: Memo or note describing the program transfer type.
          type: string
        program_funding_source_token:
          description:
            Unique identifier of the program funding source to which program
            transfers will be credited.
          type: string
        tags:
          description:
            Comma-delimited list of tags describing the program transfer
            type.
          type: string
        token:
          description: Unique identifier of the program transfer type request object.
          type: string
      required:
        - program_funding_source_token
        - token
      type: object
    provisioning_controls:
      properties:
        dwt_use_card_status_during_auth:
          type: boolean
        dwt_verify_atc_during_auth:
          type: boolean
        force_yellow_path_for_card_product:
          description:
            A value of `true` requires identity verification set-up for
            all digital wallets at the card product level.
          type: boolean
        in_app_provisioning:
          $ref: "#/components/schemas/in_app_provisioning"
        manual_entry:
          $ref: "#/components/schemas/manual_entry"
        wallet_provider_card_on_file:
          $ref: "#/components/schemas/wallet_provider_card_on_file"
        web_push_provisioning:
          $ref: "#/components/schemas/web_push_provisioning"
      type: object
    push_to_card_disburse_request:
      properties:
        amount:
          exclusiveMaximum: false
          exclusiveMinimum: false
          maximum: 50000
          minimum: 0.01
          type: number
        currency_code:
          type: string
        memo:
          maxLength: 99
          minLength: 1
          type: string
        payment_instrument_token:
          maxLength: 36
          minLength: 1
          type: string
        soft_descriptor:
          $ref: "#/components/schemas/PTCSoftDescriptor"
        tags:
          maxLength: 255
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - currency_code
        - payment_instrument_token
      type: object
    push_to_card_disbursement_response:
      properties:
        amount:
          type: number
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        currency_code:
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        memo:
          maxLength: 99
          minLength: 1
          type: string
        payment_instrument_token:
          maxLength: 36
          minLength: 1
          type: string
        status:
          type: string
        tags:
          maxLength: 255
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    push_to_card_request:
      properties:
        address_1:
          maxLength: 255
          minLength: 1
          type: string
        address_2:
          maxLength: 255
          minLength: 1
          type: string
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          type: string
        cvv:
          type: string
        exp_date:
          type: string
        name_on_card:
          maxLength: 50
          minLength: 1
          type: string
        pan:
          maxLength: 19
          minLength: 14
          type: string
        postal_code:
          maxLength: 10
          minLength: 1
          type: string
        state:
          maxLength: 2
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - address_1
        - city
        - country
        - cvv
        - exp_date
        - name_on_card
        - pan
        - postal_code
        - state
        - user_token
      type: object
    push_to_card_response:
      properties:
        address_1:
          maxLength: 255
          minLength: 1
          type: string
        address_2:
          maxLength: 255
          minLength: 1
          type: string
        city:
          maxLength: 40
          minLength: 1
          type: string
        country:
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        exp_date:
          type: string
        fast_fund_transfer_eligible:
          default: false
          type: boolean
        gambling_fund_transfer_eligible:
          default: false
          type: boolean
        last_four:
          type: string
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        last_name:
          readOnly: true
          type: string
        name_on_card:
          type: string
        postal_code:
          maxLength: 10
          minLength: 1
          type: string
        state:
          maxLength: 2
          minLength: 1
          type: string
        token:
          maxLength: 36
          minLength: 1
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    real_time_fee_group:
      description: Contains information about a real-time fee group.
      properties:
        active:
          default: false
          description: Indicates whether the real-time fee group is active.
          type: boolean
        created_time:
          description:
            Date and time when the real-time fee group was created, in
            UTC.
          format: date-time
          type: string
        fee_tokens:
          description: Specifies the fees in this real-time fee group.
          items:
            type: string
          type: array
          uniqueItems: true
        last_modified_time:
          description:
            Date and time when the real-time fee group was last modified,
            in UTC.
          format: date-time
          type: string
        name:
          description: Descriptive name for the real-time fee group.
          type: string
        token:
          description: Unique identifier of the real-time fee group.
          type: string
      required:
        - active
        - name
        - token
      type: object
    real_time_fee_group_create_request:
      properties:
        active:
          default: true
          description: Indicates whether the real-time fee group is active.
          type: boolean
        fee_tokens:
          description: |-
            Unique identifiers of the fees in this real-time fee group.
            Send a `GET` request to `/fees` to retrieve fee resource tokens.

            No two fees in the group can be applicable to the same transaction type (in other words, each fee must have a different value for its `real_time_assessment.transaction_type` field).
          items:
            type: string
          type: array
          uniqueItems: true
        name:
          description: Descriptive name for the real-time fee group.
          maxLength: 50
          minLength: 1
          type: string
        token:
          description: |-
            Unique identifier of the real-time fee group.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - name
      type: object
    real_time_fee_group_request:
      properties:
        active:
          default: true
          description: Indicates whether the real-time fee group is active.
          type: boolean
        fee_tokens:
          description: |-
            Specifies the fees in this real-time fee group.
            Send a `GET` request to `/fees` to retrieve fee resources tokens.

            No two fees in the group can be applicable to the same transaction type (in other words, each fee must have a different value for its `real_time_assessment.transaction_type` field).
          items:
            type: string
          type: array
          uniqueItems: true
        name:
          description: Descriptive name for the real-time fee group.
          maxLength: 50
          minLength: 1
          type: string
      type: object
    real_time_standin_criteria:
      description: Specifies which event types automatically enable Commando Mode.
      properties:
        enabled:
          default: false
          description: |-
            If set to `true`, Commando Mode is automatically enabled by events defined in the `real_time_standin_criteria` object.
            If set to `false`, Auto Commando Mode is not enabled.
          type: boolean
        include_application_errors:
          default: false
          description:
            If set to `true`, an application error (any non-connection,
            non-timeout error) automatically enables Commando Mode when `real_time_standin_criteria.enabled`
            is also `true`.
          type: boolean
        include_connection_errors:
          default: false
          description:
            If set to `true`, a non-timeout connection error automatically
            enables Commando Mode when `real_time_standin_criteria.enabled` is also
            `true`.
          type: boolean
        include_response_timeouts:
          default: false
          description:
            If set to `true`, a gateway response slower than 3000ms automatically
            enables Commando Mode when `real_time_standin_criteria.enabled` is also
            `true`.
          type: boolean
      type: object
    request_for_apple_pay_wpp_JWT:
      properties:
        card_token:
          description: Unique identifier of the card resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
      required:
        - card_token
      type: object
    request_for_wpp_parameters:
      properties:
        card_token:
          description: Unique identifier of the card resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
      required:
        - card_token
      type: object
    reset_user_password_email_model:
      properties:
        email:
          description: Cardholder email address.
          maxLength: 255
          minLength: 1
          type: string
      required:
        - email
      type: object
    reset_user_password_model:
      properties:
        new_password:
          description:
            New password to the cardholder's user account on the Marqeta
            platform.
          maxLength: 255
          minLength: 1
          type: string
        user_token:
          description: Unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - new_password
        - user_token
      type: object
    response:
      description:
        Response codes and memos for address verification, card security
        verification, and transactions.
      properties:
        additional_information:
          description: |-
            Information about the velocity control applied to the transaction.

            *NOTE:* This field is returned only in transaction response objects.
            It is not returned in address verification or card security verification response objects.
          type: string
        code:
          description: |-
            Four-digit response code for address verification, card security code verification, or transactions.

            For address verification responses, the code is an assertion by the Marqeta platform as to whether its address verification data matches that provided by the cardholder:

            [cols="2,3,3"]
            !===
            ! Code ! Address ! Postal Code

            ! 0000
            ! Match
            ! Match

            ! 0001
            ! Match
            ! Unmatched

            ! 0100
            ! Unmatched
            ! Match

            ! 0101
            ! Unmatched
            ! Unmatched

            ! 0200
            ! Data Not Present
            ! Match

            ! 0201
            ! Data Not Present
            ! Unmatched

            ! 0002
            ! Match
            ! Data Not Present

            ! 0102
            ! Unmatched
            ! Data Not Present

            ! 0303
            ! Not Validated
            ! Not Validated
            !===

            For card security verification, the code indicates whether the verification check passed and can have these possible values:

            * 0000  passed
            * 0001  did not pass

            For a transaction, the code describes the outcome of the attempted transaction.
            For the full list of transaction codes, see <</developer-guides/about-transactions#_transaction_response_codes, Transaction response codes>>.
          type: string
        memo:
          description: Additional text that describes the response.
          type: string
      required:
        - code
        - memo
      type: object
    result:
      description: Contains information about the KYC verification result.
      properties:
        codes:
          description: An array of KYC verification result code objects.
          items:
            $ref: "#/components/schemas/result_code"
          type: array
        status:
          description: KYC verification status.
          type: string
      type: object
    result_code:
      description:
        Contains the KYC result code and a descriptive message about that
        codes.
      properties:
        code:
          description:
            For any `PENDING` or `FAILURE` outcome, see the <<user_kyc_failure_codes,
            User KYC failure codes>> table, the <<outcome_reasons_for_the_business,
            Outcome reasons for the business>> table, or the <<outcome_reasons_for_individuals_associated_with_a_business,
            Outcome reasons for individuals associated with a business>> table.
          type: string
        message:
          description: Result code description.
          type: string
      type: object
    risk_assessment:
      description:
        Contains the digital wallet provider's risk assessment for provisioning
        the digital wallet token.
      properties:
        score:
          description:
            Wallet provider's decision as to whether the digital wallet
            token should be provisioned.
          type: string
        version:
          description: Wallet provider's risk assessment version.
          type: string
      type: object
    riskcontrol_tags:
      description: The RiskControl tags that were triggered by the transaction.
      properties:
        rule_name:
          description:
            Name of the rule, as defined in the Real-Time Decisioning dashboard,
            that was triggered.
          type: string
        tag:
          description:
            Tag name defined in the rule definition in the Real-Time Decisioning
            dashboard.
          type: string
        values:
          description: Value associated with the tag.
          items:
            type: string
          type: array
      type: object
    samsung_push_tokenize_request_data:
      description: Contains details about a card tokenization push request.
      properties:
        card_type:
          description: Specifies the type of card.
          type: string
        display_name:
          description: |-
            Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).
            `Visa 5678`, for example.
          type: string
        extra_provision_payload:
          description: Encrypted card or cardholder details.
          type: string
        last_digits:
          description:
            Last four digits of the primary account number of the physical
            or virtual card.
          type: string
        network:
          description: Specifies the card network of the physical or virtual card.
          type: string
        token_service_provider:
          description:
            Specifies the network that provides the digital wallet token
            service, as determined by the Samsung Wallet library.
          type: string
      type: object
    selective_auth:
      description: Contains information about authorization decisions.
      properties:
        dmd_location_sensitivity:
          default: 0
          description: |-
            Determines what type of merchant information is required for a match (authorization).
            Not relevant if `enable_regex_search_chain = false`.

            * *0*  Requires exact match on card acceptor name and postal code to existing entry in Marqeta Merchant database (most restrictive).
            * *1*  Partial match on card acceptor name (least restrictive).
            * *2*  Partial match on card acceptor name; exact match on card acceptor city.
            * *3*  Partial match on card acceptor name; exact match on card acceptor postal code.
            * *4*  Partial match on card acceptor name; exact match on street address 1 and postal code.
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        enable_regex_search_chain:
          default: false
          description:
            Set to `true` to perform regular expression checking on the
            description received in the authorization.
          type: boolean
        sa_mode:
          default: 1
          description: |-
            Specifies the selective authorization mode.

            * *0* — Inactive
            * *1* — Active (attempts to authorize a merchant that does not have a recognized MID by matching other pieces of information)
            * *2* — Logging and notification (checks the transaction and logs results, but does not authorize)

            Selective authorization applies to transactions that are limited to specific merchants.
            Matching requirements for authorization are set by the `dmd_location_sensitivity` field.
          enum:
            - 0
            - 1
            - 2
          format: int32
          type: integer
      type: object
    sending_provisioning_data_to_google_pay_backend_request:
      properties:
        card_setting:
          description: |-
            Indicates if the Funding Primary Account Number (FPAN) will be attempted.

            * *1* - FPAN save will be attempted.
            * *0* - FPAN save will not be attempted.
          enum:
            - 0
            - 1
          example: 0
          format: int32
          type: integer
        card_token:
          description: Unique identifier of the card resource.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        client_session_id:
          description:
            String provided by Google Wallet that identifies the client
            session.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        integrator_id:
          description:
            Google-assigned string that uniquely identifies both the integrator
            that is initiating the session and the issuer of the card.
          example: ACMEISSUER_1
          type: string
        public_device_id:
          description:
            String provided by Google Wallet that identifies the Android
            device that will receive the digital wallet token.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        public_wallet_id:
          description:
            String provided by Google Wallet that identifies the device-scoped
            wallet that receives the digital wallet token.
          example: 5855opl9-abcc-4cb7-a330-xyze5799ea5
          type: string
        server_session_id:
          description:
            String provided by Google Wallet that identifies the backend
            session.
          example: 8c84fab9-889c-4cb7-a330-accac5799ea5
          type: string
        token_setting:
          description: |-
            Indicates if tokenization will be attempted.

            * *1* - Tokenization will be attempted.
            * *0* - Tokenization will not be attempted.
          enum:
            - 0
            - 1
          example: 0
          format: int32
          type: integer
      required:
        - card_setting
        - card_token
        - client_session_id
        - integrator_id
        - public_device_id
        - public_wallet_id
        - server_session_id
        - token_setting
      type: object
    settlement_data:
      description:
        Contains information from the card network about currency conversion
        at the time of settlement, including the original currency of the transaction,
        the amount of the transaction in the original currency, and the conversion
        rate.
      properties:
        amount:
          description: The settled amount.
          type: number
        conversion_rate:
          description: |-
            Returned when the transaction currency is different from the origination currency.

            Conversion rate between the origination currency and the settlement currency.
          type: number
        currency_code:
          description: The ISO 4217 code of the currency used in the transaction.
          type: string
      type: object
    shipping:
      description: Specifies shipping details for the order.
      properties:
        care_of_line:
          description: |-
            Adds the specified value as a care of (C/O) line to the mailing carrier.

            *NOTE:* This field can be specified on cards, card products, and bulk card orders.
            If you specify this field at multiple levels, the order of precedence is: card, bulk card order, card product.
          type: string
        method:
          description: Specifies the shipping service.
          enum:
            - LOCAL_MAIL
            - LOCAL_MAIL_PACKAGE
            - GROUND
            - TWO_DAY
            - OVERNIGHT
            - INTERNATIONAL
            - INTERNATIONAL_PRIORITY
            - LOCAL_PRIORITY
            - FEDEX_EXPEDITED
            - FEDEX_REGULAR
            - UPS_EXPEDITED
            - UPS_REGULAR
            - USPS_EXPEDITED
            - USPS_REGULAR
          type: string
        recipient_address:
          $ref: "#/components/schemas/fulfillment_address_request"
        return_address:
          $ref: "#/components/schemas/fulfillment_address_request"
      type: object
    simulation_response_model:
      properties:
        raw_iso8583:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        transaction:
          $ref: "#/components/schemas/transaction_model"
      type: object
    special:
      description: Contains information about merchant onboarding.
      properties:
        merchant_on_boarding:
          default: false
          description:
            If set to `true`, cards of this card product type can be used
            for merchant onboarding.
          type: boolean
      type: object
    spend_control_association:
      description: Defines the group of users to which the velocity control applies.
      properties:
        card_product_token:
          description: |-
            Unique identifier of the card product.

            Pass either `card_product_token` or `user_token`, not both.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the cardholder.

            Pass either `card_product_token` or `user_token`, not both.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    ssn_response_model:
      description: Contains tax identification information.
      properties:
        nin:
          description: National Identification Number (NIN).
          type: string
        sin:
          description: Social Insurance Number (SIN).
          type: string
        ssn:
          description: United States Social Security Number (SSN).
          type: string
        tin:
          description: Taxpayer Identification Number (TIN).
          type: string
      type: object
    store_response_model:
      properties:
        active:
          default: true
          type: boolean
        address1:
          maxLength: 255
          minLength: 0
          type: string
        address2:
          maxLength: 255
          minLength: 0
          type: string
        city:
          maxLength: 40
          minLength: 0
          type: string
        contact:
          maxLength: 40
          minLength: 0
          type: string
        contact_email:
          maxLength: 40
          minLength: 0
          type: string
        country:
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        keyed_auth_cvv_enforced:
          default: false
          type: boolean
        last_modified_time:
          description: yyyy-MM-ddTHH:mm:ssZ
          format: date-time
          type: string
        latitude:
          format: float
          type: number
        longitude:
          format: float
          type: number
        merchant_token:
          maxLength: 36
          minLength: 0
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        name:
          maxLength: 40
          minLength: 0
          type: string
        network_mid:
          maxLength: 50
          minLength: 1
          type: string
        partial_approval_capable:
          default: false
          type: boolean
        partial_auth_flag:
          default: true
          description: 1 char max
          type: boolean
        phone:
          maxLength: 10
          minLength: 0
          type: string
        postal_code:
          maxLength: 10
          minLength: 0
          type: string
        province:
          maxLength: 20
          minLength: 0
          type: string
        state:
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: The unique identifier of the merchant
          maxLength: 36
          minLength: 1
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
      required:
        - address1
        - city
        - created_time
        - last_modified_time
        - merchant_token
        - mid
        - name
        - state
      type: object
    strong_customer_authentication_limits:
      description:
        Contains information about Strong Customer Authentication (SCA)
        behavior for contactless point-of-sale (POS) and low-value payment (LVP) e-commerce
        transactions.
      properties:
        cavv_authentication_amount_incremental_percentage:
          readOnly: true
          type: string
        enable_cavv_authentication_amount_validation:
          readOnly: true
          type: boolean
        sca_contactless_cumulative_amount_limit:
          description: |-
            Specifies the cumulative limit of transactions the cardholder can perform before receiving an SCA challenge.

            A value of `0` in this field means that the cumulative amount spent in contactless POS transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_contactless_transaction_limit:
          description: |-
            Specifies the maximum allowable amount for a single contactless point-of-sale (POS) transaction, above which the cardholder receives a strong customer authentication (SCA) challenge.

            A value of `0` in this field means that the amount of any single contactless POS transaction performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_contactless_transactions_count_limit:
          description: |-
            Specifies the number of contactless POS transactions the cardholder can perform before receiving an SCA challenge.

            A value of `0` in this field means that the number of contactless POS transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          format: int32
          readOnly: true
          type: integer
        sca_contactless_transactions_currency:
          description: |-
            Specifies the currency type for contactless POS transactions.

            This field is required if either the `sca_contactless_transaction_limit` field or the `sca_contactless_cumulative_amount_limit` field in this object contains a value, even if that value is `0`.
          readOnly: true
          type: string
        sca_lvp_cumulative_amount_limit:
          description: |-
            Specifies the cumulative limit of LVP e-commerce transactions the cardholder can perform before receiving an SCA challenge.

            For example, if you set the value of this field to `100.00`, your cardholder can perform two transactions for `30.00` and two transactions for `20.00` before receiving an SCA challenge.

            If you leave this field blank, the cumulative amount spent in LVP e-commerce transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_lvp_transaction_limit:
          description: |-
            Specifies the maximum allowable amount for a single low-value payment (LVP) e-commerce transaction, above which the cardholder receives a strong customer authentication (SCA) challenge.

            If you leave this field blank, the amount of any single LVP e-commerce transaction performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          readOnly: true
          type: number
        sca_lvp_transactions_count_limit:
          description: |-
            Specifies the number of LVP e-commerce transactions the cardholder can perform before receiving an SCA challenge.

            If you leave this field blank, the total number of LVP e-commerce transactions performed by the cardholder does not impact the decision of whether or not an SCA challenge is served.
          format: int32
          readOnly: true
          type: integer
        sca_lvp_transactions_currency:
          description: |-
            Specifies the currency type for LVP e-commerce transaction limits.

            This field is required if any one of the `sca_lvp_transaction_limit`, `sca_lvp_cumulative_amount_limit`, or `sca_lvp_transactions_count_limit` fields in this object contains a value, even if that value is `0`.
          readOnly: true
          type: string
        sca_tra_exemption_amount_limit:
          description: |-
            Specifies the maximum allowable amount for a single low-value payment (LVP) e-commerce transaction with transaction risk analysis (TRA) exemption sent by the merchant or acquirer.
            If the transaction amount exceeds the specified limit, then the transaction is either approved or it receives a strong customer authentication (SCA) challenge based on `sca_lvp_transaction_limit` and `sca_lvp_transactions_currency`.
          readOnly: true
          type: number
      type: object
    tag:
      properties:
        name:
          description: Name of the tag.
          type: string
        value:
          description: Value of the tag.
          type: string
      type: object
    terminal_model:
      description: |-
        Contains information about the point of sale, including details on how the card was presented.

        Returned if provided by the card network, and the request uses Transaction Model v1 of the Marqeta Core API.
        Not returned for Transaction Model v2 requests.
      properties:
        card_presence:
          description: Indicates whether the card was present during the transaction.
          type: string
        cardholder_presence:
          description: Indicates whether the cardholder was present during the transaction.
          type: string
        partial_approval_capable:
          description:
            Indicates whether the card acceptor or terminal supports partial-approval
            transactions.
          type: string
        pin_present:
          description: Indicates whether the cardholder entered a PIN during the transaction.
          type: string
        special_condition_indicator:
          description: |-
            Indicates a higher-risk operation, such as a quasi-cash or cryptocurrency transaction.

            These transactions typically involve non-financial institutions.
          enum:
            - UNSPECIFIED
            - CRYPTOCURRENCY_PURCHASE
            - QUASI_CASH
            - DEBT_PAYMENT
          type: string
        tid:
          description: Card acceptor or terminal identification number.
          type: string
      type: object
    text:
      description: Specifies personalized text that appears on the card.
      properties:
        name_line_1:
          $ref: "#/components/schemas/text_value"
        name_line_2:
          $ref: "#/components/schemas/text_value"
        name_line_3:
          $ref: "#/components/schemas/text_value"
      required:
        - name_line_1
      type: object
    text_value:
      properties:
        value:
          description: Line of personalized text printed on the card.
          type: string
      type: object
    token_request:
      properties:
        account_number:
          description: Payment card account number.
          type: string
        business_token:
          description: |-
            Unique identifier of the business account holder.
            This token is required if the `user_token` is not included.

            Send a `GET` request to `/businesses` to retrieve business tokens.
          maxLength: 36
          minLength: 1
          type: string
        cvv_number:
          description: Payment card CVV2 number.
          maxLength: 4
          minLength: 3
          type: string
        exp_date:
          description: Payment card expiration date.
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.
          type: boolean
        postal_code:
          description: Postal code of the account holder (user or business).
          type: string
        token:
          description: |-
            Unique identifier of the funding account.
            If you do not include a token, the system will generate one automatically.
            As this token is necessary for use in other calls, we recommend that you define a simple and easy to remember string rather than letting the system generate a token for you.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        user_token:
          description: |-
            Unique identifier of the user account holder.
            This token is required if the `business_token` is not included.

            Send a `GET` request to `/users` to retrieve user tokens.
          maxLength: 36
          minLength: 1
          type: string
        zip:
          description: United States ZIP code of the account holder (user or business).
          type: string
      required:
        - account_number
        - cvv_number
        - exp_date
      type: object
    token_service_provider:
      description:
        Contains information held and provided by the token service provider
        (card network).
      properties:
        correlation_id:
          description:
            Unique value representing a tokenization request (Mastercard
            only).
          type: string
        pan_reference_id:
          description:
            Unique identifier of the digital wallet token primary account
            number (PAN) within the card network.
          type: string
        token_assurance_level:
          description:
            _(Mastercard only)_ Represents the confidence level in the
            digital wallet token.
          type: string
        token_eligibility_decision:
          description:
            Digital wallet's decision as to whether the digital wallet
            token should be provisioned.
          type: string
        token_expiration:
          description: Expiration date of the digital wallet token.
          type: string
        token_pan:
          description: Primary account number (PAN) of the digital wallet token.
          type: string
        token_reference_id:
          description:
            Unique identifier of the digital wallet token within the card
            network.
          type: string
        token_requestor_id:
          description: |-
            Unique numerical identifier of the token requestor within the card network.
            These ID numbers map to `token_requestor_name` field values as follows:

            *Mastercard*

            * 50110030273  `APPLE_PAY`
            * 50120834693  `ANDROID_PAY`
            * 50139059239  `SAMSUNG_PAY`

            *Visa*

            * 40010030273  `APPLE_PAY`
            * 40010075001  `ANDROID_PAY`
            * 40010043095  `SAMSUNG_PAY`
            * 40010075196  `MICROSOFT_PAY`
            * 40010075338  `VISA_CHECKOUT`
            * 40010075449  `FACEBOOK`
            * 40010075839  `NETFLIX`
            * 40010077056  `FITBIT_PAY`
            * 40010069887  `GARMIN_PAY`
          type: string
        token_requestor_name:
          description: |-
            Name of the token requestor within the card network.

            *NOTE:* The list of example values for this field is maintained by the card networks and is subject to change.
          type: string
        token_score:
          description: Token score assigned by the digital wallet.
          type: string
        token_type:
          description: Type of the digital wallet token.
          type: string
      required:
        - pan_reference_id
      type: object
    token_update_request:
      properties:
        active:
          default: true
          description: Indicates whether the card funding source is active.
          type: boolean
        exp_date:
          description: Expiration date for the payment card.
          type: string
        is_default_account:
          default: false
          description: |-
            If there are multiple funding sources, this field specifies which source is used by default in funding calls.
            If there is only one funding source, the system ignores this field and always uses that source.
          type: boolean
      required:
        - exp_date
      type: object
    transaction_card_acceptor:
      description: Contains information about the merchant.
      properties:
        address:
          description: |-
            Card acceptor's address.
            May be returned if the request uses Transaction Model v1 of the Marqeta Core API.
            Not returned for Transaction Model v2 requests.
          type: string
        city:
          description: Card acceptor's city.
          type: string
        country_code:
          description: |-
            Card acceptor's country code.
            May be returned if the request uses Transaction Model v2 of the Marqeta Core API.
            Not returned for Transaction Model v1 requests.
          type: string
        country_of_origin:
          description: |-
            The merchant's country of origin.

            A merchant's country of origin can be different from the country in which the merchant is located.
            For example, embassies are physically located in countries that are not their country of origin: a Mexican embassy might be physically located in Singapore, but the country of origin is Mexico.

            This field is included when the cardholder conducts a transaction with a government-controlled merchant using a Marqeta-issued card.
          type: string
        customer_service_phone:
          type: string
        independent_sales_organization_id:
          type: string
        mcc:
          description: Merchant category code (MCC).
          type: string
        mcc_groups:
          description: An array of `mcc_groups`.
          items:
            type: string
          type: array
        merchant_tax_id:
          type: string
        mid:
          description: The merchant identifier.
          type: string
        name:
          description: Card acceptor's name.
          type: string
        network_assigned_id:
          type: string
        network_mid:
          description: The merchant identifier on the card network.
          type: string
        payment_facilitator_id:
          type: string
        payment_facilitator_name:
          description: |-
            The name of the payment facilitator, including the sub-merchant identifier, of an original credit transaction.
            This field is returned when a payment facilitator participates in the transaction.
          type: string
        phone:
          type: string
        poi:
          $ref: "#/components/schemas/terminal_model"
        postal_code:
          description: Card acceptor's postal code.
          type: string
        special_merchant_id:
          type: string
        state:
          description: |-
            Two-character state, province, or territorial abbreviation.

            For a complete list of valid state and province abbreviations, see <</core-api/kyc-verification#_valid_state_provincial_and_territorial_abbreviations, Valid state, provincial, and territorial abbreviations>>.

            *Note*: Non-US merchants may return more than 2 char for this field.
          type: string
        sub_merchant_id:
          type: string
        transfer_service_provider_name:
          description: |-
            The name of the transfer service provider of a money transfer original credit transaction.
            This field is included when a transfer service provider participates in the transaction.
          type: string
        url:
          type: string
      type: object
    transaction_controls:
      description: Controls transactional characteristics of card usage.
      properties:
        accepted_countries_token:
          description: |-
            Set to `accept_us_only` to allow transactions only within the US.

            Set to `decline_ofac_countries` to allow international transactions except with countries that the Financial Action Task Force (FATF) and Office of Foreign Assets Control (OFAC) have identified as high risk.

            Users with the Admin role can create and update additional lists of accepted countries for transactions at the `/acceptedcountries` endpoint.
            See <</core-api/accepted-countries, Accepted Countries>>.
          type: string
        address_verification:
          $ref: "#/components/schemas/avs_controls"
        allow_chip_fallback:
          default: false
          description:
            Indicates whether to allow transactions where a Europay Mastercard
            and Visa (EMV) chip-enabled card was processed using the magstripe as
            fallback.
          type: boolean
        allow_first_pin_set_via_financial_transaction:
          default: false
          description: |-
            *WARNING:* This field is deprecated and will be unsupported in a future release.

            Allows cardholders to define a personal identification number (PIN) as they complete their first PIN-debit transaction.
          type: boolean
        allow_gpa_auth:
          default: false
          description: |-
            If set to `true`, transactions can be authorized using GPA funds.

            *NOTE:* For most programs, this field should be set to `true`.
          type: boolean
        allow_mcc_group_authorization_controls:
          default: false
          description: |-
            The <</core-api/mcc-groups, MCC group>> `authorization_controls` object allows you to automatically increase authorization holds and to specify authorization expiration times based on merchant type.
            By default, these settings apply to all cards in your program.
            You can, however, exempt cards associated with a particular card product by setting this field to `false`.

            *NOTE:* Partial authorizations are disallowed if this field is set to `true`.
          type: boolean
        allow_network_load:
          default: false
          description: |-
            Indicates whether card network loads are allowed.
            The associated card's state must be `ACTIVE` or the load will be rejected.
          type: boolean
        allow_network_load_card_activation:
          default: false
          description: |-
            Indicates whether card network loads are allowed.
            Sets the associated card's state to `ACTIVE` if its current state is `INACTIVE`.
          type: boolean
        allow_quasi_cash:
          default: false
          description: |-
            Indicates whether quasi-cash transactions are allowed.
            In a quasi-cash transaction, the cardholder purchases an item that can be directly converted to cash, such as traveler's checks, money orders, casino chips, or lottery tickets.
          type: boolean
        always_require_icc:
          default: false
          description:
            If set to `true`, cards of this card product type require an
            Integrated Circuit Card.
          type: boolean
        always_require_pin:
          default: false
          description:
            If set to `true`, cards of this card product type require a
            personal identification number (PIN).
          type: boolean
        enable_credit_service:
          default: false
          type: boolean
        enable_partial_auth_approval:
          default: false
          description: |-
            Set to `true` to enable partial authorizations.

            When this setting is `false` and the requested authorization amount exceeds available funds, the transaction is declined.
            When this setting is `true` and the requested authorization amount exceeds available funds, the transaction is authorized for the amount of available funds.
          type: boolean
        ignore_card_suspended_state:
          default: false
          description: |-
            Allows transactions to be approved even if the card's `state = SUSPENDED`.
            When this field is set to `true`, the card behaves as if its `state = ACTIVE`.
          type: boolean
        notification_language:
          description: |-
            Specifies the language for 3D Secure and digital wallet token notifications sent to cardholders under this card program.

            You can send notifications to your cardholders in the following languages:

            * *ces*  Czech
            * *deu*  German
            * *eng*  English
            * *fra*  French
            * *grc*  Greek
            * *ita*  Italian
            * *nld*  Dutch
            * *pol*  Polish
            * *prt*  Portuguese
            * *rou*  Romanian
            * *spa*  Spanish
            * *swe*  Swedish

            By default, notifications are sent in English.

            To specify the language for OTP notifications at the user level, see <</core-api/users, Users>>.
            Languages set at the user level take precedence over the language set at the card product level.
          type: string
        quasi_cash_exempt_merchant_group_token:
          description: |-
            The token of the merchant group that you want to exempt from quasi-cash transaction authorization control, allowing your cardholders to conduct quasi-cash transactions.
            In a quasi-cash transaction, the cardholder purchases an item that can be directly converted to cash, such as traveler's checks, money orders, casino chips, or lottery tickets.

            You can specify a merchant group token in addition to whatever merchant identifiers you listed in the `quasi_cash_exempt_mids` field, if any.
            For more information, see <</core-api/merchant-groups, Merchant Groups>>.
          maxLength: 36
          minLength: 1
          type: string
        quasi_cash_exempt_mids:
          description: |-
            Comma-separated list of merchant identifiers that you want to exempt from quasi-cash transaction authorization control, allowing your cardholders to conduct quasi-cash transactions.
            In a quasi-cash transaction, the cardholder purchases an item that can be directly converted to cash, such as traveler's checks, money orders, casino chips, or lottery tickets.
          type: string
        require_card_not_present_card_security_code:
          default: false
          description:
            A value of `true` indicates that if `card_presence_required`
            is `true`, the card's security code is required.
          type: boolean
        strong_customer_authentication_limits:
          $ref: "#/components/schemas/strong_customer_authentication_limits"
      type: object
    transaction_metadata:
      description: |-
        Contains merchant-provided metadata related to the transaction, including details about lodging- and transit-related purchases.

        May be returned if the request uses Transaction Model v2 of the Marqeta Core API.
        Not returned for Transaction Model v1 requests.
      properties:
        airline:
          $ref: "#/components/schemas/airline"
        authorization_life_cycle:
          description: Number of days the pre-authorization is in effect.
          format: int32
          type: integer
        cross_border_transaction:
          default: false
          description:
            Whether the transaction is cross-border, i.e., when the merchant
            and the cardholder are located in two different countries.
          type: boolean
        is_deferred_authorization:
          type: boolean
        is_lodging_auto_rental:
          default: false
          description: Whether the transaction is a lodging or vehicle rental.
          type: boolean
        lodging_auto_rental_start_date:
          description: Date and time when the lodging check-in or vehicle rental began.
          format: date-time
          type: string
        moto_indicator:
          description: Indicates the type of mail or telephone order transaction.
          enum:
            - UNKNOWN
            - MANUAL
            - RECURRING
            - INSTALLMENT
            - OTHERS
          type: string
        one_leg_out:
          type: boolean
        payment_channel:
          description: Channel from which the transaction was originated.
          enum:
            - OTHER
            - ATM
            - ECOMMERCE
            - MAIL
            - PHONE
            - MOTO
          type: string
        special_purchase_id:
          type: string
        transaction_category:
          description: Industry for which the transaction was originated.
          enum:
            - RETAIL_SALE
            - BILL_PAY
            - HOTEL
            - HEALTH_CARE
            - RESTAURANT
            - AUTO_RENTAL
            - AIRLINE
            - PAYMENT
            - HOSPITALIZATION_COLLEGE
            - PHONE_MAIL_ECOMMERCE
            - ATM
            - TRANSIT
          type: string
        transit:
          $ref: "#/components/schemas/transit"
      type: object
    transaction_model:
      properties:
        account_funding:
          $ref: "#/components/schemas/account_funding"
        acquirer:
          $ref: "#/components/schemas/acquirer"
        acquirer_fee_amount:
          description: |-
            Indicates the amount of the acquirer fee.
            Account holders are sometimes charged an acquirer fee for card use at ATMs, fuel dispensers, and so on.
          type: number
        acquirer_reference_data:
          type: string
        acquirer_reference_id:
          description: |-
            Acquirer-assigned unique identifier of the transaction.
            Useful for settlement and reconciliation.
          type: string
        acting_user_token:
          description: |-
            Unique identifier of the user who conducted the transaction.
            This might be a child user configured to share its parent's account balance.
          maxLength: 36
          minLength: 0
          type: string
        address_verification:
          $ref: "#/components/schemas/address_verification_model"
        advice_reason_code:
          type: string
        advice_reason_details:
          type: string
        amount:
          description: Amount of the transaction.
          type: number
        amount_to_be_released:
          description: |-
            Amount of original authorization to be released.
            This field appears in final clearing transactions where the clearing amount is lower than the authorization amount.
          type: number
        approval_code:
          description:
            Unique identifier assigned to an authorization, printed on
            the receipt at point of sale.
          type: string
        atc_information:
          $ref: "#/components/schemas/atc_information"
        auto_reload:
          $ref: "#/components/schemas/auto_reload_model"
        bank_transfer_token:
          type: string
        batch_number:
          description: The batch number of the transaction.
          type: string
        business:
          $ref: "#/components/schemas/business_metadata"
        business_token:
          description:
            Unique identifier of the business that owns the account that
            funded the transaction.
          maxLength: 36
          minLength: 0
          type: string
        card:
          $ref: "#/components/schemas/card_response"
        card_acceptor:
          $ref: "#/components/schemas/transaction_card_acceptor"
        card_holder_model:
          $ref: "#/components/schemas/user_card_holder_response"
        card_product_token:
          maxLength: 36
          minLength: 0
          type: string
        card_security_code_verification:
          $ref: "#/components/schemas/card_security_code_verification"
        card_token:
          description: |-
            Unique identifier of the card.
            Useful when a single account holder has multiple cards.
          maxLength: 36
          minLength: 0
          type: string
        cardholder_authentication_data:
          $ref: "#/components/schemas/cardholder_authentication_data"
        cash_back_amount:
          description: |-
            Amount of cash back requested by the cardholder during the transaction.
            Included in the total transaction amount.
          type: number
        chargeback:
          $ref: "#/components/schemas/chargeback_response"
        clearing_record_sequence_number:
          description:
            A sequence number that identifies a specific clearing message
            among multiple clearing messages for an authorization.
          type: string
        created_time:
          description: |-
            Date and time when the Marqeta platform created the transaction entry, in UTC format.
            For example, when Marqeta processed the clearing record for a refund.
          format: date-time
          type: string
        currency_code:
          description: Currency type of the transaction.
          type: string
        currency_conversion:
          $ref: "#/components/schemas/currency_conversion"
        deferred_settlement_days:
          type: string
        digital_wallet_token:
          $ref: "#/components/schemas/digital_wallet_token"
        dispute:
          $ref: "#/components/schemas/DisputeModel"
        duration:
          description: Duration of the transaction on Marqeta's servers, in milliseconds.
          format: int32
          type: integer
        enhanced_data_token:
          description: The enhanced commercial card data token for the transaction.
          type: string
        fee:
          $ref: "#/components/schemas/fee"
        fee_transfer:
          $ref: "#/components/schemas/fee_transfer_response"
        fees:
          description: |-
            List of fees associated with the transaction.

            This array is returned if it exists in the resource.
          items:
            $ref: "#/components/schemas/network_fee_model"
          type: array
        fraud:
          $ref: "#/components/schemas/fraud_view"
        from_account:
          description: Specifies the account type for ATM transactions.
          type: string
        gpa:
          $ref: "#/components/schemas/cardholder_balance"
        gpa_order:
          $ref: "#/components/schemas/gpa_response"
        gpa_order_unload:
          $ref: "#/components/schemas/gpa_returns"
        identifier:
          description: Sequential identifier of the transaction.
          type: string
        incremental_authorization_transaction_tokens:
          description: An array of incremental authorization transaction tokens.
          items:
            type: string
          type: array
        interchange_rate_descriptor:
          type: string
        is_preauthorization:
          default: false
          description: Indicates if the transaction is a pre-authorization.
          type: boolean
        isaIndicator:
          description:
            The international service assessment indicator indicates if
            an ISA fee is applicable to the transaction.
          enum:
            - MULTI_CURRENCY
            - SINGLE_CURRENCY
            - REBATE_CANCELLED
            - MULTI_CURRENCY_NON_US_COUNTRIES
            - SINGLE_CURRENCY_PAID_BY_ISSUER
            - NO_CHARGE_ASSESSED
          type: string
        issuer_interchange_amount:
          description: The amount of interchange charged by the card issuer.
          type: number
        issuer_payment_node:
          description:
            Unique identifier of the Marqeta platform server that received
            the transaction from the card network.
          type: string
        issuer_received_time:
          description:
            Date and time when the Marqeta platform received the transaction
            from the card network, in UTC.
          type: string
        local_transaction_date:
          format: date-time
          type: string
        merchant:
          $ref: "#/components/schemas/merchant_response_model"
        msa_order_unload:
          $ref: "#/components/schemas/msa_returns"
        multi_clearing_sequence_count:
          description: |-
            If an authorization has multiple clearing transactions, this field displays their total number.
            For example, if an authorization has four clearing transactions, the sequence count is `04`.
          type: string
        multi_clearing_sequence_number:
          description: |-
            If an authorization has multiple clearing transactions, this field displays the sequence number for the clearing transaction.
            For example, if this is the second clearing transaction of four, the sequence number is `02`.
          type: string
        national_net_cpd_of_original:
          type: string
        network:
          description: Indicates which card network was used to complete the transactions.
          type: string
        network_metadata:
          $ref: "#/components/schemas/network_metadata"
        network_reference_id:
          description: |-
            Network-assigned unique identifier of the transaction.
            Useful for settlement and reconciliation.
          type: string
        original_credit:
          $ref: "#/components/schemas/original_credit"
        peer_transfer:
          $ref: "#/components/schemas/peer_transfer_response"
        polarity:
          description: Indicates whether the transaction is credit or debit.
          enum:
            - CREDIT
            - DEBIT
            - PENDING_CREDIT
            - PENDING_DEBIT
          type: string
        pos:
          $ref: "#/components/schemas/pos"
        preceding_related_transaction_token:
          description: |-
            Returned for final transaction types.

            Unique identifier of the preceding related transaction.
            Useful for identifying the transaction that preceded the current one.

            For example, `authorization`, a temporary transaction type, precedes and is completed by `authorization.clearing`, a final transaction type.
            In this case, the `authorization` token is returned with this field.
            For which transaction types are temporary or final, see <</core-api/event-types#_transaction_events, Transaction events in Event Types>>.
          type: string
        preceding_transaction:
          $ref: "#/components/schemas/preceding_transaction"
        program:
          $ref: "#/components/schemas/program"
        program_transfer:
          $ref: "#/components/schemas/program_transfer_response"
        real_time_fee_group:
          $ref: "#/components/schemas/real_time_fee_group"
        request_amount:
          description: Merchant-requested amount, including any fees.
          type: number
        response:
          $ref: "#/components/schemas/response"
        settlement_date:
          description: |-
            Date and time when funds were moved for a transaction, in UTC.
            For example, in the case of a refund, when funds were credited to the cardholder.
          format: date-time
          type: string
        standin_approved_by:
          description: |-
            Indicates which party approved a transaction: the card network using stand-in processing, or Marqeta using Commando Mode.
            Returned only when a transaction is approved.
          type: string
        standin_by:
          description:
            "Indicates which party approved a transaction: the card network
            using stand-in processing, or Marqeta using Commando Mode."
          type: string
        standin_reason:
          description:
            Indicates why the card network handled a transaction requiring
            stand-in processing.
          type: string
        state:
          description: |-
            Current state of the transaction.
            For more information about the `state` field, see <</developer-guides/about-transactions#_the_transaction_lifecycle, The transaction lifecycle>>.
          enum:
            - PENDING
            - CLEARED
            - COMPLETION
            - DECLINED
            - ERROR
          type: string
        store:
          $ref: "#/components/schemas/store_response_model"
        subnetwork:
          description: |-
            Indicates which subnetwork was used to complete the transaction.
            Possible values include the following:

            * *VISANET*  Used for VisaNet signature-based transactions.
            * *VISANETDEBIT*  Used for VisaNet Debit PIN-based transaction.
            * *VISAINTERLINK*  Used for Visa Interlink PIN-based transactions.
            * *VISAPLUS*  Used for ATM withdrawals on Visa.
            * *MAESTRO*  Used for PIN-based transactions on Mastercard.
            * *CIRRUS*  Used for ATM withdrawals on Mastercard.
            * *MASTERCARDDEBIT*  Used for signature-based transactions on Mastercard.
            * *GATEWAY_JIT*  Used for Gateway JIT Funding transactions.
            * *MANAGED_JIT*  Used for Managed JIT Funding transactions or for transactions that occur while Commando Mode is enabled.
          type: string
        token:
          description: |-
            Unique identifier of the transaction, formatted as a UUID.

            *NOTE:* For subsequent related transactions, this token value appears as the `preceding_related_transaction_token`.
          maxLength: 36
          minLength: 1
          readOnly: true
          type: string
        transaction_attributes:
          additionalProperties:
            type: string
          description: Additional transaction attributes.
          type: object
        transaction_metadata:
          $ref: "#/components/schemas/transaction_metadata"
        type:
          description: |-
            Transaction event type.
            For more information about the `type` field, see <</core-api/event-types#_transaction_events, Transaction events>>.
          enum:
            - gpa.credit
            - gpa.credit.pending
            - gpa.credit.pending.reversal
            - gpa.credit.reversal
            - gpa.credit.networkload
            - gpa.credit.networkload.reversal
            - gpa.debit.networkload
            - gpa.debit
            - gpa.debit.pending
            - gpa.debit.pending.reversal
            - gpa.grant
            - gpa.credit.issueroperator
            - gpa.debit.issueroperator
            - gpa.credit.chargeback
            - gpa.credit.chargeback.reversal
            - gpa.credit.billpayment
            - gpa.credit.authorization.billpayment
            - gpa.credit.authorization.billpayment.reversal
            - msa.credit.pending
            - msa.credit.pending.reversal
            - msa.credit.reversal
            - msa.credit
            - msa.debit.pending
            - msa.debit.pending.reversal
            - msa.debit
            - msa.credit.chargeback
            - msa.credit.chargeback.reversal
            - authorization
            - authorization.advice
            - authorization.reversal
            - authorization.clearing
            - authorization.reversal.issuerexpiration
            - dispute.credit
            - dispute.debit
            - authorization.clearing.chargeback
            - authorization.clearing.chargeback.reversal
            - refund
            - pindebit.atm.withdrawal
            - pindebit.balanceinquiry
            - pindebit.cashback
            - pindebit
            - programreserve.credit
            - programreserve.debit
            - fee.charge.pending
            - fee.charge
            - fee.charge.refund
            - fee.charge.reversal
            - funds.expire
            - reward.earn
            - transfer.peer
            - transfer.fee
            - account.funding.authorization
            - account.funding.authorization.reversal
            - account.funding.authorization.clearing
            - account.funding.auth_plus_capture
            - account.funding.auth_plus_capture.reversal
            - account.credit
            - account.debit
            - balanceinquiry
            - authorization.atm.withdrawal
            - authorization.clearing.atm.withdrawal
            - authorization.cashback
            - authorization.clearing.cashback
            - transfer.program
            - authorization.quasi.cash
            - authorization.clearing.quasi.cash
            - authorization.incremental
            - gpa.credit.authorization
            - gpa.credit.authorization.reversal
            - gpa.debit.authorization
            - gpa.debit.reversal
            - original.credit.authorization
            - original.credit.authorization.reversal
            - original.credit.authorization.clearing
            - original.credit.auth_plus_capture
            - original.credit.auth_plus_capture.reversal
            - refund.authorization
            - refund.authorization.advice
            - refund.authorization.clearing
            - refund.authorization.reversal
            - token.activation-request
            - token.advice
            - pindebit.authorization
            - pindebit.authorization.clearing
            - pindebit.authorization.reversal
            - pindebit.authorization.reversal.issuerexpiration
            - authorization.standin
            - authorization.clearing.chargeback.completed
            - authorization.clearing.chargeback.provisional.credit
            - authorization.clearing.chargeback.provisional.debit
            - authorization.clearing.chargeback.writeoff
            - directdeposit.credit
            - directdeposit.credit.pending
            - directdeposit.credit.reject
            - directdeposit.credit.pending.reversal
            - directdeposit.credit.reversal
            - directdeposit.debit
            - directdeposit.debit.pending
            - directdeposit.debit.reject
            - directdeposit.debit.reversal
            - directdeposit.debit.pending.reversal
            - pindebit.chargeback
            - pindebit.chargeback.completed
            - pindebit.chargeback.provisional.credit
            - pindebit.chargeback.provisional.debit
            - pindebit.chargeback.reversal
            - pindebit.chargeback.writeoff
            - pindebit.credit.adjustment
            - pindebit.quasicash
            - pindebit.quasi.cash
            - pindebit.refund
            - pindebit.refund.reversal
            - pindebit.reversal
            - pindebit.transfer
            - pushtocard.debit
            - pushtocard.reversal
            - credit.adjustment
            - debit.adjustment
            - unknown
          readOnly: true
          type: string
        user:
          $ref: "#/components/schemas/cardholder_metadata"
        user_token:
          description:
            Unique identifier of the user who owns the account that funded
            the transaction; subsequent related transactions retain the same `user_token`,
            even if the card used to complete the transaction moves to another user.
          maxLength: 36
          minLength: 0
          type: string
        user_transaction_time:
          description: |-
            Date and time when the user initiated the transaction, in UTC.
            For example, when a merchant performed the original authorization for a refund.
          format: date-time
          type: string
      required:
        - acting_user_token
        - amount
        - state
        - token
        - type
      type: object
    transaction_options:
      properties:
        additional_data:
          type: string
        card_expiration_date_yymm:
          type: string
        database_transaction_timeout:
          format: int32
          type: integer
        encryption_key_id:
          type: string
        is_async:
          default: false
          type: boolean
        pre_auth_time_limit:
          type: string
        send_expiration_date:
          default: false
          type: boolean
        send_track_data:
          default: false
          type: boolean
        transaction_timeout_threshold_seconds:
          format: int64
          type: integer
        transaction_token:
          type: string
      type: object
    transit:
      description:
        Contains merchant-provided, transit-related metadata related to
        the transaction.
      properties:
        transaction_type:
          description: Type of transit transaction.
          enum:
            - PRE_FUNDED
            - REAL_TIME_AUTHORIZED
            - POST_AUTHORIZED_AGGREGATED
            - AUTHORIZED_AGGREGATED_SPLIT_CLEARING
            - OTHER
            - DEBIT_RECOVERY
          type: string
        transportation_mode:
          description: Mode of transportation.
          enum:
            - BUS
            - TRAIN
            - WATER_BORNE_VEHICLE
            - TOLL
            - PARKING
            - TAXI
            - PARA_TRANSIT
            - SELF_DRIVE_VEHICLE
            - COACH
            - LOCOMOTIVE
            - POWERED_MOTOR_VEHICLE
            - TRAILER
            - INTER_CITY
            - CABLE_CAR
          type: string
      type: object
    triggered_rule:
      description:
        Provides a list of rules triggered by a fraud event, along with
        the information on tags and rule characteristics.
      properties:
        alert:
          description: Indicates if the rule triggered an alert.
          type: boolean
        entity_type:
          description: The entity type where the triggered rule was defined.
          type: string
        rule_name:
          description:
            Name of the rule, as defined in the Real-Time Decisioning dashboard
            that was triggered.
          type: string
        suppress_alert:
          description:
            Indicates if the triggered rule has `suppress_alert` in the
            definition.
          type: boolean
        tags:
          description: All the tags defined in the triggered rule.
          items:
            $ref: "#/components/schemas/tag"
          type: array
      type: object
    unload_request_model:
      properties:
        amount:
          description: Amount of funds to return to the funding source.
          type: number
        funding_source_address_token:
          description: |-
            Unique identifier of the funding source to use for this GPA unload order.

            Send a `GET` request to `/fundingsources/addresses/user/{token}` to retrieve addresses for a specific user.
          maxLength: 36
          minLength: 1
          type: string
        memo:
          description: Additional descriptive text about the GPA unload.
          maxLength: 99
          minLength: 0
          type: string
        original_order_token:
          description: Unique identifier of the original GPA order.
          maxLength: 36
          minLength: 1
          type: string
        tags:
          description: Comma-delimited list of tags describing the GPA unload order.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the GPA unload order.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - amount
        - original_order_token
      type: object
    user_association:
      description: Associates each card with a user.
      properties:
        single_inventory_user:
          default: false
          description: |-
            Set to `true` to associate all cards with the same user.
            Set to `false` to associate each card with a different user.
            When set to `false`, users are generated automatically and associated with the cards.
          type: boolean
        single_inventory_user_token:
          default: "false"
          description: |-
            If `single_inventory_user=true`, use this field to specify the token of an existing user.
            All cards in the order will be associated with this user.
          maxLength: 36
          minLength: 1
          type: string
      type: object
    user_card_holder_response:
      description: Contains information about a cardholder.
      properties:
        account_holder_group_token:
          description: Associates the specified account holder group with the cardholder.
          maxLength: 36
          minLength: 0
          type: string
        active:
          default: false
          description:
            Specifies if the cardholder is in the `ACTIVE` state on the
            Marqeta platform.
          type: boolean
        address1:
          description: Cardholder's address.
          maxLength: 255
          minLength: 0
          type: string
        address2:
          description: Additional address information for the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        authentication:
          $ref: "#/components/schemas/Authentication"
        birth_date:
          description: Cardholder's date of birth.
          type: string
        business_token:
          description: Unique identifier of the business resource.
          type: string
        city:
          description: City where the cardholder resides.
          maxLength: 40
          minLength: 0
          type: string
        company:
          description: Company name.
          maxLength: 255
          minLength: 0
          type: string
        corporate_card_holder:
          default: false
          description: Specifies if the cardholder holds a corporate card.
          type: boolean
        country:
          description: Country where the cardholder resides.
          maxLength: 40
          minLength: 0
          type: string
        created_time:
          description: Date and time when the resource was created, in UTC.
          format: date-time
          type: string
        email:
          description: Valid email address of the cardholder.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: Cardholder's first name.
          maxLength: 40
          minLength: 0
          type: string
        gender:
          description: Gender of the cardholder.
          enum:
            - F
            - M
          maxLength: 1
          minLength: 0
          type: string
        honorific:
          description:
            "Cardholder's title or prefix: Dr., Miss, Mr., Ms., and so
            on."
          maxLength: 10
          minLength: 0
          type: string
        id_card_expiration_date:
          description: Expiration date of the cardholder's identification.
          readOnly: true
          type: string
        id_card_number:
          description: Cardholder's identification card number.
          maxLength: 255
          minLength: 0
          type: string
        identifications:
          description:
            One or more objects containing identifications associated with
            the cardholder.
          items:
            $ref: "#/components/schemas/IdentificationResponseModel"
          type: array
        ip_address:
          description: Cardholder's IP address.
          maxLength: 39
          minLength: 0
          type: string
        last_modified_time:
          description: Date and time when the resource was last updated, in UTC.
          format: date-time
          type: string
        last_name:
          description: Cardholder's last name.
          maxLength: 40
          minLength: 0
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Associates any additional metadata you provide with the cardholder.
          type: object
        middle_name:
          description: Cardholder's middle name.
          maxLength: 40
          minLength: 0
          type: string
        nationality:
          description: Cardholder's nationality.
          maxLength: 255
          minLength: 0
          type: string
        notes:
          description: Any additional information pertaining to the cardholder.
          maxLength: 255
          minLength: 0
          type: string
        parent_token:
          description: Unique identifier of the parent user or business resource.
          maxLength: 36
          minLength: 1
          type: string
        passport_expiration_date:
          description: Expiration date of the cardholder's passport.
          readOnly: true
          type: string
        passport_number:
          description: Cardholder's passport number.
          maxLength: 40
          minLength: 0
          type: string
        password:
          description: Password to the cardholder's user account on the Marqeta platform.
          maxLength: 255
          minLength: 1
          type: string
        phone:
          description: Cardholder's telephone number.
          maxLength: 255
          minLength: 0
          type: string
        postal_code:
          description: Postal code of the cardholder's address.
          maxLength: 10
          minLength: 0
          type: string
        ssn:
          description: Cardholder's Social Security Number (SSN).
          type: string
        state:
          description: State or province where the cardholder resides.
          maxLength: 2
          minLength: 0
          type: string
        status:
          description: Specifies the status of the cardholder on the Marqeta platform.
          enum:
            - UNVERIFIED
            - LIMITED
            - ACTIVE
            - SUSPENDED
            - CLOSED
          type: string
        token:
          description: Unique identifier of the cardholder.
          maxLength: 36
          minLength: 1
          type: string
        uses_parent_account:
          default: false
          description:
            Indicates whether the child shares balances with the parent
            (`true`), or the child's balances are independent of the parent (`false`).
          type: boolean
        zip:
          description: United States ZIP code of the cardholder's address.
          maxLength: 10
          minLength: 0
          type: string
      required:
        - created_time
        - last_modified_time
      type: object
    user_card_holder_search_model:
      properties:
        dda:
          description: |-
            Performs a match on the specified deposit account number.
            Send a `GET` request to `/directdeposits/accounts/{user_token}` to retrieve the deposit account number for a specific cardholder.
          type: string
        email:
          description:
            Performs a non-case-sensitive, exact match on the cardholder's
            `email` field.
          maxLength: 255
          minLength: 1
          type: string
        first_name:
          description: |-
            Performs a non-case-sensitive match on the cardholder's `first_name` field.
            Matching is partial on the beginning of the name.
            For example, a match on "Alex" returns both "Alex" and "Alexander".
          maxLength: 40
          minLength: 0
          type: string
        last_name:
          description: |-
            Performs a non-case-sensitive match on the cardholder's `last_name` field.
            Matching is partial on the beginning of the name.
            For example, a match on "Smith" returns both "Smith" and "Smithfield".
          maxLength: 40
          minLength: 0
          type: string
        phone:
          description: Performs a match on the cardholder's `phone` field.
          maxLength: 255
          minLength: 0
          type: string
        ssn:
          description: Performs a match on the cardholder's identification number.
          type: string
      type: object
    velocity_control_balance_response:
      properties:
        active:
          description: Indicates whether the velocity control is active.
          type: boolean
        amount_limit:
          description:
            Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description:
            If set to `true`, only approved transactions are subject to
            control.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        available:
          $ref: "#/components/schemas/available"
        currency_code:
          description: Three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description:
            If set to `true`, cashbacks from a point of sale are subject
            to control.
          type: boolean
        include_credits:
          description:
            If set to `true`, original credit transactions (OCT) are subject
            to control.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: "#/components/schemas/merchant_scope"
        money_in_transaction:
          $ref: "#/components/schemas/money_in_transaction"
        name:
          description:
            Description of how the velocity control restricts spending,
            for example, "Max spend of $500 per day" or "Max spend of $5000 per month
            for non-exempt employees".
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the velocity control.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description:
            Maximum number of times a card can be used within the time
            period defined by the `velocity_window` field.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          description: |-
            Defines the time period to which the `amount_limit` and `usage_limit` fields apply:

            * *DAY*  one day; days begin at 00:00:00 UTC.
            * *WEEK*  one week; weeks begin Sundays at 00:00:00 UTC.
            * *MONTH*  one month; months begin on the first day of month at 00:00:00 UTC.
            * *LIFETIME*  forever; time period never expires.
            * *TRANSACTION*  a single transaction.
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
      required:
        - amount_limit
        - available
        - currency_code
        - velocity_window
      type: object
    velocity_control_request:
      properties:
        active:
          description: Indicates whether the velocity control is active.
          type: boolean
        amount_limit:
          description:
            Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description:
            If set to `true`, only approved transactions are subject to
            control.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        currency_code:
          description: Three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description:
            If set to `true`, cashbacks from a point of sale are subject
            to control.
          type: boolean
        include_credits:
          description: |-
            If set to `true`, original credit transactions (OCT) are subject to control.
            Your request can contain either a `money_in_transaction` object or the `include_credits` field, not both.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: "#/components/schemas/merchant_scope"
        money_in_transaction:
          $ref: "#/components/schemas/money_in_transaction"
        name:
          description: |-
            Description of how the velocity control restricts spending, for example, "Max spend of $500 per day" or "Max spend of $5000 per month for non-exempt employees".

            Ensure that the description you provide here adequately captures the kind of restriction exerted by this velocity control, because the Marqeta platform will send this information to you in a webhook in the event that the transaction authorization attempt is declined by the velocity control.

            *NOTE:* This field is very important.
            If your program has multiple velocity controls in place, it is not always clear which one prevented the transaction from being approved.
            Adding specific details to this field gives you more contextual information when debugging or monitoring declined authorization attempts.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: |-
            Unique identifier of the velocity control.

            If you do not include a token, the system will generate one automatically.
            This token is necessary for use in other API calls, so we recommend that rather than let the system generate one, you use a simple string that is easy to remember.
            This value cannot be updated.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description: |-
            Maximum number of times a card can be used within the time period defined by the `velocity_window` field.

            If `velocity_window` is set to `TRANSACTION`, do not include a `usage_limit` in your request.

            Set to `-1` to indicate that the card can be used an unlimited number of times.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          description: |-
            Defines the time period to which the `amount_limit` and `usage_limit` fields apply:

            * *DAY*  one day; days begin at 00:00:00 UTC.
            * *WEEK*  one week; weeks begin Sundays at 00:00:00 UTC.
            * *MONTH*  one month; months begin on the first day of month at 00:00:00 UTC.
            * *LIFETIME*  forever; time period never expires.
            * *TRANSACTION*  a single transaction.

            // (2023-05-03): This statement was validated by Processing, as part of a customer inquiry.
            *NOTE:* If set to `DAY`, `WEEK`, or `MONTH`, the velocity control takes effect retroactively from the beginning of the specified period.
            The amount and usage data already collected within the first period is counted toward the limits.

            // (2023-05-03): Commenting this note out, as it is untrue in testing as reported by customers and confirmed by transaction engine team
            //*NOTE:* Editing any of the following fields on a velocity control resets its usage and amount count to 0:

            //* `merchant_scope.mcc`
            //* `merchant_scope.mid`
            //* `merchant_scope.mcc_group`
            //* `association.user_token`
            //* `association.card_product_token`
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
      required:
        - amount_limit
        - currency_code
        - velocity_window
      type: object
    velocity_control_response:
      properties:
        active:
          description: Indicates whether the velocity control is active.
          type: boolean
        amount_limit:
          description:
            Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description:
            If set to `true`, only approved transactions are subject to
            control.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        currency_code:
          description: Three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description:
            If set to `true`, cashbacks from a point of sale are subject
            to control.
          type: boolean
        include_credits:
          description:
            If set to `true`, original credit transactions (OCT) are subject
            to control.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: "#/components/schemas/merchant_scope"
        money_in_transaction:
          $ref: "#/components/schemas/money_in_transaction"
        name:
          description: |-
            Description of how the velocity control restricts spending.
            For example, "Max spend of $500 per day" or "Max spend of $5000 per month for non-exempt employees".
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the velocity control.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description:
            Maximum number of times a card can be used within the time
            period defined by the `velocity_window` field.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          description: |-
            Defines the time period to which the `amount_limit` and `usage_limit` fields apply:

            * *DAY*  one day; days begin at 00:00:00 UTC.
            * *WEEK*  one week; weeks begin Sundays at 00:00:00 UTC.
            * *MONTH*  one month; months begin on the first day of month at 00:00:00 UTC.
            * *LIFETIME*  forever; time period never expires.
            * *TRANSACTION*  a single transaction.
          enum:
            - DAY
            - WEEK
            - MONTH
            - LIFETIME
            - TRANSACTION
          type: string
      required:
        - amount_limit
        - currency_code
        - velocity_window
      type: object
    velocity_control_update_request:
      properties:
        active:
          description: Indicates whether the velocity control is active.
          type: boolean
        amount_limit:
          description:
            Maximum monetary sum that can be cleared within the time period
            defined by the `velocity_window` field.
          exclusiveMinimum: false
          minimum: 0
          type: number
        approvals_only:
          description:
            If set to `true`, only approved transactions are subject to
            control.
          type: boolean
        association:
          $ref: "#/components/schemas/spend_control_association"
        currency_code:
          description: Three-character ISO 4217 currency code.
          type: string
        include_cashback:
          description:
            If set to `true`, cashbacks from a point of sale are subject
            to control.
          type: boolean
        include_credits:
          description: |-
            If set to `true`, original credit transactions are subject to control.
            Your request can contain either a `money_in_transaction` object or the `include_credits` field, not both.
          type: boolean
        include_purchases:
          description: If set to `true`, purchases are subject to control.
          type: boolean
        include_transfers:
          description: If set to `true`, transfers are subject to control.
          type: boolean
        include_withdrawals:
          description: If set to `true`, ATM withdrawals are subject to control.
          type: boolean
        merchant_scope:
          $ref: "#/components/schemas/merchant_scope"
        money_in_transaction:
          $ref: "#/components/schemas/money_in_transaction"
        name:
          description: |-
            Description of how the velocity control restricts spending.
            For example, "Max spend of $500 per day" or "Max spend of $5000 per month for non-exempt employees".

            Ensure that the description you provide here adequately captures the kind of restriction exerted by this velocity control, because the Marqeta platform will send this information to you in a webhook in the event that the transaction authorization attempt is declined by the velocity control.

            *NOTE:* This field is very important.
            If your program has multiple velocity controls in place, it is not always clear which one prevented the transaction from being approved.
            Adding specific details to this field gives you more contextual information when debugging or monitoring declined authorization attempts.
          maxLength: 255
          minLength: 0
          type: string
        token:
          description: Unique identifier of the velocity control resource.
          maxLength: 36
          minLength: 1
          type: string
        usage_limit:
          description: |-
            Maximum number of times a card can be used within the time period defined by the `velocity_window` field.

            If `velocity_window` is set to `TRANSACTION`, do not include a `usage_limit` in your request.
          format: int32
          minimum: -1
          type: integer
        velocity_window:
          description: |-
            Defines the time period to which the `amount_limit` and `usage_limit` fields apply:

            * *DAY*  one day; days begin at 00:00:00 UTC.
            * *WEEK*  one week; weeks begin Sundays at 00:00:00 UTC.
            * *MONTH*  one month; months begin on the first day of month at 00:00:00 UTC.
            * *QUARTER* - three months; quarters begin on January 1, April 1, July 1, and October 1 at 00:00:00 UTC.
            * *YEAR* - twelve months; years begin on January 1 at 00:00:00 UTC.
            * *LIFETIME*  forever; time period never expires.
            * *TRANSACTION*  a single transaction.

            // (2023-05-03): This statement was validated by Processing, as part of a customer inquiry.
            *NOTE:* If set to `DAY`, `WEEK`, or `MONTH`, the velocity control takes effect retroactively from the beginning of the specified period.
            The amount and usage data already collected within the first period is counted toward the limits.

            // (2023-05-03): Commenting this note out, as it is untrue in testing as reported by customers and confirmed by transaction engine team
            //*NOTE:* Editing any of the following fields on a velocity control resets its usage and amount count to 0:

            //* `merchant_scope.mcc`
            //* `merchant_scope.mid`
            //* `merchant_scope.mcc_group`
            //* `association.user_token`
            //* `association.card_product_token`
          enum:
            - DAY
            - WEEK
            - MONTH
            - QUARTER
            - YEAR
            - LIFETIME
            - TRANSACTION
          type: string
      required:
        - token
      type: object
    wallet_provider_card_on_file:
      properties:
        address_verification:
          $ref: "#/components/schemas/digital_wallet_token_address_verification"
        enabled:
          default: false
          description: Specifies if the card on file is enabled.
          type: boolean
      type: object
    wallet_provider_profile:
      description: Contains information held and provided by the digital wallet provider.
      properties:
        account:
          $ref: "#/components/schemas/account"
        device_score:
          description: Score from the device.
          type: string
        pan_source:
          description:
            Source from which the digital wallet provider obtained the
            card primary account number (PAN).
          type: string
        reason_code:
          description: |-
            Reason for the wallet provider's provisioning decision.

            * *01*  Cardholder's wallet account is too new relative to launch.
            * *02*  Cardholder's wallet account is too new relative to provisioning request.
            * *03*  Cardholder's wallet account/card pair is newer than date threshold.
            * *04*  Changes made to account data within the account threshold.
            * *05*  Suspicious transactions linked to this account.
            * *06*  Account has not had activity in the last year.
            * *07*  Suspended cards in the secure element.
            * *08*  Device was put in lost mode in the last seven days for longer than the duration threshold.
            * *09*  The number of provisioning attempts on this device in 24 hours exceeds threshold.
            * *0A*  There have been more than the threshold number of different cards attempted at provisioning to this phone in 24 hours.
            * *0B*  The card provisioning attempt contains a distinct name in excess of the threshold.
            * *0C*  The device score is less than 3.
            * *0D*  The account score is less than 4.
            * *0E*  Device provisioning location outside of the cardholder's wallet account home country.
            * *0G*  Suspect fraud.
          type: string
        recommendation_reasons:
          description: Array of recommendation reasons from the digital wallet provider.
          items:
            type: string
          type: array
        risk_assessment:
          $ref: "#/components/schemas/risk_assessment"
      type: object
    web_push_provisioning:
      properties:
        wpp_apple_card_template_id:
          description:
            Identifier that Apple uses to identify the program to process
            the request for.
          type: string
        wpp_apple_partner_id:
          description:
            Identifier that Apple uses to identify the program to provide
            the correct card art for.
          type: string
        wpp_google_piaid:
          description:
            Identifier that Google uses to identify the program to process
            the request for and to provide the correct card art for.
          type: string
      type: object
    web_push_provisioning_apple_pay_JWS_header:
      description: Contains header data for the JWS object.
      properties:
        kid:
          description:
            Unique identifier of the JSON Web Signature (JWS) public key
            of the key pair used to generate the signature.
          example: 8dc7aed4-29e3-41e4-9cdb-673a05e6615c
          type: string
      required:
        - kid
      type: object
    web_push_provisioning_apple_pay_JWS_model:
      description: Object containing JSON Web Signature (JWS) data.
      properties:
        header:
          $ref: "#/components/schemas/web_push_provisioning_apple_pay_JWS_header"
        payload:
          description: JSON Web Signature (JWS) message payload.
          type: string
        protected:
          description:
            Contains header parameters that are integrity-protected by
            the JSON Web Signature (JWS).
          type: string
        signature:
          description: The JSON Web Signature (JWS).
          example: 5lD1znG2DD2DytqGUcSDOwJQMYbCGDCCCiXxyhpC1zOWTH1Y6jUJFAupl0jEud9nUvw3mmpuSt6zcAE1r4yb0w
          type: string
      required:
        - header
        - payload
        - protected
        - signature
      type: object
    web_push_provisioning_apple_pay_JWT_response:
      properties:
        jws:
          $ref: "#/components/schemas/web_push_provisioning_apple_pay_JWS_model"
        state:
          description: |-
            Unique state associated with the digital wallet token.
            The Marqeta platform returns a universally unique identifier (UUID) in this field.
          example: e2675f06-7e4d-11ec-90d6-0242ac120003
          type: string
      required:
        - jws
        - state
      type: object
    webhook:
      properties:
        endpoint:
          description: Valid URL
          maxLength: 512
          minLength: 1
          type: string
        password:
          description: Authentication password
          type: string
        secret:
          description: Authentication secret
          type: string
        username:
          description: Authentication username
          type: string
      required:
        - endpoint
        - password
        - username
      type: object
    webhook_base_model:
      properties:
        active:
          default: true
          description: Indicates whether the webhook is active.
          type: boolean
        config:
          $ref: "#/components/schemas/webhook_config_model"
        events:
          description: |-
            Specifies the types of events for which notifications are sent.

            The wildcard character `\*` indicates that you receive all webhook notifications, or all notifications of a specified category.
            For example, `\*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.

            *NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.
            For example, you cannot subscribe to `cardtransition.fulfillment.\*` events, but you can subscribe to `cardtransition.*`.
          items:
            type: string
          type: array
        name:
          description: Descriptive name of the webhook.
          maxLength: 64
          minLength: 1
          type: string
      required:
        - config
        - events
        - name
      type: object
    webhook_config_model:
      description: Contains the configuration information for the webhook.
      properties:
        basic_auth_password:
          description: Password for accessing your webhook endpoint.
          maxLength: 50
          minLength: 20
          type: string
        basic_auth_username:
          description: Username for accessing your webhook endpoint.
          maxLength: 50
          minLength: 1
          type: string
        custom_header:
          additionalProperties:
            type: string
          description: Custom headers to be passed along with the request.
          type: object
        secret:
          description: |-
            Randomly chosen string used for implementing HMAC-SHA1.

            HMAC-SHA1 provides an added layer of security by authenticating the message and validating message integrity.
            Using this functionality requires that your webhook endpoint verify the message signature.
            For information about implementing this functionality, see <</developer-guides/signature-verification, Signature Verification>>.
          maxLength: 50
          minLength: 20
          type: string
        url:
          description: URL of your webhook endpoint.
          maxLength: 255
          minLength: 1
          type: string
        use_mtls:
          default: false
          description: Set to `true` to use MTLS for the webhook.
          type: boolean
      required:
        - basic_auth_password
        - basic_auth_username
        - url
      type: object
    webhook_ping_model:
      properties:
        pings:
          description: Array of ping requests to your webhook endpoint.
          items:
            $ref: "#/components/schemas/echo_ping_request"
          type: array
      required:
        - pings
      type: object
    webhook_request_model:
      properties:
        active:
          default: true
          description: Indicates whether the webhook is active.
          type: boolean
        config:
          $ref: "#/components/schemas/webhook_config_model"
        events:
          description: |-
            Specifies the types of events for which notifications are sent.

            The wildcard character `\*` indicates that you receive all webhook notifications, or all notifications of a specified category.
            For example, `\*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.

            *NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.
            For example, you cannot subscribe to `cardtransition.fulfillment.\*` events, but you can subscribe to `cardtransition.*`.
          items:
            type: string
          type: array
        name:
          description: Descriptive name of the webhook.
          maxLength: 64
          minLength: 1
          type: string
        token:
          description: Unique identifier of the webhook.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - config
        - events
        - name
      type: object
    webhook_response_model:
      properties:
        active:
          default: true
          description: |-
            Indicates whether the webhook is active.
            This field is returned if you included it in your webhook.
          type: boolean
        config:
          $ref: "#/components/schemas/webhook_config_model"
        created_time:
          description: Date and time when the webhook event was created, in UTC.
          format: date-time
          type: string
        events:
          description: |-
            Specifies the types of events for which notifications are sent.

            The wildcard character `\*` indicates that you receive all webhook notifications, or all notifications of a specified category.
            For example, `\*` indicates that you receive all webhook notifications; `transaction.*` indicates that you receive all `transaction` webhook notifications.

            *NOTE:* You can only use the wildcard character with the _base_ type events, not subcategories.
            For example, you cannot subscribe to `cardtransition.fulfillment.\*` events, but you can subscribe to `cardtransition.*`.
          items:
            type: string
          type: array
        last_modified_time:
          description:
            Date and time when the associated object was last modified,
            in UTC.
          format: date-time
          type: string
        name:
          description: Descriptive name of the webhook.
          maxLength: 64
          minLength: 1
          type: string
        token:
          description: Unique identifier of the webhook.
          maxLength: 36
          minLength: 1
          type: string
      required:
        - config
        - events
        - name
      type: object
    withdrawal_request_model:
      properties:
        account_type:
          enum:
            - checking
            - savings
            - credit
          type: string
        amount:
          type: number
        card_acceptor:
          $ref: "#/components/schemas/card_acceptor_model"
        card_token:
          maxLength: 36
          minLength: 1
          type: string
        mid:
          maxLength: 50
          minLength: 1
          type: string
        pin:
          maxLength: 15
          minLength: 1
          type: string
        webhook:
          $ref: "#/components/schemas/webhook"
      required:
        - amount
        - card_token
        - mid
      type: object
    xpay_push_tokenize_request_data:
      description: Contains details about a card tokenization push request.
      properties:
        card_type:
          description: Specifies the type of card.
          type: string
        display_name:
          description: |-
            Name of the card as displayed in the digital wallet, typically showing the card brand and last four digits of the primary account number (PAN).
            `Visa 5678`, for example.
          type: string
        extra_provision_payload:
          description: Encrypted card or cardholder details.
          type: string
        last_digits:
          description:
            Last four digits of the primary account number of the physical
            or virtual card.
          type: string
        network:
          description: Specifies the card network of the physical or virtual card.
          type: string
        token_service_provider:
          description:
            Specifies the network that provides the digital wallet token
            service.
          type: string
      type: object
  securitySchemes:
    mqAppAndAccessToken:
      scheme: basic
      type: http
